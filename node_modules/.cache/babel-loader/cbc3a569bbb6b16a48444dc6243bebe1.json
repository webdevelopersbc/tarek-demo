{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\TransactionPage\\\\ActivityFeed\\\\ActivityFeed.example.js\";\nimport React, { Component } from 'react';\nimport { createUser, createCurrentUser, createMessage, createTransaction, createListing, createTxTransition, createReview } from '../../../util/test-data';\nimport { TRANSITION_CONFIRM_PAYMENT, TRANSITION_EXPIRE_REVIEW_PERIOD, TRANSITION_MARK_DELIVERED, TRANSITION_MARK_RECEIVED, TRANSITION_MARK_RECEIVED_FROM_PURCHASED, TRANSITION_REQUEST_PAYMENT, TRANSITION_REVIEW_1_BY_CUSTOMER, TRANSITION_REVIEW_1_BY_PROVIDER, TRANSITION_REVIEW_2_BY_CUSTOMER, TRANSITION_REVIEW_2_BY_PROVIDER, TX_TRANSITION_ACTOR_CUSTOMER, TX_TRANSITION_ACTOR_PROVIDER } from '../../../util/transaction';\nimport ActivityFeed from './ActivityFeed';\n\nconst noop = () => null;\n\nexport const Empty = {\n  component: ActivityFeed,\n  props: {\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'page:TransactionPage'\n};\nexport const WithoutCurrentUser = {\n  component: ActivityFeed,\n  props: {\n    messages: [createMessage('msg1', {}, {\n      sender: createUser('user1')\n    }), createMessage('msg2', {}, {\n      sender: createUser('user2')\n    })],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'page:TransactionPage'\n};\nexport const WithCurrentUser = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    messages: [createMessage('msg1', {}, {\n      sender: createUser('user1')\n    }), createMessage('msg2', {}, {\n      sender: createUser('user2')\n    }), createMessage('msg3', {\n      content: 'ok'\n    }, {\n      sender: createUser('user2')\n    }), createMessage('msg4', {\n      content: 'ok'\n    }, {\n      sender: createUser('user1')\n    }), createMessage('msg5', {}, {\n      sender: createUser('user1')\n    })],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'page:TransactionPage'\n};\nexport const WithTransitions = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      lastTransition: TRANSITION_EXPIRE_REVIEW_PERIOD,\n      transitions: [// this should not be visible in the feed\n      createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REQUEST_PAYMENT\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_CONFIRM_PAYMENT\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_MARK_RECEIVED_FROM_PURCHASED\n      }), // this should not be visible in the feed\n      createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 16, 8, 12)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_EXPIRE_REVIEW_PERIOD\n      })]\n    }),\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'page:TransactionPage'\n};\nexport const WithMessagesTransitionsAndReviews = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user2'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      lastTransition: TRANSITION_REVIEW_2_BY_CUSTOMER,\n      transitions: [createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REQUEST_PAYMENT\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_CONFIRM_PAYMENT\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_MARK_DELIVERED\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 10, 33)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_MARK_RECEIVED\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_REVIEW_1_BY_PROVIDER\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REVIEW_2_BY_CUSTOMER\n      })],\n      reviews: [createReview('review1', {\n        createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)),\n        rating: 3,\n        type: 'ofCustomer'\n      }, {\n        author: createUser('user2'),\n        subject: createUser('user1')\n      }), createReview('review2', {\n        createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)),\n        rating: 5,\n        type: 'ofProvider'\n      }, {\n        author: createUser('user1'),\n        subject: createUser('user2')\n      })]\n    }),\n    messages: [createMessage('msg1', {\n      createdAt: new Date(Date.UTC(2017, 10, 9, 8, 11))\n    }, {\n      sender: createUser('user1')\n    }), createMessage('msg2', {\n      createdAt: new Date(Date.UTC(2017, 10, 9, 8, 14))\n    }, {\n      sender: createUser('user1')\n    }), createMessage('msg3', {\n      createdAt: new Date(Date.UTC(2017, 10, 9, 8, 17))\n    }, {\n      sender: createUser('user2')\n    }), createMessage('msg4', {\n      createdAt: new Date(Date.UTC(2017, 10, 12, 13, 20))\n    }, {\n      sender: createUser('user2')\n    })],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'page:TransactionPage'\n};\nexport const WithAReviewFromBothUsers = {\n  component: ActivityFeed,\n  props: {\n    currentUser: createCurrentUser('user1'),\n    transaction: createTransaction({\n      customer: createUser('user1'),\n      provider: createUser('user2'),\n      listing: createListing('Listing'),\n      reviews: [createReview('review1', {\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        rating: 3,\n        type: 'ofProvider'\n      }, {\n        author: createUser('user1'),\n        subject: createUser('user2')\n      }), createReview('review2', {\n        createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)),\n        rating: 5,\n        type: 'ofCustomer'\n      }, {\n        author: createUser('user2'),\n        subject: createUser('user1')\n      })],\n      lastTransition: TRANSITION_REVIEW_2_BY_PROVIDER,\n      transitions: [createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REVIEW_1_BY_CUSTOMER\n      }), createTxTransition({\n        createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)),\n        by: TX_TRANSITION_ACTOR_PROVIDER,\n        transition: TRANSITION_REVIEW_2_BY_PROVIDER\n      })]\n    }),\n    messages: [],\n    hasOlderMessages: false,\n    onOpenReviewModal: noop,\n    onShowOlderMessages: noop,\n    fetchMessagesInProgress: false\n  },\n  group: 'page:TransactionPage'\n};\n\nclass PagedFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAllMessages: false\n    };\n  }\n\n  render() {\n    const dates = [new Date(Date.UTC(2017, 10, 20, 12)), new Date(Date.UTC(2017, 10, 21, 12)), new Date(Date.UTC(2017, 10, 22, 12)), new Date(Date.UTC(2017, 10, 23, 12)), new Date(Date.UTC(2017, 10, 24, 12)), new Date(Date.UTC(2017, 10, 25, 12)), new Date(Date.UTC(2017, 10, 26, 12))];\n    const currentUser = createCurrentUser('customer');\n    const customer = createUser('customer');\n    const provider = createUser('provider');\n    const trans1 = createTxTransition({\n      createdAt: dates[0],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_REQUEST_PAYMENT\n    });\n    const trans2 = createTxTransition({\n      createdAt: dates[0],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_CONFIRM_PAYMENT\n    });\n    const trans3 = createTxTransition({\n      createdAt: dates[2],\n      by: TX_TRANSITION_ACTOR_PROVIDER,\n      transition: TRANSITION_MARK_DELIVERED\n    }); // Last transition timestamp is interleaved between the last two\n    // messages.\n\n    const trans4 = createTxTransition({\n      createdAt: dates[5],\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\n      transition: TRANSITION_MARK_RECEIVED\n    }); // First message timestamp is interleaved between the first two\n    // transitions.\n\n    const msg1 = createMessage('msg1', {\n      createdAt: dates[1]\n    }, {\n      sender: customer\n    });\n    const msg2 = createMessage('msg2', {\n      createdAt: dates[3]\n    }, {\n      sender: provider\n    });\n    const msg3 = createMessage('msg3', {\n      createdAt: dates[4]\n    }, {\n      sender: customer\n    });\n    const msg4 = createMessage('msg4', {\n      createdAt: dates[6]\n    }, {\n      sender: customer\n    });\n    const transaction = createTransaction({\n      id: 'tx1',\n      lastTransition: TRANSITION_MARK_RECEIVED,\n      lastTransitionedAt: dates[5],\n      transitions: [trans1, trans2, trans3, trans4],\n      listing: createListing('listing'),\n      customer,\n      provider\n    });\n    const messages = this.state.showAllMessages ? [msg1, msg2, msg3, msg4] : [msg2, msg3, msg4];\n\n    const handleShowOlder = () => {\n      console.log('show older messages');\n      this.setState({\n        showAllMessages: true\n      });\n    };\n\n    const feedProps = {\n      currentUser,\n      transaction,\n      messages,\n      hasOlderMessages: !this.state.showAllMessages,\n      onOpenReviewModal: noop,\n      onShowOlderMessages: handleShowOlder,\n      fetchMessagesInProgress: false\n    };\n    return /*#__PURE__*/React.createElement(ActivityFeed, Object.assign({}, feedProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nexport const WithMessagePaging = {\n  component: PagedFeed,\n  props: {},\n  group: 'page:TransactionPage'\n};","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/TransactionPage/ActivityFeed/ActivityFeed.example.js"],"names":["React","Component","createUser","createCurrentUser","createMessage","createTransaction","createListing","createTxTransition","createReview","TRANSITION_CONFIRM_PAYMENT","TRANSITION_EXPIRE_REVIEW_PERIOD","TRANSITION_MARK_DELIVERED","TRANSITION_MARK_RECEIVED","TRANSITION_MARK_RECEIVED_FROM_PURCHASED","TRANSITION_REQUEST_PAYMENT","TRANSITION_REVIEW_1_BY_CUSTOMER","TRANSITION_REVIEW_1_BY_PROVIDER","TRANSITION_REVIEW_2_BY_CUSTOMER","TRANSITION_REVIEW_2_BY_PROVIDER","TX_TRANSITION_ACTOR_CUSTOMER","TX_TRANSITION_ACTOR_PROVIDER","ActivityFeed","noop","Empty","component","props","messages","hasOlderMessages","onOpenReviewModal","onShowOlderMessages","fetchMessagesInProgress","group","WithoutCurrentUser","sender","WithCurrentUser","currentUser","content","WithTransitions","transaction","customer","provider","listing","lastTransition","transitions","createdAt","Date","UTC","by","transition","WithMessagesTransitionsAndReviews","reviews","rating","type","author","subject","WithAReviewFromBothUsers","PagedFeed","constructor","state","showAllMessages","render","dates","trans1","trans2","trans3","trans4","msg1","msg2","msg3","msg4","id","lastTransitionedAt","handleShowOlder","console","log","setState","feedProps","WithMessagePaging"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  createUser,\r\n  createCurrentUser,\r\n  createMessage,\r\n  createTransaction,\r\n  createListing,\r\n  createTxTransition,\r\n  createReview,\r\n} from '../../../util/test-data';\r\nimport {\r\n  TRANSITION_CONFIRM_PAYMENT,\r\n  TRANSITION_EXPIRE_REVIEW_PERIOD,\r\n  TRANSITION_MARK_DELIVERED,\r\n  TRANSITION_MARK_RECEIVED,\r\n  TRANSITION_MARK_RECEIVED_FROM_PURCHASED,\r\n  TRANSITION_REQUEST_PAYMENT,\r\n  TRANSITION_REVIEW_1_BY_CUSTOMER,\r\n  TRANSITION_REVIEW_1_BY_PROVIDER,\r\n  TRANSITION_REVIEW_2_BY_CUSTOMER,\r\n  TRANSITION_REVIEW_2_BY_PROVIDER,\r\n  TX_TRANSITION_ACTOR_CUSTOMER,\r\n  TX_TRANSITION_ACTOR_PROVIDER,\r\n} from '../../../util/transaction';\r\nimport ActivityFeed from './ActivityFeed';\r\n\r\nconst noop = () => null;\r\n\r\nexport const Empty = {\r\n  component: ActivityFeed,\r\n  props: {\r\n    messages: [],\r\n    hasOlderMessages: false,\r\n    onOpenReviewModal: noop,\r\n    onShowOlderMessages: noop,\r\n    fetchMessagesInProgress: false,\r\n  },\r\n  group: 'page:TransactionPage',\r\n};\r\n\r\nexport const WithoutCurrentUser = {\r\n  component: ActivityFeed,\r\n  props: {\r\n    messages: [\r\n      createMessage('msg1', {}, { sender: createUser('user1') }),\r\n      createMessage('msg2', {}, { sender: createUser('user2') }),\r\n    ],\r\n    hasOlderMessages: false,\r\n    onOpenReviewModal: noop,\r\n    onShowOlderMessages: noop,\r\n    fetchMessagesInProgress: false,\r\n  },\r\n  group: 'page:TransactionPage',\r\n};\r\n\r\nexport const WithCurrentUser = {\r\n  component: ActivityFeed,\r\n  props: {\r\n    currentUser: createCurrentUser('user2'),\r\n    messages: [\r\n      createMessage('msg1', {}, { sender: createUser('user1') }),\r\n      createMessage('msg2', {}, { sender: createUser('user2') }),\r\n      createMessage('msg3', { content: 'ok' }, { sender: createUser('user2') }),\r\n      createMessage('msg4', { content: 'ok' }, { sender: createUser('user1') }),\r\n      createMessage('msg5', {}, { sender: createUser('user1') }),\r\n    ],\r\n    hasOlderMessages: false,\r\n    onOpenReviewModal: noop,\r\n    onShowOlderMessages: noop,\r\n    fetchMessagesInProgress: false,\r\n  },\r\n  group: 'page:TransactionPage',\r\n};\r\n\r\nexport const WithTransitions = {\r\n  component: ActivityFeed,\r\n  props: {\r\n    currentUser: createCurrentUser('user2'),\r\n    transaction: createTransaction({\r\n      customer: createUser('user1'),\r\n      provider: createUser('user2'),\r\n      listing: createListing('Listing'),\r\n      lastTransition: TRANSITION_EXPIRE_REVIEW_PERIOD,\r\n      transitions: [\r\n        // this should not be visible in the feed\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_REQUEST_PAYMENT,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_CONFIRM_PAYMENT,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_MARK_RECEIVED_FROM_PURCHASED,\r\n        }),\r\n        // this should not be visible in the feed\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 16, 8, 12)),\r\n          by: TX_TRANSITION_ACTOR_PROVIDER,\r\n          transition: TRANSITION_EXPIRE_REVIEW_PERIOD,\r\n        }),\r\n      ],\r\n    }),\r\n    messages: [],\r\n    hasOlderMessages: false,\r\n    onOpenReviewModal: noop,\r\n    onShowOlderMessages: noop,\r\n    fetchMessagesInProgress: false,\r\n  },\r\n  group: 'page:TransactionPage',\r\n};\r\n\r\nexport const WithMessagesTransitionsAndReviews = {\r\n  component: ActivityFeed,\r\n  props: {\r\n    currentUser: createCurrentUser('user2'),\r\n    transaction: createTransaction({\r\n      customer: createUser('user1'),\r\n      provider: createUser('user2'),\r\n      listing: createListing('Listing'),\r\n      lastTransition: TRANSITION_REVIEW_2_BY_CUSTOMER,\r\n      transitions: [\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_REQUEST_PAYMENT,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_CONFIRM_PAYMENT,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 12)),\r\n          by: TX_TRANSITION_ACTOR_PROVIDER,\r\n          transition: TRANSITION_MARK_DELIVERED,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 10, 33)),\r\n          by: TX_TRANSITION_ACTOR_PROVIDER,\r\n          transition: TRANSITION_MARK_RECEIVED,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)),\r\n          by: TX_TRANSITION_ACTOR_PROVIDER,\r\n          transition: TRANSITION_REVIEW_1_BY_PROVIDER,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_REVIEW_2_BY_CUSTOMER,\r\n        }),\r\n      ],\r\n      reviews: [\r\n        createReview(\r\n          'review1',\r\n          { createdAt: new Date(Date.UTC(2017, 10, 9, 11, 34)), rating: 3, type: 'ofCustomer' },\r\n          { author: createUser('user2'), subject: createUser('user1') }\r\n        ),\r\n        createReview(\r\n          'review2',\r\n          { createdAt: new Date(Date.UTC(2017, 10, 9, 12, 34)), rating: 5, type: 'ofProvider' },\r\n          { author: createUser('user1'), subject: createUser('user2') }\r\n        ),\r\n      ],\r\n    }),\r\n    messages: [\r\n      createMessage(\r\n        'msg1',\r\n        { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 11)) },\r\n        { sender: createUser('user1') }\r\n      ),\r\n      createMessage(\r\n        'msg2',\r\n        { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 14)) },\r\n        { sender: createUser('user1') }\r\n      ),\r\n      createMessage(\r\n        'msg3',\r\n        { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 17)) },\r\n        { sender: createUser('user2') }\r\n      ),\r\n      createMessage(\r\n        'msg4',\r\n        { createdAt: new Date(Date.UTC(2017, 10, 12, 13, 20)) },\r\n        { sender: createUser('user2') }\r\n      ),\r\n    ],\r\n    hasOlderMessages: false,\r\n    onOpenReviewModal: noop,\r\n    onShowOlderMessages: noop,\r\n    fetchMessagesInProgress: false,\r\n  },\r\n  group: 'page:TransactionPage',\r\n};\r\n\r\nexport const WithAReviewFromBothUsers = {\r\n  component: ActivityFeed,\r\n  props: {\r\n    currentUser: createCurrentUser('user1'),\r\n    transaction: createTransaction({\r\n      customer: createUser('user1'),\r\n      provider: createUser('user2'),\r\n      listing: createListing('Listing'),\r\n      reviews: [\r\n        createReview(\r\n          'review1',\r\n          { createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)), rating: 3, type: 'ofProvider' },\r\n          { author: createUser('user1'), subject: createUser('user2') }\r\n        ),\r\n        createReview(\r\n          'review2',\r\n          { createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)), rating: 5, type: 'ofCustomer' },\r\n          { author: createUser('user2'), subject: createUser('user1') }\r\n        ),\r\n      ],\r\n      lastTransition: TRANSITION_REVIEW_2_BY_PROVIDER,\r\n      transitions: [\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 9, 8, 10)),\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_REVIEW_1_BY_CUSTOMER,\r\n        }),\r\n        createTxTransition({\r\n          createdAt: new Date(Date.UTC(2017, 10, 10, 8, 10)),\r\n          by: TX_TRANSITION_ACTOR_PROVIDER,\r\n          transition: TRANSITION_REVIEW_2_BY_PROVIDER,\r\n        }),\r\n      ],\r\n    }),\r\n    messages: [],\r\n    hasOlderMessages: false,\r\n    onOpenReviewModal: noop,\r\n    onShowOlderMessages: noop,\r\n    fetchMessagesInProgress: false,\r\n  },\r\n  group: 'page:TransactionPage',\r\n};\r\n\r\nclass PagedFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showAllMessages: false };\r\n  }\r\n  render() {\r\n    const dates = [\r\n      new Date(Date.UTC(2017, 10, 20, 12)),\r\n      new Date(Date.UTC(2017, 10, 21, 12)),\r\n      new Date(Date.UTC(2017, 10, 22, 12)),\r\n      new Date(Date.UTC(2017, 10, 23, 12)),\r\n      new Date(Date.UTC(2017, 10, 24, 12)),\r\n      new Date(Date.UTC(2017, 10, 25, 12)),\r\n      new Date(Date.UTC(2017, 10, 26, 12)),\r\n    ];\r\n\r\n    const currentUser = createCurrentUser('customer');\r\n    const customer = createUser('customer');\r\n    const provider = createUser('provider');\r\n\r\n    const trans1 = createTxTransition({\r\n      createdAt: dates[0],\r\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n      transition: TRANSITION_REQUEST_PAYMENT,\r\n    });\r\n    const trans2 = createTxTransition({\r\n      createdAt: dates[0],\r\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n      transition: TRANSITION_CONFIRM_PAYMENT,\r\n    });\r\n    const trans3 = createTxTransition({\r\n      createdAt: dates[2],\r\n      by: TX_TRANSITION_ACTOR_PROVIDER,\r\n      transition: TRANSITION_MARK_DELIVERED,\r\n    });\r\n\r\n    // Last transition timestamp is interleaved between the last two\r\n    // messages.\r\n    const trans4 = createTxTransition({\r\n      createdAt: dates[5],\r\n      by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n      transition: TRANSITION_MARK_RECEIVED,\r\n    });\r\n\r\n    // First message timestamp is interleaved between the first two\r\n    // transitions.\r\n    const msg1 = createMessage('msg1', { createdAt: dates[1] }, { sender: customer });\r\n\r\n    const msg2 = createMessage('msg2', { createdAt: dates[3] }, { sender: provider });\r\n    const msg3 = createMessage('msg3', { createdAt: dates[4] }, { sender: customer });\r\n    const msg4 = createMessage('msg4', { createdAt: dates[6] }, { sender: customer });\r\n\r\n    const transaction = createTransaction({\r\n      id: 'tx1',\r\n      lastTransition: TRANSITION_MARK_RECEIVED,\r\n      lastTransitionedAt: dates[5],\r\n      transitions: [trans1, trans2, trans3, trans4],\r\n      listing: createListing('listing'),\r\n      customer,\r\n      provider,\r\n    });\r\n    const messages = this.state.showAllMessages ? [msg1, msg2, msg3, msg4] : [msg2, msg3, msg4];\r\n\r\n    const handleShowOlder = () => {\r\n      console.log('show older messages');\r\n      this.setState({ showAllMessages: true });\r\n    };\r\n\r\n    const feedProps = {\r\n      currentUser,\r\n      transaction,\r\n      messages,\r\n      hasOlderMessages: !this.state.showAllMessages,\r\n      onOpenReviewModal: noop,\r\n      onShowOlderMessages: handleShowOlder,\r\n      fetchMessagesInProgress: false,\r\n    };\r\n    return <ActivityFeed {...feedProps} />;\r\n  }\r\n}\r\n\r\nexport const WithMessagePaging = {\r\n  component: PagedFeed,\r\n  props: {},\r\n  group: 'page:TransactionPage',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}