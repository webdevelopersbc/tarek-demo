{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\StyleguidePage\\\\StyleguidePage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport classNames from 'classnames';\nimport { NamedLink } from '../../components';\nimport css from './StyleguidePage.module.css';\nconst ALL = '*';\nconst DEFAULT_GROUP = 'misc';\nconst PREFIX_SEPARATOR = ':';\n\nconst Example = props => {\n  const {\n    componentName,\n    exampleName,\n    component: ExampleComponent,\n    description,\n    props: exampleProps,\n    useDefaultWrapperStyles,\n    rawOnly\n  } = props;\n  const exampleWrapperClassName = useDefaultWrapperStyles ? css.defaultWrapperStyles : '';\n  const desc = description ? /*#__PURE__*/React.createElement(\"p\", {\n    className: css.withMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }\n  }, \"Description: \", description) : null;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: css.example,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: css.withMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"StyleguideComponent\",\n    params: {\n      component: componentName\n    },\n    className: css.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, componentName), ' ', \"/\", ' ', /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"StyleguideComponentExample\",\n    params: {\n      component: componentName,\n      example: exampleName\n    },\n    className: css.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, exampleName)), /*#__PURE__*/React.createElement(\"span\", {\n    className: css.withMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"StyleguideComponentExampleRaw\",\n    params: {\n      component: componentName,\n      example: exampleName\n    },\n    className: css.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"raw\")), desc, /*#__PURE__*/React.createElement(\"div\", {\n    className: exampleWrapperClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, rawOnly ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"This component is available in\", ' ', /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"StyleguideComponentExampleRaw\",\n    params: {\n      component: componentName,\n      example: exampleName\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"raw mode\"), ' ', \"only.\") : /*#__PURE__*/React.createElement(ExampleComponent, Object.assign({}, exampleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_c = Example;\nconst {\n  bool,\n  func,\n  node,\n  object,\n  oneOfType,\n  shape,\n  string,\n  arrayOf\n} = PropTypes;\nExample.defaultProps = {\n  description: null,\n  props: {},\n  useDefaultWrapperStyles: true\n};\nExample.propTypes = {\n  componentName: string.isRequired,\n  exampleName: string.isRequired,\n  component: oneOfType([func, node]).isRequired,\n  description: string,\n  props: object,\n  useDefaultWrapperStyles: bool\n}; // Renders the list of component example groups as clickable filters\n\nconst Nav = props => {\n  const {\n    groups,\n    selectedGroup\n  } = props;\n\n  const toGroupLink = (group, linkableContent) => {\n    const linkProps = {\n      name: group === ALL ? 'Styleguide' : 'StyleguideGroup',\n      params: group === ALL ? null : {\n        group\n      }\n    };\n    const linkContent = linkableContent ? linkableContent : group === ALL ? 'all components' : group;\n    const isSelected = selectedGroup && group === selectedGroup;\n    const groupLink = classNames(css.link, {\n      [css.selectedGroup]: isSelected\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: group,\n      className: css.group,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NamedLink, Object.assign({}, linkProps, {\n      className: groupLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), linkContent));\n  };\n\n  const filteredGroups = groups.filter(g => g !== ALL && g !== DEFAULT_GROUP); // Get prefixGroups => { elements: [], page: [], unprefixed: [] }\n\n  const prefixGroups = filteredGroups.reduce((acc, g) => {\n    const prefixIndex = g.indexOf(PREFIX_SEPARATOR);\n    const prefix = prefixIndex > 0 ? g.slice(0, prefixIndex) : null;\n\n    if (prefix) {\n      const prevGroupsWithPrefix = acc && acc[prefix] ? acc[prefix] : [];\n      return { ...acc,\n        [prefix]: [...prevGroupsWithPrefix, g]\n      };\n    }\n\n    const prevUnprefixedGroups = acc && acc.unprefixed ? acc.unprefixed : [];\n    return { ...acc,\n      unprefixed: [...prevUnprefixedGroups, g]\n    };\n  }, {});\n\n  const getGroupLinks = (prefixGroups, prefix) => prefix && prefixGroups[prefix] ? prefixGroups[prefix].map(g => toGroupLink(g, g.slice(prefix.length + 1))) : !prefix ? prefixGroups.unprefixed.map(g => toGroupLink(g)) : [];\n\n  const designElementGroups = getGroupLinks(prefixGroups, 'elements');\n  const pageSubComponentGroups = getGroupLinks(prefixGroups, 'page');\n  const sharedComponentGroups = getGroupLinks(prefixGroups);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: css.withMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, toGroupLink(ALL)), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Design elements\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, designElementGroups), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Shared components\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, sharedComponentGroups, toGroupLink(DEFAULT_GROUP)), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Page-related components\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.groups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, pageSubComponentGroups));\n};\n\n_c2 = Nav;\nNav.defaultProps = {\n  selectedGroup: null\n};\nNav.propTypes = {\n  groups: arrayOf(string).isRequired,\n  selectedGroup: string\n}; // The imported examples are in a nested tree structure. Flatten the\n// structure into an array of example objects.\n\nconst flatExamples = examples => {\n  return Object.keys(examples).reduce((flattened, componentName) => {\n    const exs = Object.keys(examples[componentName]).reduce((result, exampleName) => {\n      const ex = examples[componentName][exampleName];\n      return result.concat([{\n        componentName,\n        exampleName,\n        group: DEFAULT_GROUP,\n        ...ex\n      }]);\n    }, []);\n    return flattened.concat(exs);\n  }, []);\n}; // Filter the examples based on the given criteria\n\n\nconst examplesFor = (examples, group, componentName, exampleName) => {\n  return examples.filter(ex => {\n    return (group === ALL || ex.group === group) && (componentName === ALL || ex.componentName === componentName) && (exampleName === ALL || ex.exampleName === exampleName);\n  });\n};\n\nconst StyleguidePage = props => {\n  // TODO: importing all the examples will affect the module bundling\n  // since examples call routeConfiguration without function wrapping\n  // Furthermore, it would be nice to exclude styleguide away from actual app\n  let allExamples = [];\n\n  try {\n    allExamples = require('../../examples');\n  } catch (e) {\n    console.error(e);\n    console.warn('require(): The file \"../../examples.js\" could not be loaded.');\n  }\n\n  const {\n    params,\n    raw\n  } = props;\n  const group = params.group ? decodeURIComponent(params.group) : ALL;\n  const componentName = params.component || ALL;\n  const exampleName = params.example || ALL;\n  const flattened = flatExamples(allExamples);\n  const groups = flattened.reduce((result, ex) => {\n    if (ex.group && !result.includes(ex.group)) {\n      return result.concat(ex.group);\n    }\n\n    return result;\n  }, []);\n  groups.sort();\n  const selectedGroup = isEmpty(params) ? ALL : params.group;\n  const examples = examplesFor(flattened, group, componentName, exampleName); // Raw examples are rendered without any wrapper\n\n  if (raw && examples.length > 0) {\n    // There can be only one raw example at a time, therefore pick\n    // only the first example in the examples Array\n    const {\n      component: ExampleComponent,\n      props: exampleProps\n    } = examples[0];\n    return /*#__PURE__*/React.createElement(ExampleComponent, Object.assign({}, exampleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 12\n      }\n    }));\n  } else if (raw) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, \"No example with filter \", componentName, \"/\", exampleName, \"/raw\");\n  }\n\n  const html = examples.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.examplesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, examples.map(ex => /*#__PURE__*/React.createElement(Example, Object.assign({\n    key: `${ex.componentName}/${ex.exampleName}`\n  }, ex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, \"No examples with filter: \", componentName, \"/\", exampleName);\n  const prefixIndex = selectedGroup ? selectedGroup.indexOf(PREFIX_SEPARATOR) : -1;\n  const selectedGroupWithoutPrefix = prefixIndex > 0 ? selectedGroup.slice(prefixIndex + 1).trim() : selectedGroup;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: css.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.navBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: css.withMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"Styleguide\",\n    className: css.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, \"Styleguide\")), /*#__PURE__*/React.createElement(\"h2\", {\n    className: css.withMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, \"Select category:\"), /*#__PURE__*/React.createElement(Nav, {\n    groups: groups,\n    selectedGroup: selectedGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, selectedGroupWithoutPrefix ? `Selected category: ${selectedGroupWithoutPrefix}` : `Component`), html));\n};\n\n_c3 = StyleguidePage;\nStyleguidePage.defaultProps = {\n  raw: false\n};\nStyleguidePage.propTypes = {\n  params: shape({\n    group: string,\n    component: string,\n    example: string\n  }).isRequired,\n  raw: bool\n};\nexport default StyleguidePage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"Nav\");\n$RefreshReg$(_c3, \"StyleguidePage\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/StyleguidePage/StyleguidePage.js"],"names":["React","PropTypes","isEmpty","classNames","NamedLink","css","ALL","DEFAULT_GROUP","PREFIX_SEPARATOR","Example","props","componentName","exampleName","component","ExampleComponent","description","exampleProps","useDefaultWrapperStyles","rawOnly","exampleWrapperClassName","defaultWrapperStyles","desc","withMargin","example","link","bool","func","node","object","oneOfType","shape","string","arrayOf","defaultProps","propTypes","isRequired","Nav","groups","selectedGroup","toGroupLink","group","linkableContent","linkProps","name","params","linkContent","isSelected","groupLink","filteredGroups","filter","g","prefixGroups","reduce","acc","prefixIndex","indexOf","prefix","slice","prevGroupsWithPrefix","prevUnprefixedGroups","unprefixed","getGroupLinks","map","length","designElementGroups","pageSubComponentGroups","sharedComponentGroups","flatExamples","examples","Object","keys","flattened","exs","result","ex","concat","examplesFor","StyleguidePage","allExamples","require","e","console","error","warn","raw","decodeURIComponent","includes","sort","html","examplesList","selectedGroupWithoutPrefix","trim","root","navBar","main"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport classNames from 'classnames';\r\nimport { NamedLink } from '../../components';\r\n\r\nimport css from './StyleguidePage.module.css';\r\n\r\nconst ALL = '*';\r\nconst DEFAULT_GROUP = 'misc';\r\nconst PREFIX_SEPARATOR = ':';\r\n\r\nconst Example = props => {\r\n  const {\r\n    componentName,\r\n    exampleName,\r\n    component: ExampleComponent,\r\n    description,\r\n    props: exampleProps,\r\n    useDefaultWrapperStyles,\r\n    rawOnly,\r\n  } = props;\r\n\r\n  const exampleWrapperClassName = useDefaultWrapperStyles ? css.defaultWrapperStyles : '';\r\n  const desc = description ? <p className={css.withMargin}>Description: {description}</p> : null;\r\n  return (\r\n    <li className={css.example}>\r\n      <h3 className={css.withMargin}>\r\n        <NamedLink\r\n          name=\"StyleguideComponent\"\r\n          params={{ component: componentName }}\r\n          className={css.link}\r\n        >\r\n          {componentName}\r\n        </NamedLink>{' '}\r\n        /{' '}\r\n        <NamedLink\r\n          name=\"StyleguideComponentExample\"\r\n          params={{ component: componentName, example: exampleName }}\r\n          className={css.link}\r\n        >\r\n          {exampleName}\r\n        </NamedLink>\r\n      </h3>\r\n      <span className={css.withMargin}>\r\n        <NamedLink\r\n          name=\"StyleguideComponentExampleRaw\"\r\n          params={{ component: componentName, example: exampleName }}\r\n          className={css.link}\r\n        >\r\n          raw\r\n        </NamedLink>\r\n      </span>\r\n      {desc}\r\n      <div className={exampleWrapperClassName}>\r\n        {rawOnly ? (\r\n          <p>\r\n            This component is available in{' '}\r\n            <NamedLink\r\n              name=\"StyleguideComponentExampleRaw\"\r\n              params={{ component: componentName, example: exampleName }}\r\n            >\r\n              raw mode\r\n            </NamedLink>{' '}\r\n            only.\r\n          </p>\r\n        ) : (\r\n          <ExampleComponent {...exampleProps} />\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst { bool, func, node, object, oneOfType, shape, string, arrayOf } = PropTypes;\r\n\r\nExample.defaultProps = {\r\n  description: null,\r\n  props: {},\r\n  useDefaultWrapperStyles: true,\r\n};\r\n\r\nExample.propTypes = {\r\n  componentName: string.isRequired,\r\n  exampleName: string.isRequired,\r\n  component: oneOfType([func, node]).isRequired,\r\n  description: string,\r\n  props: object,\r\n  useDefaultWrapperStyles: bool,\r\n};\r\n\r\n// Renders the list of component example groups as clickable filters\r\nconst Nav = props => {\r\n  const { groups, selectedGroup } = props;\r\n  const toGroupLink = (group, linkableContent) => {\r\n    const linkProps = {\r\n      name: group === ALL ? 'Styleguide' : 'StyleguideGroup',\r\n      params: group === ALL ? null : { group },\r\n    };\r\n\r\n    const linkContent = linkableContent\r\n      ? linkableContent\r\n      : group === ALL\r\n      ? 'all components'\r\n      : group;\r\n    const isSelected = selectedGroup && group === selectedGroup;\r\n    const groupLink = classNames(css.link, { [css.selectedGroup]: isSelected });\r\n    return (\r\n      <li key={group} className={css.group}>\r\n        <NamedLink {...linkProps} className={groupLink}>\r\n          {linkContent}\r\n        </NamedLink>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const filteredGroups = groups.filter(g => g !== ALL && g !== DEFAULT_GROUP);\r\n  // Get prefixGroups => { elements: [], page: [], unprefixed: [] }\r\n  const prefixGroups = filteredGroups.reduce((acc, g) => {\r\n    const prefixIndex = g.indexOf(PREFIX_SEPARATOR);\r\n    const prefix = prefixIndex > 0 ? g.slice(0, prefixIndex) : null;\r\n\r\n    if (prefix) {\r\n      const prevGroupsWithPrefix = acc && acc[prefix] ? acc[prefix] : [];\r\n      return { ...acc, [prefix]: [...prevGroupsWithPrefix, g] };\r\n    }\r\n    const prevUnprefixedGroups = acc && acc.unprefixed ? acc.unprefixed : [];\r\n    return { ...acc, unprefixed: [...prevUnprefixedGroups, g] };\r\n  }, {});\r\n\r\n  const getGroupLinks = (prefixGroups, prefix) =>\r\n    prefix && prefixGroups[prefix]\r\n      ? prefixGroups[prefix].map(g => toGroupLink(g, g.slice(prefix.length + 1)))\r\n      : !prefix\r\n      ? prefixGroups.unprefixed.map(g => toGroupLink(g))\r\n      : [];\r\n\r\n  const designElementGroups = getGroupLinks(prefixGroups, 'elements');\r\n  const pageSubComponentGroups = getGroupLinks(prefixGroups, 'page');\r\n  const sharedComponentGroups = getGroupLinks(prefixGroups);\r\n\r\n  return (\r\n    <nav className={css.withMargin}>\r\n      <ul>{toGroupLink(ALL)}</ul>\r\n      <h5>Design elements</h5>\r\n      <ul className={css.groups}>{designElementGroups}</ul>\r\n      <h5>Shared components</h5>\r\n      <ul className={css.groups}>\r\n        {sharedComponentGroups}\r\n        {toGroupLink(DEFAULT_GROUP)}\r\n      </ul>\r\n      <h5>Page-related components</h5>\r\n      <ul className={css.groups}>{pageSubComponentGroups}</ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.defaultProps = { selectedGroup: null };\r\n\r\nNav.propTypes = {\r\n  groups: arrayOf(string).isRequired,\r\n  selectedGroup: string,\r\n};\r\n\r\n// The imported examples are in a nested tree structure. Flatten the\r\n// structure into an array of example objects.\r\nconst flatExamples = examples => {\r\n  return Object.keys(examples).reduce((flattened, componentName) => {\r\n    const exs = Object.keys(examples[componentName]).reduce((result, exampleName) => {\r\n      const ex = examples[componentName][exampleName];\r\n      return result.concat([\r\n        {\r\n          componentName,\r\n          exampleName,\r\n          group: DEFAULT_GROUP,\r\n          ...ex,\r\n        },\r\n      ]);\r\n    }, []);\r\n    return flattened.concat(exs);\r\n  }, []);\r\n};\r\n\r\n// Filter the examples based on the given criteria\r\nconst examplesFor = (examples, group, componentName, exampleName) => {\r\n  return examples.filter(ex => {\r\n    return (\r\n      (group === ALL || ex.group === group) &&\r\n      (componentName === ALL || ex.componentName === componentName) &&\r\n      (exampleName === ALL || ex.exampleName === exampleName)\r\n    );\r\n  });\r\n};\r\n\r\nconst StyleguidePage = props => {\r\n  // TODO: importing all the examples will affect the module bundling\r\n  // since examples call routeConfiguration without function wrapping\r\n  // Furthermore, it would be nice to exclude styleguide away from actual app\r\n  let allExamples = [];\r\n  try {\r\n    allExamples = require('../../examples');\r\n  } catch (e) {\r\n    console.error(e);\r\n    console.warn('require(): The file \"../../examples.js\" could not be loaded.');\r\n  }\r\n\r\n  const { params, raw } = props;\r\n  const group = params.group ? decodeURIComponent(params.group) : ALL;\r\n  const componentName = params.component || ALL;\r\n  const exampleName = params.example || ALL;\r\n\r\n  const flattened = flatExamples(allExamples);\r\n  const groups = flattened.reduce((result, ex) => {\r\n    if (ex.group && !result.includes(ex.group)) {\r\n      return result.concat(ex.group);\r\n    }\r\n    return result;\r\n  }, []);\r\n  groups.sort();\r\n  const selectedGroup = isEmpty(params) ? ALL : params.group;\r\n  const examples = examplesFor(flattened, group, componentName, exampleName);\r\n\r\n  // Raw examples are rendered without any wrapper\r\n  if (raw && examples.length > 0) {\r\n    // There can be only one raw example at a time, therefore pick\r\n    // only the first example in the examples Array\r\n    const { component: ExampleComponent, props: exampleProps } = examples[0];\r\n    return <ExampleComponent {...exampleProps} />;\r\n  } else if (raw) {\r\n    return (\r\n      <p>\r\n        No example with filter {componentName}/{exampleName}/raw\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const html =\r\n    examples.length > 0 ? (\r\n      <ul className={css.examplesList}>\r\n        {examples.map(ex => (\r\n          <Example key={`${ex.componentName}/${ex.exampleName}`} {...ex} />\r\n        ))}\r\n      </ul>\r\n    ) : (\r\n      <p>\r\n        No examples with filter: {componentName}/{exampleName}\r\n      </p>\r\n    );\r\n\r\n  const prefixIndex = selectedGroup ? selectedGroup.indexOf(PREFIX_SEPARATOR) : -1;\r\n  const selectedGroupWithoutPrefix =\r\n    prefixIndex > 0 ? selectedGroup.slice(prefixIndex + 1).trim() : selectedGroup;\r\n  return (\r\n    <section className={css.root}>\r\n      <div className={css.navBar}>\r\n        <h1 className={css.withMargin}>\r\n          <NamedLink name=\"Styleguide\" className={css.link}>\r\n            Styleguide\r\n          </NamedLink>\r\n        </h1>\r\n        <h2 className={css.withMargin}>Select category:</h2>\r\n        <Nav groups={groups} selectedGroup={selectedGroup} />\r\n      </div>\r\n      <div className={css.main}>\r\n        <h2>\r\n          {selectedGroupWithoutPrefix\r\n            ? `Selected category: ${selectedGroupWithoutPrefix}`\r\n            : `Component`}\r\n        </h2>\r\n        {html}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nStyleguidePage.defaultProps = { raw: false };\r\n\r\nStyleguidePage.propTypes = {\r\n  params: shape({\r\n    group: string,\r\n    component: string,\r\n    example: string,\r\n  }).isRequired,\r\n  raw: bool,\r\n};\r\n\r\nexport default StyleguidePage;\r\n"]},"metadata":{},"sourceType":"module"}