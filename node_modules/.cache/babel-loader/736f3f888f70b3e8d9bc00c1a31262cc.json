{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\SearchPage\\\\SearchFiltersSecondary\\\\SearchFiltersSecondary.js\";\nimport React, { Component } from 'react';\nimport { func, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from '../../../util/reactIntl';\nimport { InlineTextButton } from '../../../components';\nimport css from './SearchFiltersSecondary.module.css';\n\nclass SearchFiltersSecondaryComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentQueryParams: props.urlQueryParams\n    };\n    this.applyFilters = this.applyFilters.bind(this);\n    this.cancelFilters = this.cancelFilters.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n  } // Apply the filters by redirecting to SearchPage with new filters.\n\n\n  applyFilters() {\n    const {\n      applyFilters,\n      onClosePanel\n    } = this.props;\n\n    if (applyFilters) {\n      applyFilters();\n    } // Ensure that panel closes (if now changes have been made)\n\n\n    onClosePanel();\n  } // Close the filters by clicking cancel, revert to the initial params\n\n\n  cancelFilters() {\n    const {\n      cancelFilters\n    } = this.props;\n\n    if (cancelFilters) {\n      cancelFilters();\n    }\n\n    this.props.onClosePanel();\n  } // Reset all filter query parameters\n\n\n  resetAll(e) {\n    const {\n      resetAll,\n      onClosePanel\n    } = this.props;\n\n    if (resetAll) {\n      resetAll(e);\n    } // Ensure that panel closes (if now changes have been made)\n\n\n    onClosePanel(); // blur event target if event is passed\n\n    if (e && e.currentTarget) {\n      e.currentTarget.blur();\n    }\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      children\n    } = this.props;\n    const classes = classNames(rootClassName || css.root, className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.filtersWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, children), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InlineTextButton, {\n      rootClassName: css.resetAllButton,\n      onClick: this.resetAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'SearchFiltersSecondary.resetAll',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(InlineTextButton, {\n      rootClassName: css.cancelButton,\n      onClick: this.cancelFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'SearchFiltersSecondary.cancel',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(InlineTextButton, {\n      rootClassName: css.applyButton,\n      onClick: this.applyFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'SearchFiltersSecondary.apply',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nSearchFiltersSecondaryComponent.defaultProps = {\n  rootClassName: null,\n  className: null\n};\nSearchFiltersSecondaryComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  urlQueryParams: object.isRequired,\n  applyFilters: func.isRequired,\n  resetAll: func.isRequired,\n  onClosePanel: func.isRequired\n};\nconst SearchFiltersSecondary = SearchFiltersSecondaryComponent;\nexport default SearchFiltersSecondary;","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/SearchPage/SearchFiltersSecondary/SearchFiltersSecondary.js"],"names":["React","Component","func","object","string","classNames","FormattedMessage","InlineTextButton","css","SearchFiltersSecondaryComponent","constructor","props","state","currentQueryParams","urlQueryParams","applyFilters","bind","cancelFilters","resetAll","onClosePanel","e","currentTarget","blur","render","rootClassName","className","children","classes","root","filtersWrapper","footer","resetAllButton","cancelButton","applyButton","defaultProps","propTypes","isRequired","SearchFiltersSecondary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { func, object, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage } from '../../../util/reactIntl';\r\n\r\nimport { InlineTextButton } from '../../../components';\r\n\r\nimport css from './SearchFiltersSecondary.module.css';\r\n\r\nclass SearchFiltersSecondaryComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentQueryParams: props.urlQueryParams };\r\n\r\n    this.applyFilters = this.applyFilters.bind(this);\r\n    this.cancelFilters = this.cancelFilters.bind(this);\r\n    this.resetAll = this.resetAll.bind(this);\r\n  }\r\n\r\n  // Apply the filters by redirecting to SearchPage with new filters.\r\n  applyFilters() {\r\n    const { applyFilters, onClosePanel } = this.props;\r\n\r\n    if (applyFilters) {\r\n      applyFilters();\r\n    }\r\n\r\n    // Ensure that panel closes (if now changes have been made)\r\n    onClosePanel();\r\n  }\r\n\r\n  // Close the filters by clicking cancel, revert to the initial params\r\n  cancelFilters() {\r\n    const { cancelFilters } = this.props;\r\n\r\n    if (cancelFilters) {\r\n      cancelFilters();\r\n    }\r\n\r\n    this.props.onClosePanel();\r\n  }\r\n\r\n  // Reset all filter query parameters\r\n  resetAll(e) {\r\n    const { resetAll, onClosePanel } = this.props;\r\n\r\n    if (resetAll) {\r\n      resetAll(e);\r\n    }\r\n\r\n    // Ensure that panel closes (if now changes have been made)\r\n    onClosePanel();\r\n\r\n    // blur event target if event is passed\r\n    if (e && e.currentTarget) {\r\n      e.currentTarget.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { rootClassName, className, children } = this.props;\r\n    const classes = classNames(rootClassName || css.root, className);\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className={css.filtersWrapper}>{children}</div>\r\n        <div className={css.footer}>\r\n          <InlineTextButton rootClassName={css.resetAllButton} onClick={this.resetAll}>\r\n            <FormattedMessage id={'SearchFiltersSecondary.resetAll'} />\r\n          </InlineTextButton>\r\n          <InlineTextButton rootClassName={css.cancelButton} onClick={this.cancelFilters}>\r\n            <FormattedMessage id={'SearchFiltersSecondary.cancel'} />\r\n          </InlineTextButton>\r\n          <InlineTextButton rootClassName={css.applyButton} onClick={this.applyFilters}>\r\n            <FormattedMessage id={'SearchFiltersSecondary.apply'} />\r\n          </InlineTextButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchFiltersSecondaryComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n};\r\n\r\nSearchFiltersSecondaryComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  urlQueryParams: object.isRequired,\r\n  applyFilters: func.isRequired,\r\n  resetAll: func.isRequired,\r\n  onClosePanel: func.isRequired,\r\n};\r\n\r\nconst SearchFiltersSecondary = SearchFiltersSecondaryComponent;\r\n\r\nexport default SearchFiltersSecondary;\r\n"]},"metadata":{},"sourceType":"module"}