{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // does not check for duplicate subtags\n\n\nvar isStructurallyValidLanguageTag = function isStructurallyValidLanguageTag(locale) {\n  return locale.split('-').every(function (subtag) {\n    return /[a-z0-9]+/i.test(subtag);\n  });\n};\n\nvar canonicalizeLocaleList = function canonicalizeLocaleList(locales) {\n  if (!locales) return [];\n  if (!Array.isArray(locales)) locales = [locales];\n  var res = {};\n\n  for (var i = 0; i < locales.length; ++i) {\n    var tag = locales[i];\n    if (tag && _typeof(tag) === 'object') tag = String(tag);\n\n    if (typeof tag !== 'string') {\n      // Requiring tag to be a String or Object means that the Number value\n      // NaN will not be interpreted as the language tag \"nan\", which stands\n      // for Min Nan Chinese.\n      var msg = \"Locales should be strings, \".concat(JSON.stringify(tag), \" isn't.\");\n      throw new TypeError(msg);\n    }\n\n    if (tag[0] === '*') continue;\n\n    if (!isStructurallyValidLanguageTag(tag)) {\n      var strTag = JSON.stringify(tag);\n\n      var _msg = \"The locale \".concat(strTag, \" is not a structurally valid BCP 47 language tag.\");\n\n      throw new RangeError(_msg);\n    }\n\n    res[tag] = true;\n  }\n\n  return Object.keys(res);\n};\n\nvar defaultLocale = function defaultLocale() {\n  return (\n    /* istanbul ignore next */\n    typeof navigator !== 'undefined' && navigator && (navigator.userLanguage || navigator.language) || 'en-US'\n  );\n};\n\nvar getType = function getType(type) {\n  if (!type) return 'cardinal';\n  if (type === 'cardinal' || type === 'ordinal') return type;\n  throw new RangeError('Not a valid plural type: ' + JSON.stringify(type));\n};\n\nfunction getPluralRules(NumberFormat, getSelector, getCategories) {\n  var findLocale = function findLocale(locale) {\n    do {\n      if (getSelector(locale)) return locale;\n      locale = locale.replace(/-?[^-]*$/, '');\n    } while (locale);\n\n    return null;\n  };\n\n  var resolveLocale = function resolveLocale(locales) {\n    var canonicalLocales = canonicalizeLocaleList(locales);\n\n    for (var i = 0; i < canonicalLocales.length; ++i) {\n      var lc = findLocale(canonicalLocales[i]);\n      if (lc) return lc;\n    }\n\n    return findLocale(defaultLocale());\n  };\n\n  var PluralRules = /*#__PURE__*/function () {\n    function PluralRules(locales) {\n      var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, PluralRules);\n\n      this._locale = resolveLocale(locales);\n      this._select = getSelector(this._locale);\n      this._type = getType(opt.type);\n      this._nf = new NumberFormat('en', opt); // make-plural expects latin digits with . decimal separator\n    }\n\n    _createClass(PluralRules, [{\n      key: \"resolvedOptions\",\n      value: function resolvedOptions() {\n        var _this$_nf$resolvedOpt = this._nf.resolvedOptions(),\n            minimumIntegerDigits = _this$_nf$resolvedOpt.minimumIntegerDigits,\n            minimumFractionDigits = _this$_nf$resolvedOpt.minimumFractionDigits,\n            maximumFractionDigits = _this$_nf$resolvedOpt.maximumFractionDigits,\n            minimumSignificantDigits = _this$_nf$resolvedOpt.minimumSignificantDigits,\n            maximumSignificantDigits = _this$_nf$resolvedOpt.maximumSignificantDigits;\n\n        var opt = {\n          locale: this._locale,\n          minimumIntegerDigits: minimumIntegerDigits,\n          minimumFractionDigits: minimumFractionDigits,\n          maximumFractionDigits: maximumFractionDigits,\n          pluralCategories: getCategories(this._locale, this._type === 'ordinal'),\n          type: this._type\n        };\n\n        if (typeof minimumSignificantDigits === 'number') {\n          opt.minimumSignificantDigits = minimumSignificantDigits;\n          opt.maximumSignificantDigits = maximumSignificantDigits;\n        }\n\n        return opt;\n      }\n    }, {\n      key: \"select\",\n      value: function select(number) {\n        if (!(this instanceof PluralRules)) throw new TypeError(\"select() called on incompatible \".concat(this));\n        if (typeof number !== 'number') number = Number(number);\n        if (!isFinite(number)) return 'other';\n\n        var fmt = this._nf.format(Math.abs(number));\n\n        return this._select(fmt, this._type === 'ordinal');\n      }\n    }], [{\n      key: \"supportedLocalesOf\",\n      value: function supportedLocalesOf(locales) {\n        return canonicalizeLocaleList(locales).filter(findLocale);\n      }\n    }]);\n\n    return PluralRules;\n  }();\n\n  Object.defineProperty(PluralRules, 'prototype', {\n    writable: false\n  });\n  return PluralRules;\n}\n\nexport { getPluralRules as default };","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/node_modules/intl-pluralrules/factory.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","isStructurallyValidLanguageTag","locale","split","every","subtag","test","canonicalizeLocaleList","locales","Array","isArray","res","tag","String","msg","concat","JSON","stringify","strTag","_msg","RangeError","keys","defaultLocale","navigator","userLanguage","language","getType","type","getPluralRules","NumberFormat","getSelector","getCategories","findLocale","replace","resolveLocale","canonicalLocales","lc","PluralRules","opt","arguments","undefined","_locale","_select","_type","_nf","value","resolvedOptions","_this$_nf$resolvedOpt","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","pluralCategories","select","number","Number","isFinite","fmt","format","Math","abs","supportedLocalesOf","filter","default"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB;;AAEA,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AACvEH,IAAAA,OAAO,GAAG,UAAUC,GAAV,EAAe;AACvB,aAAO,OAAOA,GAAd;AACD,KAFD;AAGD,GAJD,MAIO;AACLD,IAAAA,OAAO,GAAG,UAAUC,GAAV,EAAe;AACvB,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AACD,KAFD;AAGD;;AAED,SAAOD,OAAO,CAACC,GAAD,CAAd;AACD;;AAED,SAASK,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF;;AAED,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACxC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AACAE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AACA,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAC3BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AACD;AACF;;AAED,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAC1D,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACH,SAAb,EAAwBkB,UAAxB,CAAjB;AAChB,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AACjB,SAAOhB,WAAP;AACD,C,CAED;;;AACA,IAAIiB,8BAA8B,GAAG,SAASA,8BAAT,CAAwCC,MAAxC,EAAgD;AACnF,SAAOA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBC,KAAlB,CAAwB,UAAUC,MAAV,EAAkB;AAC/C,WAAO,aAAaC,IAAb,CAAkBD,MAAlB,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAIE,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACpE,MAAI,CAACA,OAAL,EAAc,OAAO,EAAP;AACd,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAL,EAA6BA,OAAO,GAAG,CAACA,OAAD,CAAV;AAC7B,MAAIG,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,OAAO,CAAClB,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACvC,QAAIuB,GAAG,GAAGJ,OAAO,CAACnB,CAAD,CAAjB;AACA,QAAIuB,GAAG,IAAIpC,OAAO,CAACoC,GAAD,CAAP,KAAiB,QAA5B,EAAsCA,GAAG,GAAGC,MAAM,CAACD,GAAD,CAAZ;;AAEtC,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B;AACA;AACA;AACA,UAAIE,GAAG,GAAG,8BAA8BC,MAA9B,CAAqCC,IAAI,CAACC,SAAL,CAAeL,GAAf,CAArC,EAA0D,SAA1D,CAAV;AACA,YAAM,IAAI3B,SAAJ,CAAc6B,GAAd,CAAN;AACD;;AAED,QAAIF,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;;AAEpB,QAAI,CAACX,8BAA8B,CAACW,GAAD,CAAnC,EAA0C;AACxC,UAAIM,MAAM,GAAGF,IAAI,CAACC,SAAL,CAAeL,GAAf,CAAb;;AAEA,UAAIO,IAAI,GAAG,cAAcJ,MAAd,CAAqBG,MAArB,EAA6B,mDAA7B,CAAX;;AAEA,YAAM,IAAIE,UAAJ,CAAeD,IAAf,CAAN;AACD;;AAEDR,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,IAAX;AACD;;AAED,SAAOjB,MAAM,CAAC0B,IAAP,CAAYV,GAAZ,CAAP;AACD,CA/BD;;AAiCA,IAAIW,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3C;AACE;AACA,WAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAApC,KAAkDA,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACE,QAAtF,KAAmG;AAFrG;AAID,CALD;;AAOA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AACnC,MAAI,CAACA,IAAL,EAAW,OAAO,UAAP;AACX,MAAIA,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,SAApC,EAA+C,OAAOA,IAAP;AAC/C,QAAM,IAAIP,UAAJ,CAAe,8BAA8BJ,IAAI,CAACC,SAAL,CAAeU,IAAf,CAA7C,CAAN;AACD,CAJD;;AAMA,SAASC,cAAT,CAAwBC,YAAxB,EAAsCC,WAAtC,EAAmDC,aAAnD,EAAkE;AAChE,MAAIC,UAAU,GAAG,SAASA,UAAT,CAAoB9B,MAApB,EAA4B;AAC3C,OAAG;AACD,UAAI4B,WAAW,CAAC5B,MAAD,CAAf,EAAyB,OAAOA,MAAP;AACzBA,MAAAA,MAAM,GAAGA,MAAM,CAAC+B,OAAP,CAAe,UAAf,EAA2B,EAA3B,CAAT;AACD,KAHD,QAGS/B,MAHT;;AAKA,WAAO,IAAP;AACD,GAPD;;AASA,MAAIgC,aAAa,GAAG,SAASA,aAAT,CAAuB1B,OAAvB,EAAgC;AAClD,QAAI2B,gBAAgB,GAAG5B,sBAAsB,CAACC,OAAD,CAA7C;;AAEA,SAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8C,gBAAgB,CAAC7C,MAArC,EAA6C,EAAED,CAA/C,EAAkD;AAChD,UAAI+C,EAAE,GAAGJ,UAAU,CAACG,gBAAgB,CAAC9C,CAAD,CAAjB,CAAnB;AACA,UAAI+C,EAAJ,EAAQ,OAAOA,EAAP;AACT;;AAED,WAAOJ,UAAU,CAACV,aAAa,EAAd,CAAjB;AACD,GATD;;AAWA,MAAIe,WAAW,GAAG,aAAa,YAAY;AACzC,aAASA,WAAT,CAAqB7B,OAArB,EAA8B;AAC5B,UAAI8B,GAAG,GAAGC,SAAS,CAACjD,MAAV,GAAmB,CAAnB,IAAwBiD,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA9E;;AAEAzD,MAAAA,eAAe,CAAC,IAAD,EAAOuD,WAAP,CAAf;;AAEA,WAAKI,OAAL,GAAeP,aAAa,CAAC1B,OAAD,CAA5B;AACA,WAAKkC,OAAL,GAAeZ,WAAW,CAAC,KAAKW,OAAN,CAA1B;AACA,WAAKE,KAAL,GAAajB,OAAO,CAACY,GAAG,CAACX,IAAL,CAApB;AACA,WAAKiB,GAAL,GAAW,IAAIf,YAAJ,CAAiB,IAAjB,EAAuBS,GAAvB,CAAX,CAR4B,CAQY;AACzC;;AAEDxC,IAAAA,YAAY,CAACuC,WAAD,EAAc,CAAC;AACzBxC,MAAAA,GAAG,EAAE,iBADoB;AAEzBgD,MAAAA,KAAK,EAAE,SAASC,eAAT,GAA2B;AAChC,YAAIC,qBAAqB,GAAG,KAAKH,GAAL,CAASE,eAAT,EAA5B;AAAA,YACIE,oBAAoB,GAAGD,qBAAqB,CAACC,oBADjD;AAAA,YAEIC,qBAAqB,GAAGF,qBAAqB,CAACE,qBAFlD;AAAA,YAGIC,qBAAqB,GAAGH,qBAAqB,CAACG,qBAHlD;AAAA,YAIIC,wBAAwB,GAAGJ,qBAAqB,CAACI,wBAJrD;AAAA,YAKIC,wBAAwB,GAAGL,qBAAqB,CAACK,wBALrD;;AAOA,YAAId,GAAG,GAAG;AACRpC,UAAAA,MAAM,EAAE,KAAKuC,OADL;AAERO,UAAAA,oBAAoB,EAAEA,oBAFd;AAGRC,UAAAA,qBAAqB,EAAEA,qBAHf;AAIRC,UAAAA,qBAAqB,EAAEA,qBAJf;AAKRG,UAAAA,gBAAgB,EAAEtB,aAAa,CAAC,KAAKU,OAAN,EAAe,KAAKE,KAAL,KAAe,SAA9B,CALvB;AAMRhB,UAAAA,IAAI,EAAE,KAAKgB;AANH,SAAV;;AASA,YAAI,OAAOQ,wBAAP,KAAoC,QAAxC,EAAkD;AAChDb,UAAAA,GAAG,CAACa,wBAAJ,GAA+BA,wBAA/B;AACAb,UAAAA,GAAG,CAACc,wBAAJ,GAA+BA,wBAA/B;AACD;;AAED,eAAOd,GAAP;AACD;AAzBwB,KAAD,EA0BvB;AACDzC,MAAAA,GAAG,EAAE,QADJ;AAEDgD,MAAAA,KAAK,EAAE,SAASS,MAAT,CAAgBC,MAAhB,EAAwB;AAC7B,YAAI,EAAE,gBAAgBlB,WAAlB,CAAJ,EAAoC,MAAM,IAAIpD,SAAJ,CAAc,mCAAmC8B,MAAnC,CAA0C,IAA1C,CAAd,CAAN;AACpC,YAAI,OAAOwC,MAAP,KAAkB,QAAtB,EAAgCA,MAAM,GAAGC,MAAM,CAACD,MAAD,CAAf;AAChC,YAAI,CAACE,QAAQ,CAACF,MAAD,CAAb,EAAuB,OAAO,OAAP;;AAEvB,YAAIG,GAAG,GAAG,KAAKd,GAAL,CAASe,MAAT,CAAgBC,IAAI,CAACC,GAAL,CAASN,MAAT,CAAhB,CAAV;;AAEA,eAAO,KAAKb,OAAL,CAAagB,GAAb,EAAkB,KAAKf,KAAL,KAAe,SAAjC,CAAP;AACD;AAVA,KA1BuB,CAAd,EAqCR,CAAC;AACH9C,MAAAA,GAAG,EAAE,oBADF;AAEHgD,MAAAA,KAAK,EAAE,SAASiB,kBAAT,CAA4BtD,OAA5B,EAAqC;AAC1C,eAAOD,sBAAsB,CAACC,OAAD,CAAtB,CAAgCuD,MAAhC,CAAuC/B,UAAvC,CAAP;AACD;AAJE,KAAD,CArCQ,CAAZ;;AA4CA,WAAOK,WAAP;AACD,GAzD8B,EAA/B;;AA2DA1C,EAAAA,MAAM,CAACC,cAAP,CAAsByC,WAAtB,EAAmC,WAAnC,EAAgD;AAC9C3C,IAAAA,QAAQ,EAAE;AADoC,GAAhD;AAGA,SAAO2C,WAAP;AACD;;AAED,SAAST,cAAc,IAAIoC,OAA3B","sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n// does not check for duplicate subtags\nvar isStructurallyValidLanguageTag = function isStructurallyValidLanguageTag(locale) {\n  return locale.split('-').every(function (subtag) {\n    return /[a-z0-9]+/i.test(subtag);\n  });\n};\n\nvar canonicalizeLocaleList = function canonicalizeLocaleList(locales) {\n  if (!locales) return [];\n  if (!Array.isArray(locales)) locales = [locales];\n  var res = {};\n\n  for (var i = 0; i < locales.length; ++i) {\n    var tag = locales[i];\n    if (tag && _typeof(tag) === 'object') tag = String(tag);\n\n    if (typeof tag !== 'string') {\n      // Requiring tag to be a String or Object means that the Number value\n      // NaN will not be interpreted as the language tag \"nan\", which stands\n      // for Min Nan Chinese.\n      var msg = \"Locales should be strings, \".concat(JSON.stringify(tag), \" isn't.\");\n      throw new TypeError(msg);\n    }\n\n    if (tag[0] === '*') continue;\n\n    if (!isStructurallyValidLanguageTag(tag)) {\n      var strTag = JSON.stringify(tag);\n\n      var _msg = \"The locale \".concat(strTag, \" is not a structurally valid BCP 47 language tag.\");\n\n      throw new RangeError(_msg);\n    }\n\n    res[tag] = true;\n  }\n\n  return Object.keys(res);\n};\n\nvar defaultLocale = function defaultLocale() {\n  return (\n    /* istanbul ignore next */\n    typeof navigator !== 'undefined' && navigator && (navigator.userLanguage || navigator.language) || 'en-US'\n  );\n};\n\nvar getType = function getType(type) {\n  if (!type) return 'cardinal';\n  if (type === 'cardinal' || type === 'ordinal') return type;\n  throw new RangeError('Not a valid plural type: ' + JSON.stringify(type));\n};\n\nfunction getPluralRules(NumberFormat, getSelector, getCategories) {\n  var findLocale = function findLocale(locale) {\n    do {\n      if (getSelector(locale)) return locale;\n      locale = locale.replace(/-?[^-]*$/, '');\n    } while (locale);\n\n    return null;\n  };\n\n  var resolveLocale = function resolveLocale(locales) {\n    var canonicalLocales = canonicalizeLocaleList(locales);\n\n    for (var i = 0; i < canonicalLocales.length; ++i) {\n      var lc = findLocale(canonicalLocales[i]);\n      if (lc) return lc;\n    }\n\n    return findLocale(defaultLocale());\n  };\n\n  var PluralRules = /*#__PURE__*/function () {\n    function PluralRules(locales) {\n      var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, PluralRules);\n\n      this._locale = resolveLocale(locales);\n      this._select = getSelector(this._locale);\n      this._type = getType(opt.type);\n      this._nf = new NumberFormat('en', opt); // make-plural expects latin digits with . decimal separator\n    }\n\n    _createClass(PluralRules, [{\n      key: \"resolvedOptions\",\n      value: function resolvedOptions() {\n        var _this$_nf$resolvedOpt = this._nf.resolvedOptions(),\n            minimumIntegerDigits = _this$_nf$resolvedOpt.minimumIntegerDigits,\n            minimumFractionDigits = _this$_nf$resolvedOpt.minimumFractionDigits,\n            maximumFractionDigits = _this$_nf$resolvedOpt.maximumFractionDigits,\n            minimumSignificantDigits = _this$_nf$resolvedOpt.minimumSignificantDigits,\n            maximumSignificantDigits = _this$_nf$resolvedOpt.maximumSignificantDigits;\n\n        var opt = {\n          locale: this._locale,\n          minimumIntegerDigits: minimumIntegerDigits,\n          minimumFractionDigits: minimumFractionDigits,\n          maximumFractionDigits: maximumFractionDigits,\n          pluralCategories: getCategories(this._locale, this._type === 'ordinal'),\n          type: this._type\n        };\n\n        if (typeof minimumSignificantDigits === 'number') {\n          opt.minimumSignificantDigits = minimumSignificantDigits;\n          opt.maximumSignificantDigits = maximumSignificantDigits;\n        }\n\n        return opt;\n      }\n    }, {\n      key: \"select\",\n      value: function select(number) {\n        if (!(this instanceof PluralRules)) throw new TypeError(\"select() called on incompatible \".concat(this));\n        if (typeof number !== 'number') number = Number(number);\n        if (!isFinite(number)) return 'other';\n\n        var fmt = this._nf.format(Math.abs(number));\n\n        return this._select(fmt, this._type === 'ordinal');\n      }\n    }], [{\n      key: \"supportedLocalesOf\",\n      value: function supportedLocalesOf(locales) {\n        return canonicalizeLocaleList(locales).filter(findLocale);\n      }\n    }]);\n\n    return PluralRules;\n  }();\n\n  Object.defineProperty(PluralRules, 'prototype', {\n    writable: false\n  });\n  return PluralRules;\n}\n\nexport { getPluralRules as default };\n"]},"metadata":{},"sourceType":"module"}