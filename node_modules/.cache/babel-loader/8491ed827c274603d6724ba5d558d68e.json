{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\ListingPage\\\\SectionDetailsMaybe.js\";\nimport React from 'react';\nimport { FormattedMessage } from '../../util/reactIntl';\nimport { PropertyGroup } from '../../components';\nimport css from './ListingPage.module.css';\n\nconst SectionDetailsMaybe = props => {\n  const {\n    publicData,\n    customConfig\n  } = props;\n  const {\n    listing,\n    filters\n  } = customConfig || {};\n\n  if (!publicData || !customConfig || !(listing === null || listing === void 0 ? void 0 : listing.enumFieldDetails)) {\n    return null;\n  }\n\n  const pickExtendedData = filterConfig => (rows, key) => {\n    const publicDataValue = publicData[key];\n\n    if (publicDataValue) {\n      var _filterIfItExists$con, _filterOptions$find;\n\n      const filterIfItExists = filterConfig.find(f => f.id === key);\n      const filterOptions = (filterIfItExists === null || filterIfItExists === void 0 ? void 0 : (_filterIfItExists$con = filterIfItExists.config) === null || _filterIfItExists$con === void 0 ? void 0 : _filterIfItExists$con.options) || [];\n      const value = ((_filterOptions$find = filterOptions.find(o => o.key === publicDataValue)) === null || _filterOptions$find === void 0 ? void 0 : _filterOptions$find.label) || publicDataValue;\n      const label = (filterIfItExists === null || filterIfItExists === void 0 ? void 0 : filterIfItExists.label) || `${key.charAt(0).toUpperCase()}${key.slice(1)}`;\n      return rows.concat({\n        key,\n        value,\n        label\n      });\n    }\n\n    return rows;\n  };\n\n  const existingExtendedData = listing === null || listing === void 0 ? void 0 : listing.enumFieldDetails.reduce(pickExtendedData(filters), []);\n  return existingExtendedData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: css.sectionDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: css.detailsTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ListingPage.detailsTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, existingExtendedData.map(detail => /*#__PURE__*/React.createElement(\"li\", {\n    key: detail.key,\n    className: css.detailsRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.detailLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, detail.label), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, detail.value))))) : null;\n};\n\n_c = SectionDetailsMaybe;\nexport default SectionDetailsMaybe;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionDetailsMaybe\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/ListingPage/SectionDetailsMaybe.js"],"names":["React","FormattedMessage","PropertyGroup","css","SectionDetailsMaybe","props","publicData","customConfig","listing","filters","enumFieldDetails","pickExtendedData","filterConfig","rows","key","publicDataValue","filterIfItExists","find","f","id","filterOptions","config","options","value","o","label","charAt","toUpperCase","slice","concat","existingExtendedData","reduce","sectionDetails","detailsTitle","details","map","detail","detailsRow","detailLabel"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage } from '../../util/reactIntl';\r\nimport { PropertyGroup } from '../../components';\r\n\r\nimport css from './ListingPage.module.css';\r\n\r\nconst SectionDetailsMaybe = props => {\r\n  const { publicData, customConfig } = props;\r\n  const { listing, filters } = customConfig || {};\r\n\r\n  if (!publicData || !customConfig || !listing?.enumFieldDetails) {\r\n    return null;\r\n  }\r\n\r\n  const pickExtendedData = filterConfig => (rows, key) => {\r\n    const publicDataValue = publicData[key];\r\n    if (publicDataValue) {\r\n      const filterIfItExists = filterConfig.find(f => f.id === key);\r\n      const filterOptions = filterIfItExists?.config?.options || [];\r\n      const value = filterOptions.find(o => o.key === publicDataValue)?.label || publicDataValue;\r\n      const label = filterIfItExists?.label || `${key.charAt(0).toUpperCase()}${key.slice(1)}`;\r\n\r\n      return rows.concat({ key, value, label });\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  const existingExtendedData = listing?.enumFieldDetails.reduce(pickExtendedData(filters), []);\r\n\r\n  return existingExtendedData ? (\r\n    <div className={css.sectionDetails}>\r\n      <h2 className={css.detailsTitle}>\r\n        <FormattedMessage id=\"ListingPage.detailsTitle\" />\r\n      </h2>\r\n      <ul className={css.details}>\r\n        {existingExtendedData.map(detail => (\r\n          <li key={detail.key} className={css.detailsRow}>\r\n            <span className={css.detailLabel}>{detail.label}</span>\r\n            <span>{detail.value}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SectionDetailsMaybe;\r\n"]},"metadata":{},"sourceType":"module"}