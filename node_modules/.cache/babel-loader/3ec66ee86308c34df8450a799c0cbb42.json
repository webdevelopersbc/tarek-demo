{"ast":null,"code":"import config from '../../config';\nimport { updatedEntities, denormalisedEntities } from '../../util/data';\nimport { storableError } from '../../util/errors';\nimport { createImageVariantConfig } from '../../util/sdkLoader';\nimport { parse } from '../../util/urlHelpers'; // Pagination page size might need to be dynamic on responsive page layouts\n// Current design has max 3 columns 42 is divisible by 2 and 3\n// So, there's enough cards to fill all columns on full pagination pages\n\nconst RESULT_PAGE_SIZE = 42; // ================ Action types ================ //\n\nexport const FETCH_LISTINGS_REQUEST = 'app/ManageListingsPage/FETCH_LISTINGS_REQUEST';\nexport const FETCH_LISTINGS_SUCCESS = 'app/ManageListingsPage/FETCH_LISTINGS_SUCCESS';\nexport const FETCH_LISTINGS_ERROR = 'app/ManageListingsPage/FETCH_LISTINGS_ERROR';\nexport const OPEN_LISTING_REQUEST = 'app/ManageListingsPage/OPEN_LISTING_REQUEST';\nexport const OPEN_LISTING_SUCCESS = 'app/ManageListingsPage/OPEN_LISTING_SUCCESS';\nexport const OPEN_LISTING_ERROR = 'app/ManageListingsPage/OPEN_LISTING_ERROR';\nexport const CLOSE_LISTING_REQUEST = 'app/ManageListingsPage/CLOSE_LISTING_REQUEST';\nexport const CLOSE_LISTING_SUCCESS = 'app/ManageListingsPage/CLOSE_LISTING_SUCCESS';\nexport const CLOSE_LISTING_ERROR = 'app/ManageListingsPage/CLOSE_LISTING_ERROR';\nexport const ADD_OWN_ENTITIES = 'app/ManageListingsPage/ADD_OWN_ENTITIES'; // ================ Reducer ================ //\n\nconst initialState = {\n  pagination: null,\n  queryParams: null,\n  queryInProgress: false,\n  queryListingsError: null,\n  currentPageResultIds: [],\n  ownEntities: {},\n  openingListing: null,\n  openingListingError: null,\n  closingListing: null,\n  closingListingError: null\n};\n\nconst resultIds = data => data.data.map(l => l.id);\n\nconst merge = (state, sdkResponse) => {\n  const apiResponse = sdkResponse.data;\n  return { ...state,\n    ownEntities: updatedEntities({ ...state.ownEntities\n    }, apiResponse)\n  };\n};\n\nconst updateListingAttributes = (state, listingEntity) => {\n  const oldListing = state.ownEntities.ownListing[listingEntity.id.uuid];\n  const updatedListing = { ...oldListing,\n    attributes: listingEntity.attributes\n  };\n  const ownListingEntities = { ...state.ownEntities.ownListing,\n    [listingEntity.id.uuid]: updatedListing\n  };\n  return { ...state,\n    ownEntities: { ...state.ownEntities,\n      ownListing: ownListingEntities\n    }\n  };\n};\n\nconst manageListingsPageReducer = (state = initialState, action = {}) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case FETCH_LISTINGS_REQUEST:\n      return { ...state,\n        queryParams: payload.queryParams,\n        queryInProgress: true,\n        queryListingsError: null,\n        currentPageResultIds: []\n      };\n\n    case FETCH_LISTINGS_SUCCESS:\n      return { ...state,\n        currentPageResultIds: resultIds(payload.data),\n        pagination: payload.data.meta,\n        queryInProgress: false\n      };\n\n    case FETCH_LISTINGS_ERROR:\n      // eslint-disable-next-line no-console\n      console.error(payload);\n      return { ...state,\n        queryInProgress: false,\n        queryListingsError: payload\n      };\n\n    case OPEN_LISTING_REQUEST:\n      return { ...state,\n        openingListing: payload.listingId,\n        openingListingError: null\n      };\n\n    case OPEN_LISTING_SUCCESS:\n      return { ...updateListingAttributes(state, payload.data),\n        openingListing: null\n      };\n\n    case OPEN_LISTING_ERROR:\n      {\n        // eslint-disable-next-line no-console\n        console.error(payload);\n        return { ...state,\n          openingListing: null,\n          openingListingError: {\n            listingId: state.openingListing,\n            error: payload\n          }\n        };\n      }\n\n    case CLOSE_LISTING_REQUEST:\n      return { ...state,\n        closingListing: payload.listingId,\n        closingListingError: null\n      };\n\n    case CLOSE_LISTING_SUCCESS:\n      return { ...updateListingAttributes(state, payload.data),\n        closingListing: null\n      };\n\n    case CLOSE_LISTING_ERROR:\n      {\n        // eslint-disable-next-line no-console\n        console.error(payload);\n        return { ...state,\n          closingListing: null,\n          closingListingError: {\n            listingId: state.closingListing,\n            error: payload\n          }\n        };\n      }\n\n    case ADD_OWN_ENTITIES:\n      return merge(state, payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default manageListingsPageReducer; // ================ Selectors ================ //\n\n/**\r\n * Get the denormalised own listing entities with the given IDs\r\n *\r\n * @param {Object} state the full Redux store\r\n * @param {Array<UUID>} listingIds listing IDs to select from the store\r\n */\n\nexport const getOwnListingsById = (state, listingIds) => {\n  const {\n    ownEntities\n  } = state.ManageListingsPage;\n  const resources = listingIds.map(id => ({\n    id,\n    type: 'ownListing'\n  }));\n  const throwIfNotFound = false;\n  return denormalisedEntities(ownEntities, resources, throwIfNotFound);\n}; // ================ Action creators ================ //\n// This works the same way as addMarketplaceEntities,\n// but we don't want to mix own listings with searched listings\n// (own listings data contains different info - e.g. exact location etc.)\n\nexport const addOwnEntities = sdkResponse => ({\n  type: ADD_OWN_ENTITIES,\n  payload: sdkResponse\n});\nexport const openListingRequest = listingId => ({\n  type: OPEN_LISTING_REQUEST,\n  payload: {\n    listingId\n  }\n});\nexport const openListingSuccess = response => ({\n  type: OPEN_LISTING_SUCCESS,\n  payload: response.data\n});\nexport const openListingError = e => ({\n  type: OPEN_LISTING_ERROR,\n  error: true,\n  payload: e\n});\nexport const closeListingRequest = listingId => ({\n  type: CLOSE_LISTING_REQUEST,\n  payload: {\n    listingId\n  }\n});\nexport const closeListingSuccess = response => ({\n  type: CLOSE_LISTING_SUCCESS,\n  payload: response.data\n});\nexport const closeListingError = e => ({\n  type: CLOSE_LISTING_ERROR,\n  error: true,\n  payload: e\n});\nexport const queryListingsRequest = queryParams => ({\n  type: FETCH_LISTINGS_REQUEST,\n  payload: {\n    queryParams\n  }\n});\nexport const queryListingsSuccess = response => ({\n  type: FETCH_LISTINGS_SUCCESS,\n  payload: {\n    data: response.data\n  }\n});\nexport const queryListingsError = e => ({\n  type: FETCH_LISTINGS_ERROR,\n  error: true,\n  payload: e\n}); // Throwing error for new (loadData may need that info)\n\nexport const queryOwnListings = queryParams => (dispatch, getState, sdk) => {\n  dispatch(queryListingsRequest(queryParams));\n  const {\n    perPage,\n    ...rest\n  } = queryParams;\n  const params = { ...rest,\n    per_page: perPage\n  };\n  return sdk.ownListings.query(params).then(response => {\n    dispatch(addOwnEntities(response));\n    dispatch(queryListingsSuccess(response));\n    return response;\n  }).catch(e => {\n    dispatch(queryListingsError(storableError(e)));\n    throw e;\n  });\n};\nexport const closeListing = listingId => (dispatch, getState, sdk) => {\n  dispatch(closeListingRequest(listingId));\n  return sdk.ownListings.close({\n    id: listingId\n  }, {\n    expand: true\n  }).then(response => {\n    dispatch(closeListingSuccess(response));\n    return response;\n  }).catch(e => {\n    dispatch(closeListingError(storableError(e)));\n  });\n};\nexport const openListing = listingId => (dispatch, getState, sdk) => {\n  dispatch(openListingRequest(listingId));\n  return sdk.ownListings.open({\n    id: listingId\n  }, {\n    expand: true\n  }).then(response => {\n    dispatch(openListingSuccess(response));\n    return response;\n  }).catch(e => {\n    dispatch(openListingError(storableError(e)));\n  });\n};\nexport const loadData = (params, search) => {\n  const queryParams = parse(search);\n  const page = queryParams.page || 1;\n  const {\n    aspectWidth = 1,\n    aspectHeight = 1,\n    variantPrefix = 'listing-card'\n  } = config.listing;\n  const aspectRatio = aspectHeight / aspectWidth;\n  return queryOwnListings({ ...queryParams,\n    page,\n    perPage: RESULT_PAGE_SIZE,\n    include: ['images', 'currentStock'],\n    'fields.image': [`variants.${variantPrefix}`, `variants.${variantPrefix}-2x`],\n    ...createImageVariantConfig(`${variantPrefix}`, 400, aspectRatio),\n    ...createImageVariantConfig(`${variantPrefix}-2x`, 800, aspectRatio),\n    'limit.images': 1\n  });\n};","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/ManageListingsPage/ManageListingsPage.duck.js"],"names":["config","updatedEntities","denormalisedEntities","storableError","createImageVariantConfig","parse","RESULT_PAGE_SIZE","FETCH_LISTINGS_REQUEST","FETCH_LISTINGS_SUCCESS","FETCH_LISTINGS_ERROR","OPEN_LISTING_REQUEST","OPEN_LISTING_SUCCESS","OPEN_LISTING_ERROR","CLOSE_LISTING_REQUEST","CLOSE_LISTING_SUCCESS","CLOSE_LISTING_ERROR","ADD_OWN_ENTITIES","initialState","pagination","queryParams","queryInProgress","queryListingsError","currentPageResultIds","ownEntities","openingListing","openingListingError","closingListing","closingListingError","resultIds","data","map","l","id","merge","state","sdkResponse","apiResponse","updateListingAttributes","listingEntity","oldListing","ownListing","uuid","updatedListing","attributes","ownListingEntities","manageListingsPageReducer","action","type","payload","meta","console","error","listingId","getOwnListingsById","listingIds","ManageListingsPage","resources","throwIfNotFound","addOwnEntities","openListingRequest","openListingSuccess","response","openListingError","e","closeListingRequest","closeListingSuccess","closeListingError","queryListingsRequest","queryListingsSuccess","queryOwnListings","dispatch","getState","sdk","perPage","rest","params","per_page","ownListings","query","then","catch","closeListing","close","expand","openListing","open","loadData","search","page","aspectWidth","aspectHeight","variantPrefix","listing","aspectRatio","include"],"mappings":"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","sourcesContent":["import config from '../../config';\r\nimport { updatedEntities, denormalisedEntities } from '../../util/data';\r\nimport { storableError } from '../../util/errors';\r\nimport { createImageVariantConfig } from '../../util/sdkLoader';\r\nimport { parse } from '../../util/urlHelpers';\r\n\r\n// Pagination page size might need to be dynamic on responsive page layouts\r\n// Current design has max 3 columns 42 is divisible by 2 and 3\r\n// So, there's enough cards to fill all columns on full pagination pages\r\nconst RESULT_PAGE_SIZE = 42;\r\n\r\n// ================ Action types ================ //\r\n\r\nexport const FETCH_LISTINGS_REQUEST = 'app/ManageListingsPage/FETCH_LISTINGS_REQUEST';\r\nexport const FETCH_LISTINGS_SUCCESS = 'app/ManageListingsPage/FETCH_LISTINGS_SUCCESS';\r\nexport const FETCH_LISTINGS_ERROR = 'app/ManageListingsPage/FETCH_LISTINGS_ERROR';\r\n\r\nexport const OPEN_LISTING_REQUEST = 'app/ManageListingsPage/OPEN_LISTING_REQUEST';\r\nexport const OPEN_LISTING_SUCCESS = 'app/ManageListingsPage/OPEN_LISTING_SUCCESS';\r\nexport const OPEN_LISTING_ERROR = 'app/ManageListingsPage/OPEN_LISTING_ERROR';\r\n\r\nexport const CLOSE_LISTING_REQUEST = 'app/ManageListingsPage/CLOSE_LISTING_REQUEST';\r\nexport const CLOSE_LISTING_SUCCESS = 'app/ManageListingsPage/CLOSE_LISTING_SUCCESS';\r\nexport const CLOSE_LISTING_ERROR = 'app/ManageListingsPage/CLOSE_LISTING_ERROR';\r\n\r\nexport const ADD_OWN_ENTITIES = 'app/ManageListingsPage/ADD_OWN_ENTITIES';\r\n\r\n// ================ Reducer ================ //\r\n\r\nconst initialState = {\r\n  pagination: null,\r\n  queryParams: null,\r\n  queryInProgress: false,\r\n  queryListingsError: null,\r\n  currentPageResultIds: [],\r\n  ownEntities: {},\r\n  openingListing: null,\r\n  openingListingError: null,\r\n  closingListing: null,\r\n  closingListingError: null,\r\n};\r\n\r\nconst resultIds = data => data.data.map(l => l.id);\r\n\r\nconst merge = (state, sdkResponse) => {\r\n  const apiResponse = sdkResponse.data;\r\n  return {\r\n    ...state,\r\n    ownEntities: updatedEntities({ ...state.ownEntities }, apiResponse),\r\n  };\r\n};\r\n\r\nconst updateListingAttributes = (state, listingEntity) => {\r\n  const oldListing = state.ownEntities.ownListing[listingEntity.id.uuid];\r\n  const updatedListing = { ...oldListing, attributes: listingEntity.attributes };\r\n  const ownListingEntities = {\r\n    ...state.ownEntities.ownListing,\r\n    [listingEntity.id.uuid]: updatedListing,\r\n  };\r\n  return {\r\n    ...state,\r\n    ownEntities: { ...state.ownEntities, ownListing: ownListingEntities },\r\n  };\r\n};\r\n\r\nconst manageListingsPageReducer = (state = initialState, action = {}) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case FETCH_LISTINGS_REQUEST:\r\n      return {\r\n        ...state,\r\n        queryParams: payload.queryParams,\r\n        queryInProgress: true,\r\n        queryListingsError: null,\r\n        currentPageResultIds: [],\r\n      };\r\n    case FETCH_LISTINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPageResultIds: resultIds(payload.data),\r\n        pagination: payload.data.meta,\r\n        queryInProgress: false,\r\n      };\r\n    case FETCH_LISTINGS_ERROR:\r\n      // eslint-disable-next-line no-console\r\n      console.error(payload);\r\n      return { ...state, queryInProgress: false, queryListingsError: payload };\r\n\r\n    case OPEN_LISTING_REQUEST:\r\n      return {\r\n        ...state,\r\n        openingListing: payload.listingId,\r\n        openingListingError: null,\r\n      };\r\n    case OPEN_LISTING_SUCCESS:\r\n      return {\r\n        ...updateListingAttributes(state, payload.data),\r\n        openingListing: null,\r\n      };\r\n    case OPEN_LISTING_ERROR: {\r\n      // eslint-disable-next-line no-console\r\n      console.error(payload);\r\n      return {\r\n        ...state,\r\n        openingListing: null,\r\n        openingListingError: {\r\n          listingId: state.openingListing,\r\n          error: payload,\r\n        },\r\n      };\r\n    }\r\n\r\n    case CLOSE_LISTING_REQUEST:\r\n      return {\r\n        ...state,\r\n        closingListing: payload.listingId,\r\n        closingListingError: null,\r\n      };\r\n    case CLOSE_LISTING_SUCCESS:\r\n      return {\r\n        ...updateListingAttributes(state, payload.data),\r\n        closingListing: null,\r\n      };\r\n    case CLOSE_LISTING_ERROR: {\r\n      // eslint-disable-next-line no-console\r\n      console.error(payload);\r\n      return {\r\n        ...state,\r\n        closingListing: null,\r\n        closingListingError: {\r\n          listingId: state.closingListing,\r\n          error: payload,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_OWN_ENTITIES:\r\n      return merge(state, payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default manageListingsPageReducer;\r\n\r\n// ================ Selectors ================ //\r\n\r\n/**\r\n * Get the denormalised own listing entities with the given IDs\r\n *\r\n * @param {Object} state the full Redux store\r\n * @param {Array<UUID>} listingIds listing IDs to select from the store\r\n */\r\nexport const getOwnListingsById = (state, listingIds) => {\r\n  const { ownEntities } = state.ManageListingsPage;\r\n  const resources = listingIds.map(id => ({\r\n    id,\r\n    type: 'ownListing',\r\n  }));\r\n  const throwIfNotFound = false;\r\n  return denormalisedEntities(ownEntities, resources, throwIfNotFound);\r\n};\r\n\r\n// ================ Action creators ================ //\r\n\r\n// This works the same way as addMarketplaceEntities,\r\n// but we don't want to mix own listings with searched listings\r\n// (own listings data contains different info - e.g. exact location etc.)\r\nexport const addOwnEntities = sdkResponse => ({\r\n  type: ADD_OWN_ENTITIES,\r\n  payload: sdkResponse,\r\n});\r\n\r\nexport const openListingRequest = listingId => ({\r\n  type: OPEN_LISTING_REQUEST,\r\n  payload: { listingId },\r\n});\r\n\r\nexport const openListingSuccess = response => ({\r\n  type: OPEN_LISTING_SUCCESS,\r\n  payload: response.data,\r\n});\r\n\r\nexport const openListingError = e => ({\r\n  type: OPEN_LISTING_ERROR,\r\n  error: true,\r\n  payload: e,\r\n});\r\n\r\nexport const closeListingRequest = listingId => ({\r\n  type: CLOSE_LISTING_REQUEST,\r\n  payload: { listingId },\r\n});\r\n\r\nexport const closeListingSuccess = response => ({\r\n  type: CLOSE_LISTING_SUCCESS,\r\n  payload: response.data,\r\n});\r\n\r\nexport const closeListingError = e => ({\r\n  type: CLOSE_LISTING_ERROR,\r\n  error: true,\r\n  payload: e,\r\n});\r\n\r\nexport const queryListingsRequest = queryParams => ({\r\n  type: FETCH_LISTINGS_REQUEST,\r\n  payload: { queryParams },\r\n});\r\n\r\nexport const queryListingsSuccess = response => ({\r\n  type: FETCH_LISTINGS_SUCCESS,\r\n  payload: { data: response.data },\r\n});\r\n\r\nexport const queryListingsError = e => ({\r\n  type: FETCH_LISTINGS_ERROR,\r\n  error: true,\r\n  payload: e,\r\n});\r\n\r\n// Throwing error for new (loadData may need that info)\r\nexport const queryOwnListings = queryParams => (dispatch, getState, sdk) => {\r\n  dispatch(queryListingsRequest(queryParams));\r\n\r\n  const { perPage, ...rest } = queryParams;\r\n  const params = { ...rest, per_page: perPage };\r\n\r\n  return sdk.ownListings\r\n    .query(params)\r\n    .then(response => {\r\n      dispatch(addOwnEntities(response));\r\n      dispatch(queryListingsSuccess(response));\r\n      return response;\r\n    })\r\n    .catch(e => {\r\n      dispatch(queryListingsError(storableError(e)));\r\n      throw e;\r\n    });\r\n};\r\n\r\nexport const closeListing = listingId => (dispatch, getState, sdk) => {\r\n  dispatch(closeListingRequest(listingId));\r\n\r\n  return sdk.ownListings\r\n    .close({ id: listingId }, { expand: true })\r\n    .then(response => {\r\n      dispatch(closeListingSuccess(response));\r\n      return response;\r\n    })\r\n    .catch(e => {\r\n      dispatch(closeListingError(storableError(e)));\r\n    });\r\n};\r\n\r\nexport const openListing = listingId => (dispatch, getState, sdk) => {\r\n  dispatch(openListingRequest(listingId));\r\n\r\n  return sdk.ownListings\r\n    .open({ id: listingId }, { expand: true })\r\n    .then(response => {\r\n      dispatch(openListingSuccess(response));\r\n      return response;\r\n    })\r\n    .catch(e => {\r\n      dispatch(openListingError(storableError(e)));\r\n    });\r\n};\r\n\r\nexport const loadData = (params, search) => {\r\n  const queryParams = parse(search);\r\n  const page = queryParams.page || 1;\r\n\r\n  const { aspectWidth = 1, aspectHeight = 1, variantPrefix = 'listing-card' } = config.listing;\r\n  const aspectRatio = aspectHeight / aspectWidth;\r\n\r\n  return queryOwnListings({\r\n    ...queryParams,\r\n    page,\r\n    perPage: RESULT_PAGE_SIZE,\r\n    include: ['images', 'currentStock'],\r\n    'fields.image': [`variants.${variantPrefix}`, `variants.${variantPrefix}-2x`],\r\n    ...createImageVariantConfig(`${variantPrefix}`, 400, aspectRatio),\r\n    ...createImageVariantConfig(`${variantPrefix}-2x`, 800, aspectRatio),\r\n    'limit.images': 1,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}