{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\OrderBreakdown\\\\LineItemSubTotalMaybe.js\";\nimport React from 'react';\nimport { string } from 'prop-types';\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\nimport Decimal from 'decimal.js';\nimport { formatMoney } from '../../util/currency';\nimport config from '../../config';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { propTypes, LINE_ITEM_CUSTOMER_COMMISSION, LINE_ITEM_PROVIDER_COMMISSION } from '../../util/types';\nimport css from './OrderBreakdown.module.css';\nconst {\n  Money\n} = sdkTypes;\n/**\r\n * Calculates the total price in sub units for multiple line items.\r\n */\n\nconst lineItemsTotal = lineItems => {\n  const amount = lineItems.reduce((total, item) => {\n    return total.plus(item.lineTotal.amount);\n  }, new Decimal(0));\n  const currency = lineItems[0] ? lineItems[0].lineTotal.currency : config.currency;\n  return new Money(amount, currency);\n};\n/**\r\n * Checks if line item represents commission\r\n */\n\n\nconst isCommission = lineItem => {\n  return lineItem.code === LINE_ITEM_PROVIDER_COMMISSION || lineItem.code === LINE_ITEM_CUSTOMER_COMMISSION;\n};\n/**\r\n * Returns non-commission, non-reversal line items\r\n */\n\n\nconst nonCommissionNonReversalLineItems = lineItems => {\n  return lineItems.filter(item => !isCommission(item) && !item.reversal);\n};\n/**\r\n * Check if there is a commission line-item for the given user role.\r\n */\n\n\nconst hasCommission = (lineItems, userRole) => {\n  let commissionLineItem = null;\n\n  if (userRole === 'customer') {\n    commissionLineItem = lineItems.find(item => item.code === LINE_ITEM_CUSTOMER_COMMISSION);\n  } else if (userRole === 'provider') {\n    commissionLineItem = lineItems.find(item => item.code === LINE_ITEM_PROVIDER_COMMISSION);\n  }\n\n  return !!commissionLineItem;\n};\n\nconst LineItemSubTotalMaybe = props => {\n  const {\n    lineItems,\n    unitType,\n    userRole,\n    intl\n  } = props;\n  const refund = lineItems.find(item => item.code === unitType && item.reversal); // Show unit purchase line total (unit price * quantity) as a subtotal.\n  // PLEASE NOTE that this assumes that the transaction doesn't have other\n  // line item types than the defined unit type (e.g. week, month, year).\n\n  const showSubTotal = hasCommission(lineItems, userRole) || refund; // all non-reversal, non-commission line items\n\n  const subTotalLineItems = nonCommissionNonReversalLineItems(lineItems); // line totals of those line items combined\n\n  const subTotal = lineItemsTotal(subTotalLineItems);\n  const formattedSubTotal = subTotalLineItems.length > 0 ? formatMoney(intl, subTotal) : null;\n  return formattedSubTotal && showSubTotal ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    className: css.totalDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.subTotalLineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.itemLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderBreakdown.subTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: css.itemValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, formattedSubTotal))) : null;\n};\n\n_c = LineItemSubTotalMaybe;\nLineItemSubTotalMaybe.propTypes = {\n  lineItems: propTypes.lineItems.isRequired,\n  userRole: string.isRequired,\n  intl: intlShape.isRequired\n};\nexport default LineItemSubTotalMaybe;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemSubTotalMaybe\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/OrderBreakdown/LineItemSubTotalMaybe.js"],"names":["React","string","FormattedMessage","intlShape","Decimal","formatMoney","config","types","sdkTypes","propTypes","LINE_ITEM_CUSTOMER_COMMISSION","LINE_ITEM_PROVIDER_COMMISSION","css","Money","lineItemsTotal","lineItems","amount","reduce","total","item","plus","lineTotal","currency","isCommission","lineItem","code","nonCommissionNonReversalLineItems","filter","reversal","hasCommission","userRole","commissionLineItem","find","LineItemSubTotalMaybe","props","unitType","intl","refund","showSubTotal","subTotalLineItems","subTotal","formattedSubTotal","length","totalDivider","subTotalLineItem","itemLabel","itemValue","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { string } from 'prop-types';\r\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\r\nimport Decimal from 'decimal.js';\r\nimport { formatMoney } from '../../util/currency';\r\nimport config from '../../config';\r\nimport { types as sdkTypes } from '../../util/sdkLoader';\r\nimport {\r\n  propTypes,\r\n  LINE_ITEM_CUSTOMER_COMMISSION,\r\n  LINE_ITEM_PROVIDER_COMMISSION,\r\n} from '../../util/types';\r\n\r\nimport css from './OrderBreakdown.module.css';\r\n\r\nconst { Money } = sdkTypes;\r\n\r\n/**\r\n * Calculates the total price in sub units for multiple line items.\r\n */\r\nconst lineItemsTotal = lineItems => {\r\n  const amount = lineItems.reduce((total, item) => {\r\n    return total.plus(item.lineTotal.amount);\r\n  }, new Decimal(0));\r\n  const currency = lineItems[0] ? lineItems[0].lineTotal.currency : config.currency;\r\n  return new Money(amount, currency);\r\n};\r\n\r\n/**\r\n * Checks if line item represents commission\r\n */\r\nconst isCommission = lineItem => {\r\n  return (\r\n    lineItem.code === LINE_ITEM_PROVIDER_COMMISSION ||\r\n    lineItem.code === LINE_ITEM_CUSTOMER_COMMISSION\r\n  );\r\n};\r\n\r\n/**\r\n * Returns non-commission, non-reversal line items\r\n */\r\nconst nonCommissionNonReversalLineItems = lineItems => {\r\n  return lineItems.filter(item => !isCommission(item) && !item.reversal);\r\n};\r\n\r\n/**\r\n * Check if there is a commission line-item for the given user role.\r\n */\r\nconst hasCommission = (lineItems, userRole) => {\r\n  let commissionLineItem = null;\r\n\r\n  if (userRole === 'customer') {\r\n    commissionLineItem = lineItems.find(item => item.code === LINE_ITEM_CUSTOMER_COMMISSION);\r\n  } else if (userRole === 'provider') {\r\n    commissionLineItem = lineItems.find(item => item.code === LINE_ITEM_PROVIDER_COMMISSION);\r\n  }\r\n  return !!commissionLineItem;\r\n};\r\n\r\nconst LineItemSubTotalMaybe = props => {\r\n  const { lineItems, unitType, userRole, intl } = props;\r\n\r\n  const refund = lineItems.find(item => item.code === unitType && item.reversal);\r\n\r\n  // Show unit purchase line total (unit price * quantity) as a subtotal.\r\n  // PLEASE NOTE that this assumes that the transaction doesn't have other\r\n  // line item types than the defined unit type (e.g. week, month, year).\r\n  const showSubTotal = hasCommission(lineItems, userRole) || refund;\r\n\r\n  // all non-reversal, non-commission line items\r\n  const subTotalLineItems = nonCommissionNonReversalLineItems(lineItems);\r\n  // line totals of those line items combined\r\n  const subTotal = lineItemsTotal(subTotalLineItems);\r\n\r\n  const formattedSubTotal = subTotalLineItems.length > 0 ? formatMoney(intl, subTotal) : null;\r\n\r\n  return formattedSubTotal && showSubTotal ? (\r\n    <>\r\n      <hr className={css.totalDivider} />\r\n      <div className={css.subTotalLineItem}>\r\n        <span className={css.itemLabel}>\r\n          <FormattedMessage id=\"OrderBreakdown.subTotal\" />\r\n        </span>\r\n        <span className={css.itemValue}>{formattedSubTotal}</span>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nLineItemSubTotalMaybe.propTypes = {\r\n  lineItems: propTypes.lineItems.isRequired,\r\n  userRole: string.isRequired,\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default LineItemSubTotalMaybe;\r\n"]},"metadata":{},"sourceType":"module"}