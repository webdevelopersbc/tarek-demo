{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldBirthdayInput\\\\FieldBirthdayInput.example.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport FieldBirthdayInput from './FieldBirthdayInput';\n\nconst identity = v => v;\n\nconst FormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const {\n      handleSubmit,\n      onChange,\n      values\n    } = fieldRenderProps;\n    const required = validators.required('A valid date is required');\n    const minAge = 18;\n    const minAgeRequired = validators.ageAtLeast(`Age should be at least ${minAge}`, minAge);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSpy, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldBirthdayInput, {\n      id: `birthday`,\n      name: \"birthday\",\n      label: \"Date of birth\",\n      format: identity,\n      valueFromForm: values.birthday,\n      validate: validators.composeValidators(required, minAgeRequired),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}));\n\n_c = FormComponent;\nexport const Empty = {\n  component: FormComponent,\n  props: {\n    onChange: formState => {\n      const birthday = formState.values.birthday;\n\n      if (birthday) {\n        console.log('birthday changed to:', birthday);\n      }\n    },\n    onSubmit: values => {\n      console.log('BirthdayInput.Form submitted values:', values);\n    }\n  },\n  group: 'inputs'\n};\nexport const WithInitialValue = {\n  component: FormComponent,\n  props: {\n    initialValues: {\n      birthday: new Date('1982-03-01')\n    },\n    onChange: formState => {\n      const birthday = formState.values.birthday;\n\n      if (birthday && formState.dirty) {\n        console.log('birthday changed to:', birthday);\n      }\n    },\n    onSubmit: values => {\n      console.log('BirthdayInput.Form submitted values:', values);\n    }\n  },\n  group: 'inputs'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldBirthdayInput/FieldBirthdayInput.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","FieldBirthdayInput","identity","v","FormComponent","props","fieldRenderProps","handleSubmit","onChange","values","required","minAge","minAgeRequired","ageAtLeast","e","preventDefault","birthday","composeValidators","Empty","component","formState","console","log","onSubmit","group","WithInitialValue","initialValues","Date","dirty"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,QAAQ,GAAGC,CAAC,IAAIA,CAAtB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,iBACzB,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,MAAM,EAAEC,gBAAgB,IAAI;AAC1B,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,QAAqCH,gBAA3C;AACA,UAAMI,QAAQ,GAAGV,UAAU,CAACU,QAAX,CAAoB,0BAApB,CAAjB;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,cAAc,GAAGZ,UAAU,CAACa,UAAX,CAAuB,0BAAyBF,MAAO,EAAvD,EAA0DA,MAA1D,CAAvB;AAEA,wBACE;AACE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAR,QAAAA,YAAY,CAACO,CAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEN,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,kBAAD;AACE,MAAA,EAAE,EAAG,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC,eAHR;AAIE,MAAA,MAAM,EAAEN,QAJV;AAKE,MAAA,aAAa,EAAEO,MAAM,CAACO,QALxB;AAME,MAAA,QAAQ,EAAEhB,UAAU,CAACiB,iBAAX,CAA6BP,QAA7B,EAAuCE,cAAvC,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAkBD,GA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;KAAMR,a;AA+BN,OAAO,MAAMc,KAAK,GAAG;AACnBC,EAAAA,SAAS,EAAEf,aADQ;AAEnBC,EAAAA,KAAK,EAAE;AACLG,IAAAA,QAAQ,EAAEY,SAAS,IAAI;AACrB,YAAMJ,QAAQ,GAAGI,SAAS,CAACX,MAAV,CAAiBO,QAAlC;;AACA,UAAIA,QAAJ,EAAc;AACZK,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,QAApC;AACD;AACF,KANI;AAOLO,IAAAA,QAAQ,EAAEd,MAAM,IAAI;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDb,MAApD;AACD;AATI,GAFY;AAanBe,EAAAA,KAAK,EAAE;AAbY,CAAd;AAgBP,OAAO,MAAMC,gBAAgB,GAAG;AAC9BN,EAAAA,SAAS,EAAEf,aADmB;AAE9BC,EAAAA,KAAK,EAAE;AACLqB,IAAAA,aAAa,EAAE;AAAEV,MAAAA,QAAQ,EAAE,IAAIW,IAAJ,CAAS,YAAT;AAAZ,KADV;AAELnB,IAAAA,QAAQ,EAAEY,SAAS,IAAI;AACrB,YAAMJ,QAAQ,GAAGI,SAAS,CAACX,MAAV,CAAiBO,QAAlC;;AACA,UAAIA,QAAQ,IAAII,SAAS,CAACQ,KAA1B,EAAiC;AAC/BP,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,QAApC;AACD;AACF,KAPI;AAQLO,IAAAA,QAAQ,EAAEd,MAAM,IAAI;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDb,MAApD;AACD;AAVI,GAFuB;AAc9Be,EAAAA,KAAK,EAAE;AAduB,CAAzB","sourcesContent":["/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport * as validators from '../../util/validators';\r\nimport FieldBirthdayInput from './FieldBirthdayInput';\r\n\r\nconst identity = v => v;\r\n\r\nconst FormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={fieldRenderProps => {\r\n      const { handleSubmit, onChange, values } = fieldRenderProps;\r\n      const required = validators.required('A valid date is required');\r\n      const minAge = 18;\r\n      const minAgeRequired = validators.ageAtLeast(`Age should be at least ${minAge}`, minAge);\r\n\r\n      return (\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormSpy onChange={onChange} />\r\n          <FieldBirthdayInput\r\n            id={`birthday`}\r\n            name=\"birthday\"\r\n            label=\"Date of birth\"\r\n            format={identity}\r\n            valueFromForm={values.birthday}\r\n            validate={validators.composeValidators(required, minAgeRequired)}\r\n          />\r\n        </form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport const Empty = {\r\n  component: FormComponent,\r\n  props: {\r\n    onChange: formState => {\r\n      const birthday = formState.values.birthday;\r\n      if (birthday) {\r\n        console.log('birthday changed to:', birthday);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('BirthdayInput.Form submitted values:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n\r\nexport const WithInitialValue = {\r\n  component: FormComponent,\r\n  props: {\r\n    initialValues: { birthday: new Date('1982-03-01') },\r\n    onChange: formState => {\r\n      const birthday = formState.values.birthday;\r\n      if (birthday && formState.dirty) {\r\n        console.log('birthday changed to:', birthday);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('BirthdayInput.Form submitted values:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}