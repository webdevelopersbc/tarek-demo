{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\ListingPage\\\\EnquiryForm\\\\EnquiryForm.js\";\nimport React from 'react';\nimport { string, bool } from 'prop-types';\nimport { compose } from 'redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\nimport * as validators from '../../../util/validators';\nimport { propTypes } from '../../../util/types';\nimport { Form, PrimaryButton, FieldTextInput, IconEnquiry } from '../../../components';\nimport css from './EnquiryForm.module.css';\n\nconst EnquiryFormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const {\n      rootClassName,\n      className,\n      submitButtonWrapperClassName,\n      formId,\n      handleSubmit,\n      inProgress,\n      intl,\n      listingTitle,\n      authorDisplayName,\n      sendEnquiryError\n    } = fieldRenderProps;\n    const messageLabel = intl.formatMessage({\n      id: 'EnquiryForm.messageLabel'\n    }, {\n      authorDisplayName\n    });\n    const messagePlaceholder = intl.formatMessage({\n      id: 'EnquiryForm.messagePlaceholder'\n    }, {\n      authorDisplayName\n    });\n    const messageRequiredMessage = intl.formatMessage({\n      id: 'EnquiryForm.messageRequired'\n    });\n    const messageRequired = validators.requiredAndNonEmptyString(messageRequiredMessage);\n    const classes = classNames(rootClassName || css.root, className);\n    const submitInProgress = inProgress;\n    const submitDisabled = submitInProgress;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: classes,\n      onSubmit: handleSubmit,\n      enforcePagePreloadFor: \"OrderDetailsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconEnquiry, {\n      className: css.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: css.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EnquiryForm.heading\",\n      values: {\n        listingTitle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      name: \"message\",\n      id: formId ? `${formId}.message` : 'message',\n      label: messageLabel,\n      placeholder: messagePlaceholder,\n      validate: messageRequired,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: submitButtonWrapperClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, sendEnquiryError ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EnquiryForm.sendEnquiryError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })) : null, /*#__PURE__*/React.createElement(PrimaryButton, {\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EnquiryForm.submitButtonText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }))));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}));\n\n_c = EnquiryFormComponent;\nEnquiryFormComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  submitButtonWrapperClassName: null,\n  inProgress: false,\n  sendEnquiryError: null\n};\nEnquiryFormComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  submitButtonWrapperClassName: string,\n  inProgress: bool,\n  listingTitle: string.isRequired,\n  authorDisplayName: string.isRequired,\n  sendEnquiryError: propTypes.error,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst EnquiryForm = compose(injectIntl)(EnquiryFormComponent);\nEnquiryForm.displayName = 'EnquiryForm';\nexport default EnquiryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnquiryFormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/ListingPage/EnquiryForm/EnquiryForm.js"],"names":["React","string","bool","compose","Form","FinalForm","classNames","FormattedMessage","injectIntl","intlShape","validators","propTypes","PrimaryButton","FieldTextInput","IconEnquiry","css","EnquiryFormComponent","props","fieldRenderProps","rootClassName","className","submitButtonWrapperClassName","formId","handleSubmit","inProgress","intl","listingTitle","authorDisplayName","sendEnquiryError","messageLabel","formatMessage","id","messagePlaceholder","messageRequiredMessage","messageRequired","requiredAndNonEmptyString","classes","root","submitInProgress","submitDisabled","icon","heading","field","error","defaultProps","isRequired","EnquiryForm","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { string, bool } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport * as validators from '../../../util/validators';\r\nimport { propTypes } from '../../../util/types';\r\nimport { Form, PrimaryButton, FieldTextInput, IconEnquiry } from '../../../components';\r\n\r\nimport css from './EnquiryForm.module.css';\r\n\r\nconst EnquiryFormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={fieldRenderProps => {\r\n      const {\r\n        rootClassName,\r\n        className,\r\n        submitButtonWrapperClassName,\r\n        formId,\r\n        handleSubmit,\r\n        inProgress,\r\n        intl,\r\n        listingTitle,\r\n        authorDisplayName,\r\n        sendEnquiryError,\r\n      } = fieldRenderProps;\r\n\r\n      const messageLabel = intl.formatMessage(\r\n        {\r\n          id: 'EnquiryForm.messageLabel',\r\n        },\r\n        { authorDisplayName }\r\n      );\r\n      const messagePlaceholder = intl.formatMessage(\r\n        {\r\n          id: 'EnquiryForm.messagePlaceholder',\r\n        },\r\n        { authorDisplayName }\r\n      );\r\n      const messageRequiredMessage = intl.formatMessage({\r\n        id: 'EnquiryForm.messageRequired',\r\n      });\r\n      const messageRequired = validators.requiredAndNonEmptyString(messageRequiredMessage);\r\n\r\n      const classes = classNames(rootClassName || css.root, className);\r\n      const submitInProgress = inProgress;\r\n      const submitDisabled = submitInProgress;\r\n\r\n      return (\r\n        <Form className={classes} onSubmit={handleSubmit} enforcePagePreloadFor=\"OrderDetailsPage\">\r\n          <IconEnquiry className={css.icon} />\r\n          <h2 className={css.heading}>\r\n            <FormattedMessage id=\"EnquiryForm.heading\" values={{ listingTitle }} />\r\n          </h2>\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"textarea\"\r\n            name=\"message\"\r\n            id={formId ? `${formId}.message` : 'message'}\r\n            label={messageLabel}\r\n            placeholder={messagePlaceholder}\r\n            validate={messageRequired}\r\n          />\r\n          <div className={submitButtonWrapperClassName}>\r\n            {sendEnquiryError ? (\r\n              <p className={css.error}>\r\n                <FormattedMessage id=\"EnquiryForm.sendEnquiryError\" />\r\n              </p>\r\n            ) : null}\r\n            <PrimaryButton type=\"submit\" inProgress={submitInProgress} disabled={submitDisabled}>\r\n              <FormattedMessage id=\"EnquiryForm.submitButtonText\" />\r\n            </PrimaryButton>\r\n          </div>\r\n        </Form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nEnquiryFormComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  submitButtonWrapperClassName: null,\r\n  inProgress: false,\r\n  sendEnquiryError: null,\r\n};\r\n\r\nEnquiryFormComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  submitButtonWrapperClassName: string,\r\n\r\n  inProgress: bool,\r\n\r\n  listingTitle: string.isRequired,\r\n  authorDisplayName: string.isRequired,\r\n  sendEnquiryError: propTypes.error,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst EnquiryForm = compose(injectIntl)(EnquiryFormComponent);\r\n\r\nEnquiryForm.displayName = 'EnquiryForm';\r\n\r\nexport default EnquiryForm;\r\n"]},"metadata":{},"sourceType":"module"}