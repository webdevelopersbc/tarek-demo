{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\Map\\\\Map.js\";\nimport React, { Component } from 'react';\nimport { bool, number, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { propTypes } from '../../util/types';\nimport config from '../../config';\nimport * as mapboxMap from './MapboxMap';\nimport * as googleMapsMap from './GoogleMap';\nimport css from './Map.module.css';\nconst isGoogleMapsInUse = config.maps.mapProvider === 'GOOGLE_MAPS';\nconst StaticMap = isGoogleMapsInUse ? googleMapsMap.StaticMap : mapboxMap.StaticMap;\nconst DynamicMap = isGoogleMapsInUse ? googleMapsMap.DynamicMap : mapboxMap.DynamicMap;\nconst isMapsLibLoaded = isGoogleMapsInUse ? googleMapsMap.isMapsLibLoaded : mapboxMap.isMapsLibLoaded;\nexport class Map extends Component {\n  render() {\n    const {\n      className,\n      rootClassName,\n      mapRootClassName,\n      address,\n      center,\n      obfuscatedCenter,\n      zoom,\n      mapsConfig,\n      useStaticMap\n    } = this.props;\n    const classes = classNames(rootClassName || css.root, className);\n    const mapClasses = mapRootClassName || css.mapRoot;\n\n    if (mapsConfig.fuzzy.enabled && !obfuscatedCenter) {\n      throw new Error('Map: obfuscatedCenter prop is required when config.maps.fuzzy.enabled === true');\n    }\n\n    if (!mapsConfig.fuzzy.enabled && !center) {\n      throw new Error('Map: center prop is required when config.maps.fuzzy.enabled === false');\n    }\n\n    const location = mapsConfig.fuzzy.enabled ? obfuscatedCenter : center;\n    return !isMapsLibLoaded() ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }) : useStaticMap ? /*#__PURE__*/React.createElement(StaticMap, {\n      center: location,\n      zoom: zoom,\n      address: address,\n      mapsConfig: mapsConfig,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(DynamicMap, {\n      containerClassName: classes,\n      mapClassName: mapClasses,\n      center: location,\n      zoom: zoom,\n      address: address,\n      mapsConfig: mapsConfig,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\nMap.defaultProps = {\n  className: null,\n  rootClassName: null,\n  mapRootClassName: null,\n  address: '',\n  zoom: config.maps.fuzzy.enabled ? config.maps.fuzzy.defaultZoomLevel : 11,\n  mapsConfig: config.maps,\n  useStaticMap: false\n};\nMap.propTypes = {\n  className: string,\n  rootClassName: string,\n  mapRootClassName: string,\n  address: string,\n  center: propTypes.latlng,\n  obfuscatedCenter: propTypes.latlng,\n  zoom: number,\n  mapsConfig: object,\n  useStaticMap: bool\n};\nexport default Map;","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/Map/Map.js"],"names":["React","Component","bool","number","object","string","classNames","propTypes","config","mapboxMap","googleMapsMap","css","isGoogleMapsInUse","maps","mapProvider","StaticMap","DynamicMap","isMapsLibLoaded","Map","render","className","rootClassName","mapRootClassName","address","center","obfuscatedCenter","zoom","mapsConfig","useStaticMap","props","classes","root","mapClasses","mapRoot","fuzzy","enabled","Error","location","defaultProps","defaultZoomLevel","latlng"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { bool, number, object, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { propTypes } from '../../util/types';\r\nimport config from '../../config';\r\nimport * as mapboxMap from './MapboxMap';\r\nimport * as googleMapsMap from './GoogleMap';\r\n\r\nimport css from './Map.module.css';\r\n\r\nconst isGoogleMapsInUse = config.maps.mapProvider === 'GOOGLE_MAPS';\r\nconst StaticMap = isGoogleMapsInUse ? googleMapsMap.StaticMap : mapboxMap.StaticMap;\r\nconst DynamicMap = isGoogleMapsInUse ? googleMapsMap.DynamicMap : mapboxMap.DynamicMap;\r\nconst isMapsLibLoaded = isGoogleMapsInUse\r\n  ? googleMapsMap.isMapsLibLoaded\r\n  : mapboxMap.isMapsLibLoaded;\r\n\r\nexport class Map extends Component {\r\n  render() {\r\n    const {\r\n      className,\r\n      rootClassName,\r\n      mapRootClassName,\r\n      address,\r\n      center,\r\n      obfuscatedCenter,\r\n      zoom,\r\n      mapsConfig,\r\n      useStaticMap,\r\n    } = this.props;\r\n    const classes = classNames(rootClassName || css.root, className);\r\n    const mapClasses = mapRootClassName || css.mapRoot;\r\n\r\n    if (mapsConfig.fuzzy.enabled && !obfuscatedCenter) {\r\n      throw new Error(\r\n        'Map: obfuscatedCenter prop is required when config.maps.fuzzy.enabled === true'\r\n      );\r\n    }\r\n    if (!mapsConfig.fuzzy.enabled && !center) {\r\n      throw new Error('Map: center prop is required when config.maps.fuzzy.enabled === false');\r\n    }\r\n\r\n    const location = mapsConfig.fuzzy.enabled ? obfuscatedCenter : center;\r\n\r\n    return !isMapsLibLoaded() ? (\r\n      <div className={classes} />\r\n    ) : useStaticMap ? (\r\n      <StaticMap center={location} zoom={zoom} address={address} mapsConfig={mapsConfig} />\r\n    ) : (\r\n      <DynamicMap\r\n        containerClassName={classes}\r\n        mapClassName={mapClasses}\r\n        center={location}\r\n        zoom={zoom}\r\n        address={address}\r\n        mapsConfig={mapsConfig}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nMap.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  mapRootClassName: null,\r\n  address: '',\r\n  zoom: config.maps.fuzzy.enabled ? config.maps.fuzzy.defaultZoomLevel : 11,\r\n  mapsConfig: config.maps,\r\n  useStaticMap: false,\r\n};\r\n\r\nMap.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  mapRootClassName: string,\r\n  address: string,\r\n  center: propTypes.latlng,\r\n  obfuscatedCenter: propTypes.latlng,\r\n  zoom: number,\r\n  mapsConfig: object,\r\n  useStaticMap: bool,\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}