{"ast":null,"code":"import * as custom from './marketplace-custom-config.js';\nimport defaultLocationSearches from './default-location-searches';\nimport { defaultMCC, stripePublishableKey, stripeCountryDetails } from './stripe-config';\nimport { subUnitDivisors, currencyConfiguration } from './currency-config';\nconst env = process.env.REACT_APP_ENV;\nconst dev = process.env.REACT_APP_ENV === 'development'; // If you want to change the language, remember to also change the\n// locale data and the messages in the app.js file.\n\nconst locale = 'en';\nconst i18n = {\n  /*\r\n    0: Sunday\r\n    1: Monday\r\n    ...\r\n    6: Saturday\r\n  */\n  firstDayOfWeek: 0\n}; // Main search used in Topbar.\n// This can be either 'keywords' or 'location'.\n\nconst mainSearchType = 'keywords'; // There are 2 SearchPage variants that can be used:\n// 'map' & 'list'\n\nconst searchPageVariant = 'list'; // ListingPage has 2 layout options: 'hero-image' and 'full-image'.\n// - 'hero-image' means a layout where there's a hero section with cropped image in the beginning of the page\n// - 'full-image' shows image carousel, where listing images are shown with the original aspect ratio\n\nconst listingPageLayout = 'full-image'; // Should search results be ordered by distance to origin.\n// NOTE 1: This doesn't affect if the main search type is 'keywords'\n// NOTE 2: If this is set to true add parameter 'origin' to every location in default-location-searches.js\n//         Without the 'origin' parameter, search will not work correctly\n// NOTE 3: Keyword search and ordering search results by distance can't be used at the same time. You can turn keyword\n//         search off by removing keyword filter config from filters array in marketplace-custom-config.js\n\nconst sortSearchByDistance = false; // API supports custom processes to be used in booking process.\n// We need to specify it when we are initiating a new order\n// (or fetching price information by calling 'initiateSpeculative' endpoint).\n//\n// In a way, 'processAlias' defines which transaction process (or processes)\n// this particular web application is able to handle.\n\nconst transactionProcessAlias = 'flex-product-default-process/release-1'; // The transaction line item code for the main unit type for listings.\n//\n// Possible values: ['line-item/night', 'line-item/day', 'line-item/units';]\n//\n// Note 1: This 'lineItemUnitType' variable affects only web app.\n//         If you are using privileged transitions (which is used by the default process),\n//         you also need to configure unit type in API server: server/api-util/lineItems.js\n//\n// Note 2: Translations will use different translation keys for night, day or unit\n//         depending on the value chosen.\n\nconst lineItemUnitType = 'line-item/units'; // Listing management type. Currently only 'stock' is supported.\n//\n// With the default 'stock', availability and bookings are not used, and\n// listings have a specific numeric stock.\n//\n// NOTE: We plan to extend this config to also work for other management types\n// like availability management. But for now, if the stock management doesn't\n// work for you, you should have a look at the other ftw-daily and ftw-hourly\n// templates.\n\nconst listingManagementType = 'stock'; // A maximum number of days forwards during which a booking can be made.\n// This is limited due to Stripe holding funds up to 90 days from the\n// moment they are charged. Also note that available time slots can only\n// be fetched for 180 days in the future.\n\nconst dayCountAvailableForBooking = 90; // To pass environment variables to the client app in the build\n// script, react-scripts (and the sharetribe-scripts fork of\n// react-scripts) require using the REACT_APP_ prefix to avoid\n// exposing server secrets to the client side.\n\nconst sdkClientId = process.env.REACT_APP_SHARETRIBE_SDK_CLIENT_ID;\nconst sdkBaseUrl = process.env.REACT_APP_SHARETRIBE_SDK_BASE_URL;\nconst sdkTransitVerbose = process.env.REACT_APP_SHARETRIBE_SDK_TRANSIT_VERBOSE === 'true'; // Marketplace currency.\n// It should match one of the currencies listed in currency-config.js\n\nconst currencyConf = process.env.REACT_APP_SHARETRIBE_MARKETPLACE_CURRENCY;\nconst currency = currencyConf ? currencyConf.toUpperCase() : currencyConf; // Currency formatting options.\n// See: https://github.com/yahoo/react-intl/wiki/API#formatnumber\n\nconst currencyConfig = currencyConfiguration(currency); // Listing minimum price in currency sub units, e.g. cents.\n// 0 means no restriction to the price\n\nconst listingMinimumPriceSubUnits = 0; // Sentry DSN (Data Source Name), a client key for authenticating calls to Sentry\n\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN; // If webapp is using SSL (i.e. it's behind 'https' protocol)\n\nconst usingSSL = process.env.REACT_APP_SHARETRIBE_USING_SSL === 'true'; // Listing and especially listing card related configurations\n\nconst listing = {\n  // This flag defines if unit type translation is used:\n  // e.g. \"100 € per night\" vs \"100 €\"\n  showUnitTypeTranslations: false,\n  // These aspectWidth and aspectHeight values are used to calculate aspect ratio.\n  aspectWidth: 400,\n  aspectHeight: 400,\n  // Listings have custom image variants, which are named here.\n  variantPrefix: 'listing-card'\n}; // Address information is used in SEO schema for Organization (http://schema.org/PostalAddress)\n\nconst addressCountry = 'FI';\nconst addressRegion = 'Helsinki';\nconst postalCode = '00130';\nconst streetAddress = 'Erottajankatu 19 B'; // Canonical root url is needed in social media sharing and SEO optimization purposes.\n\nconst canonicalRootURL = process.env.REACT_APP_CANONICAL_ROOT_URL; // Site title is needed in meta tags (bots and social media sharing reads those)\n\nconst siteTitle = 'Sneakertime'; // Twitter handle is needed in meta tags (twitter:site). Start it with '@' character\n\nconst siteTwitterHandle = '@sharetribe'; // Instagram page is used in SEO schema (http://schema.org/Organization)\n\nconst siteInstagramPage = 'https://www.instagram.com/sharetribe/'; // Facebook page is used in SEO schema (http://schema.org/Organization)\n\nconst siteFacebookPage = 'https://www.facebook.com/Sharetribe/'; // Social logins & SSO\n// Note: Facebook app id is also used for tracking:\n// Facebook counts shares with app or page associated by this id\n// Currently it is unset, but you can read more about fb:app_id from\n// https://developers.facebook.com/docs/sharing/webmasters#basic\n// You should create one to track social sharing in Facebook\n\nconst facebookAppId = process.env.REACT_APP_FACEBOOK_APP_ID;\nconst maps = {\n  mapboxAccessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\n  googleMapsAPIKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  // Choose map provider: 'MAPBOX', 'GOOGLE_MAPS'\n  // Note: you need to have REACT_APP_MAPBOX_ACCESS_TOKEN or REACT_APP_GOOGLE_MAPS_API_KEY\n  //       set depending on which one you use in this config.\n  mapProvider: 'MAPBOX',\n  // The location search input can be configured to show default\n  // searches when the user focuses on the input and hasn't yet typed\n  // anything. This reduces typing and avoids too many Geolocation API\n  // calls for common searches.\n  search: {\n    // When enabled, the first suggestion is \"Current location\" that\n    // uses the browser Geolocation API to query the user's current\n    // location.\n    suggestCurrentLocation: true,\n    // Distance in meters for calculating the bounding box around the\n    // current location.\n    currentLocationBoundsDistance: 1000,\n    // This affects location search.\n    // Example location can be edited in the\n    // `default-location-searches.js` file.\n    defaults: defaultLocationSearches || [] // Limit location autocomplete to a one or more countries\n    // using ISO 3166 alpha 2 country codes separated by commas.\n    // If you want to limit the autocomplete, uncomment this value:\n    // countryLimit: ['AU'],\n\n  },\n  // When fuzzy locations are enabled, coordinates on maps are\n  // obfuscated randomly around the actual location.\n  //\n  // NOTE: This only hides the locations in the UI level, the actual\n  // coordinates are still accessible in the HTTP requests and the\n  // Redux store.\n  fuzzy: {\n    enabled: false,\n    // Amount of maximum offset in meters that is applied to obfuscate\n    // the original coordinates. The actual value is random, but the\n    // obfuscated coordinates are withing a circle that has the same\n    // radius as the offset.\n    offset: 500,\n    // Default zoom level when showing a single circle on a Map. Should\n    // be small enough so the whole circle fits in.\n    defaultZoomLevel: 13,\n    // Color of the circle on the Map component.\n    circleColor: '#c0392b'\n  },\n  // Custom marker image to use in the Map component.\n  //\n  // NOTE: Not used if fuzzy locations are enabled.\n  customMarker: {\n    enabled: false,\n    // Publicly accessible URL for the custom marker image.\n    //\n    // The easiest place is /public/static/icons/ folder, but then the\n    // marker image is not available while developing through\n    // localhost.\n    url: encodeURI(`${canonicalRootURL}/static/icons/map-marker-32x32.png`),\n    // Dimensions of the marker image.\n    width: 32,\n    height: 32,\n    // Position to anchor the image in relation to the coordinates,\n    // ignored when using Mapbox.\n    anchorX: 16,\n    anchorY: 32\n  }\n}; // NOTE: only expose configuration that should be visible in the\n// client side, don't add any server secrets in this file.\n\nconst config = {\n  env,\n  dev,\n  locale,\n  transactionProcessAlias,\n  lineItemUnitType,\n  listingManagementType,\n  dayCountAvailableForBooking,\n  i18n,\n  sdk: {\n    clientId: sdkClientId,\n    baseUrl: sdkBaseUrl,\n    transitVerbose: sdkTransitVerbose\n  },\n  mainSearchType,\n  searchPageVariant,\n  listingPageLayout,\n  sortSearchByDistance,\n  currency,\n  currencyConfig,\n  subUnitDivisors,\n  listingMinimumPriceSubUnits,\n  stripe: {\n    defaultMCC: defaultMCC,\n    publishableKey: stripePublishableKey,\n    supportedCountries: stripeCountryDetails\n  },\n  canonicalRootURL,\n  address: {\n    addressCountry,\n    addressRegion,\n    postalCode,\n    streetAddress\n  },\n  siteTitle,\n  siteFacebookPage,\n  siteInstagramPage,\n  siteTwitterHandle,\n  facebookAppId,\n  sentryDsn,\n  usingSSL,\n  listing,\n  maps,\n  custom\n};\nexport default config;","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/config/config.js"],"names":["custom","defaultLocationSearches","defaultMCC","stripePublishableKey","stripeCountryDetails","subUnitDivisors","currencyConfiguration","env","process","REACT_APP_ENV","dev","locale","i18n","firstDayOfWeek","mainSearchType","searchPageVariant","listingPageLayout","sortSearchByDistance","transactionProcessAlias","lineItemUnitType","listingManagementType","dayCountAvailableForBooking","sdkClientId","REACT_APP_SHARETRIBE_SDK_CLIENT_ID","sdkBaseUrl","REACT_APP_SHARETRIBE_SDK_BASE_URL","sdkTransitVerbose","REACT_APP_SHARETRIBE_SDK_TRANSIT_VERBOSE","currencyConf","REACT_APP_SHARETRIBE_MARKETPLACE_CURRENCY","currency","toUpperCase","currencyConfig","listingMinimumPriceSubUnits","sentryDsn","REACT_APP_SENTRY_DSN","usingSSL","REACT_APP_SHARETRIBE_USING_SSL","listing","showUnitTypeTranslations","aspectWidth","aspectHeight","variantPrefix","addressCountry","addressRegion","postalCode","streetAddress","canonicalRootURL","REACT_APP_CANONICAL_ROOT_URL","siteTitle","siteTwitterHandle","siteInstagramPage","siteFacebookPage","facebookAppId","REACT_APP_FACEBOOK_APP_ID","maps","mapboxAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","googleMapsAPIKey","REACT_APP_GOOGLE_MAPS_API_KEY","mapProvider","search","suggestCurrentLocation","currentLocationBoundsDistance","defaults","fuzzy","enabled","offset","defaultZoomLevel","circleColor","customMarker","url","encodeURI","width","height","anchorX","anchorY","config","sdk","clientId","baseUrl","transitVerbose","stripe","publishableKey","supportedCountries","address"],"mappings":"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","sourcesContent":["import * as custom from './marketplace-custom-config.js';\r\nimport defaultLocationSearches from './default-location-searches';\r\nimport { defaultMCC, stripePublishableKey, stripeCountryDetails } from './stripe-config';\r\nimport { subUnitDivisors, currencyConfiguration } from './currency-config';\r\n\r\nconst env = process.env.REACT_APP_ENV;\r\nconst dev = process.env.REACT_APP_ENV === 'development';\r\n\r\n// If you want to change the language, remember to also change the\r\n// locale data and the messages in the app.js file.\r\nconst locale = 'en';\r\nconst i18n = {\r\n  /*\r\n    0: Sunday\r\n    1: Monday\r\n    ...\r\n    6: Saturday\r\n  */\r\n  firstDayOfWeek: 0,\r\n};\r\n\r\n// Main search used in Topbar.\r\n// This can be either 'keywords' or 'location'.\r\nconst mainSearchType = 'keywords';\r\n\r\n// There are 2 SearchPage variants that can be used:\r\n// 'map' & 'list'\r\nconst searchPageVariant = 'list';\r\n\r\n// ListingPage has 2 layout options: 'hero-image' and 'full-image'.\r\n// - 'hero-image' means a layout where there's a hero section with cropped image in the beginning of the page\r\n// - 'full-image' shows image carousel, where listing images are shown with the original aspect ratio\r\nconst listingPageLayout = 'full-image';\r\n\r\n// Should search results be ordered by distance to origin.\r\n// NOTE 1: This doesn't affect if the main search type is 'keywords'\r\n// NOTE 2: If this is set to true add parameter 'origin' to every location in default-location-searches.js\r\n//         Without the 'origin' parameter, search will not work correctly\r\n// NOTE 3: Keyword search and ordering search results by distance can't be used at the same time. You can turn keyword\r\n//         search off by removing keyword filter config from filters array in marketplace-custom-config.js\r\nconst sortSearchByDistance = false;\r\n\r\n// API supports custom processes to be used in booking process.\r\n// We need to specify it when we are initiating a new order\r\n// (or fetching price information by calling 'initiateSpeculative' endpoint).\r\n//\r\n// In a way, 'processAlias' defines which transaction process (or processes)\r\n// this particular web application is able to handle.\r\nconst transactionProcessAlias = 'flex-product-default-process/release-1';\r\n\r\n// The transaction line item code for the main unit type for listings.\r\n//\r\n// Possible values: ['line-item/night', 'line-item/day', 'line-item/units';]\r\n//\r\n// Note 1: This 'lineItemUnitType' variable affects only web app.\r\n//         If you are using privileged transitions (which is used by the default process),\r\n//         you also need to configure unit type in API server: server/api-util/lineItems.js\r\n//\r\n// Note 2: Translations will use different translation keys for night, day or unit\r\n//         depending on the value chosen.\r\nconst lineItemUnitType = 'line-item/units';\r\n\r\n// Listing management type. Currently only 'stock' is supported.\r\n//\r\n// With the default 'stock', availability and bookings are not used, and\r\n// listings have a specific numeric stock.\r\n//\r\n// NOTE: We plan to extend this config to also work for other management types\r\n// like availability management. But for now, if the stock management doesn't\r\n// work for you, you should have a look at the other ftw-daily and ftw-hourly\r\n// templates.\r\nconst listingManagementType = 'stock';\r\n\r\n// A maximum number of days forwards during which a booking can be made.\r\n// This is limited due to Stripe holding funds up to 90 days from the\r\n// moment they are charged. Also note that available time slots can only\r\n// be fetched for 180 days in the future.\r\nconst dayCountAvailableForBooking = 90;\r\n\r\n// To pass environment variables to the client app in the build\r\n// script, react-scripts (and the sharetribe-scripts fork of\r\n// react-scripts) require using the REACT_APP_ prefix to avoid\r\n// exposing server secrets to the client side.\r\nconst sdkClientId = process.env.REACT_APP_SHARETRIBE_SDK_CLIENT_ID;\r\nconst sdkBaseUrl = process.env.REACT_APP_SHARETRIBE_SDK_BASE_URL;\r\nconst sdkTransitVerbose = process.env.REACT_APP_SHARETRIBE_SDK_TRANSIT_VERBOSE === 'true';\r\n\r\n// Marketplace currency.\r\n// It should match one of the currencies listed in currency-config.js\r\nconst currencyConf = process.env.REACT_APP_SHARETRIBE_MARKETPLACE_CURRENCY;\r\nconst currency = currencyConf ? currencyConf.toUpperCase() : currencyConf;\r\n\r\n// Currency formatting options.\r\n// See: https://github.com/yahoo/react-intl/wiki/API#formatnumber\r\nconst currencyConfig = currencyConfiguration(currency);\r\n\r\n// Listing minimum price in currency sub units, e.g. cents.\r\n// 0 means no restriction to the price\r\nconst listingMinimumPriceSubUnits = 0;\r\n\r\n// Sentry DSN (Data Source Name), a client key for authenticating calls to Sentry\r\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN;\r\n\r\n// If webapp is using SSL (i.e. it's behind 'https' protocol)\r\nconst usingSSL = process.env.REACT_APP_SHARETRIBE_USING_SSL === 'true';\r\n\r\n// Listing and especially listing card related configurations\r\nconst listing = {\r\n  // This flag defines if unit type translation is used:\r\n  // e.g. \"100 € per night\" vs \"100 €\"\r\n  showUnitTypeTranslations: false,\r\n\r\n  // These aspectWidth and aspectHeight values are used to calculate aspect ratio.\r\n  aspectWidth: 400,\r\n  aspectHeight: 400,\r\n  // Listings have custom image variants, which are named here.\r\n  variantPrefix: 'listing-card',\r\n};\r\n\r\n// Address information is used in SEO schema for Organization (http://schema.org/PostalAddress)\r\nconst addressCountry = 'FI';\r\nconst addressRegion = 'Helsinki';\r\nconst postalCode = '00130';\r\nconst streetAddress = 'Erottajankatu 19 B';\r\n\r\n// Canonical root url is needed in social media sharing and SEO optimization purposes.\r\nconst canonicalRootURL = process.env.REACT_APP_CANONICAL_ROOT_URL;\r\n\r\n// Site title is needed in meta tags (bots and social media sharing reads those)\r\nconst siteTitle = 'Sneakertime';\r\n\r\n// Twitter handle is needed in meta tags (twitter:site). Start it with '@' character\r\nconst siteTwitterHandle = '@sharetribe';\r\n\r\n// Instagram page is used in SEO schema (http://schema.org/Organization)\r\nconst siteInstagramPage = 'https://www.instagram.com/sharetribe/';\r\n\r\n// Facebook page is used in SEO schema (http://schema.org/Organization)\r\nconst siteFacebookPage = 'https://www.facebook.com/Sharetribe/';\r\n\r\n// Social logins & SSO\r\n\r\n// Note: Facebook app id is also used for tracking:\r\n// Facebook counts shares with app or page associated by this id\r\n// Currently it is unset, but you can read more about fb:app_id from\r\n// https://developers.facebook.com/docs/sharing/webmasters#basic\r\n// You should create one to track social sharing in Facebook\r\nconst facebookAppId = process.env.REACT_APP_FACEBOOK_APP_ID;\r\n\r\nconst maps = {\r\n  mapboxAccessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN,\r\n  googleMapsAPIKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n\r\n  // Choose map provider: 'MAPBOX', 'GOOGLE_MAPS'\r\n  // Note: you need to have REACT_APP_MAPBOX_ACCESS_TOKEN or REACT_APP_GOOGLE_MAPS_API_KEY\r\n  //       set depending on which one you use in this config.\r\n  mapProvider: 'MAPBOX',\r\n\r\n  // The location search input can be configured to show default\r\n  // searches when the user focuses on the input and hasn't yet typed\r\n  // anything. This reduces typing and avoids too many Geolocation API\r\n  // calls for common searches.\r\n  search: {\r\n    // When enabled, the first suggestion is \"Current location\" that\r\n    // uses the browser Geolocation API to query the user's current\r\n    // location.\r\n    suggestCurrentLocation: true,\r\n\r\n    // Distance in meters for calculating the bounding box around the\r\n    // current location.\r\n    currentLocationBoundsDistance: 1000,\r\n\r\n    // This affects location search.\r\n    // Example location can be edited in the\r\n    // `default-location-searches.js` file.\r\n    defaults: defaultLocationSearches || [],\r\n\r\n    // Limit location autocomplete to a one or more countries\r\n    // using ISO 3166 alpha 2 country codes separated by commas.\r\n    // If you want to limit the autocomplete, uncomment this value:\r\n    // countryLimit: ['AU'],\r\n  },\r\n\r\n  // When fuzzy locations are enabled, coordinates on maps are\r\n  // obfuscated randomly around the actual location.\r\n  //\r\n  // NOTE: This only hides the locations in the UI level, the actual\r\n  // coordinates are still accessible in the HTTP requests and the\r\n  // Redux store.\r\n  fuzzy: {\r\n    enabled: false,\r\n\r\n    // Amount of maximum offset in meters that is applied to obfuscate\r\n    // the original coordinates. The actual value is random, but the\r\n    // obfuscated coordinates are withing a circle that has the same\r\n    // radius as the offset.\r\n    offset: 500,\r\n\r\n    // Default zoom level when showing a single circle on a Map. Should\r\n    // be small enough so the whole circle fits in.\r\n    defaultZoomLevel: 13,\r\n\r\n    // Color of the circle on the Map component.\r\n    circleColor: '#c0392b',\r\n  },\r\n\r\n  // Custom marker image to use in the Map component.\r\n  //\r\n  // NOTE: Not used if fuzzy locations are enabled.\r\n  customMarker: {\r\n    enabled: false,\r\n\r\n    // Publicly accessible URL for the custom marker image.\r\n    //\r\n    // The easiest place is /public/static/icons/ folder, but then the\r\n    // marker image is not available while developing through\r\n    // localhost.\r\n    url: encodeURI(`${canonicalRootURL}/static/icons/map-marker-32x32.png`),\r\n\r\n    // Dimensions of the marker image.\r\n    width: 32,\r\n    height: 32,\r\n\r\n    // Position to anchor the image in relation to the coordinates,\r\n    // ignored when using Mapbox.\r\n    anchorX: 16,\r\n    anchorY: 32,\r\n  },\r\n};\r\n\r\n// NOTE: only expose configuration that should be visible in the\r\n// client side, don't add any server secrets in this file.\r\nconst config = {\r\n  env,\r\n  dev,\r\n  locale,\r\n  transactionProcessAlias,\r\n  lineItemUnitType,\r\n  listingManagementType,\r\n  dayCountAvailableForBooking,\r\n  i18n,\r\n  sdk: {\r\n    clientId: sdkClientId,\r\n    baseUrl: sdkBaseUrl,\r\n    transitVerbose: sdkTransitVerbose,\r\n  },\r\n  mainSearchType,\r\n  searchPageVariant,\r\n  listingPageLayout,\r\n  sortSearchByDistance,\r\n  currency,\r\n  currencyConfig,\r\n  subUnitDivisors,\r\n  listingMinimumPriceSubUnits,\r\n  stripe: {\r\n    defaultMCC: defaultMCC,\r\n    publishableKey: stripePublishableKey,\r\n    supportedCountries: stripeCountryDetails,\r\n  },\r\n  canonicalRootURL,\r\n  address: {\r\n    addressCountry,\r\n    addressRegion,\r\n    postalCode,\r\n    streetAddress,\r\n  },\r\n  siteTitle,\r\n  siteFacebookPage,\r\n  siteInstagramPage,\r\n  siteTwitterHandle,\r\n  facebookAppId,\r\n  sentryDsn,\r\n  usingSSL,\r\n  listing,\r\n  maps,\r\n  custom,\r\n};\r\n\r\nexport default config;\r\n"]},"metadata":{},"sourceType":"module"}