{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldBoolean\\\\FieldBoolean.js\";\nimport React from 'react';\nimport { injectIntl, intlShape } from '../../util/reactIntl';\nimport { FieldSelect } from '../../components';\n\nconst FieldBoolean = props => {\n  const {\n    placeholder,\n    intl,\n    ...rest\n  } = props;\n  const trueLabel = intl.formatMessage({\n    id: 'FieldBoolean.yes'\n  });\n  const falseLabel = intl.formatMessage({\n    id: 'FieldBoolean.no'\n  });\n  const selectProps = { ...rest,\n    format: option => {\n      if (option === true) {\n        return 'true';\n      } else if (option === false) {\n        return 'false';\n      }\n\n      return '';\n    },\n    parse: value => {\n      if (value === 'true') {\n        return true;\n      } else if (value === 'false') {\n        return false;\n      }\n\n      return '';\n    }\n  };\n  return /*#__PURE__*/React.createElement(FieldSelect, Object.assign({}, selectProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, placeholder), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, trueLabel), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, falseLabel));\n};\n\n_c = FieldBoolean;\nFieldBoolean.propTypes = {\n  intl: intlShape.isRequired\n};\nexport default _c2 = injectIntl(FieldBoolean);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FieldBoolean\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldBoolean/FieldBoolean.js"],"names":["React","injectIntl","intlShape","FieldSelect","FieldBoolean","props","placeholder","intl","rest","trueLabel","formatMessage","id","falseLabel","selectProps","format","option","parse","value","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,sBAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqB,OAAGC;AAAxB,MAAiCH,KAAvC;AACA,QAAMI,SAAS,GAAGF,IAAI,CAACG,aAAL,CAAmB;AACnCC,IAAAA,EAAE,EAAE;AAD+B,GAAnB,CAAlB;AAGA,QAAMC,UAAU,GAAGL,IAAI,CAACG,aAAL,CAAmB;AACpCC,IAAAA,EAAE,EAAE;AADgC,GAAnB,CAAnB;AAGA,QAAME,WAAW,GAAG,EAClB,GAAGL,IADe;AAElBM,IAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,eAAO,MAAP;AACD,OAFD,MAEO,IAAIA,MAAM,KAAK,KAAf,EAAsB;AAC3B,eAAO,OAAP;AACD;;AACD,aAAO,EAAP;AACD,KATiB;AAUlBC,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACd,UAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,eAAO,IAAP;AACD,OAFD,MAEO,IAAIA,KAAK,KAAK,OAAd,EAAuB;AAC5B,eAAO,KAAP;AACD;;AACD,aAAO,EAAP;AACD;AAjBiB,GAApB;AAmBA,sBACE,oBAAC,WAAD,oBAAiBJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBP,WAAlB,CADF,eAEE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBG,SAAtB,CAFF,eAGE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBG,UAAvB,CAHF,CADF;AAOD,CAlCD;;KAAMR,Y;AAoCNA,YAAY,CAACc,SAAb,GAAyB;AACvBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB;AADO,CAAzB;AAIA,qBAAelB,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl, intlShape } from '../../util/reactIntl';\r\nimport { FieldSelect } from '../../components';\r\n\r\nconst FieldBoolean = props => {\r\n  const { placeholder, intl, ...rest } = props;\r\n  const trueLabel = intl.formatMessage({\r\n    id: 'FieldBoolean.yes',\r\n  });\r\n  const falseLabel = intl.formatMessage({\r\n    id: 'FieldBoolean.no',\r\n  });\r\n  const selectProps = {\r\n    ...rest,\r\n    format: option => {\r\n      if (option === true) {\r\n        return 'true';\r\n      } else if (option === false) {\r\n        return 'false';\r\n      }\r\n      return '';\r\n    },\r\n    parse: value => {\r\n      if (value === 'true') {\r\n        return true;\r\n      } else if (value === 'false') {\r\n        return false;\r\n      }\r\n      return '';\r\n    },\r\n  };\r\n  return (\r\n    <FieldSelect {...selectProps}>\r\n      <option value=\"\">{placeholder}</option>\r\n      <option value=\"true\">{trueLabel}</option>\r\n      <option value=\"false\">{falseLabel}</option>\r\n    </FieldSelect>\r\n  );\r\n};\r\n\r\nFieldBoolean.propTypes = {\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default injectIntl(FieldBoolean);\r\n"]},"metadata":{},"sourceType":"module"}