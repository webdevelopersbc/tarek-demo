{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\ProfilePage\\\\ProfilePage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\nimport { REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER, propTypes } from '../../util/types';\nimport { ensureCurrentUser, ensureUser } from '../../util/data';\nimport { withViewport } from '../../util/contextHelpers';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport { Page, LayoutSideNavigation, LayoutWrapperMain, LayoutWrapperSideNav, LayoutWrapperTopbar, LayoutWrapperFooter, Footer, AvatarLarge, NamedLink, ListingCard, Reviews, ButtonTabNavHorizontal } from '../../components';\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\nimport NotFoundPage from '../../containers/NotFoundPage/NotFoundPage';\nimport css from './ProfilePage.module.css';\nconst MAX_MOBILE_SCREEN_WIDTH = 768;\nexport class ProfilePageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // keep track of which reviews tab to show in desktop viewport\n      showReviewsType: REVIEW_TYPE_OF_PROVIDER\n    };\n    this.showOfProviderReviews = this.showOfProviderReviews.bind(this);\n    this.showOfCustomerReviews = this.showOfCustomerReviews.bind(this);\n  }\n\n  showOfProviderReviews() {\n    this.setState({\n      showReviewsType: REVIEW_TYPE_OF_PROVIDER\n    });\n  }\n\n  showOfCustomerReviews() {\n    this.setState({\n      showReviewsType: REVIEW_TYPE_OF_CUSTOMER\n    });\n  }\n\n  render() {\n    const {\n      scrollingDisabled,\n      currentUser,\n      user,\n      userShowError,\n      queryListingsError,\n      listings,\n      reviews,\n      queryReviewsError,\n      viewport,\n      intl\n    } = this.props;\n    const ensuredCurrentUser = ensureCurrentUser(currentUser);\n    const profileUser = ensureUser(user);\n    const isCurrentUser = ensuredCurrentUser.id && profileUser.id && ensuredCurrentUser.id.uuid === profileUser.id.uuid;\n    const displayName = profileUser.attributes.profile.displayName;\n    const bio = profileUser.attributes.profile.bio;\n    const hasBio = !!bio;\n    const hasListings = listings.length > 0;\n    const isMobileLayout = viewport.width < MAX_MOBILE_SCREEN_WIDTH;\n    const editLinkMobile = isCurrentUser ? /*#__PURE__*/React.createElement(NamedLink, {\n      className: css.editLinkMobile,\n      name: \"ProfileSettingsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.editProfileLinkMobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    })) : null;\n    const editLinkDesktop = isCurrentUser ? /*#__PURE__*/React.createElement(NamedLink, {\n      className: css.editLinkDesktop,\n      name: \"ProfileSettingsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.editProfileLinkDesktop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    })) : null;\n    const asideContent = /*#__PURE__*/React.createElement(\"div\", {\n      className: css.asideContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AvatarLarge, {\n      className: css.avatar,\n      user: user,\n      disableProfileLink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: css.mobileHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, displayName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.mobileHeading\",\n      values: {\n        name: displayName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }) : null), editLinkMobile, editLinkDesktop);\n    const listingsContainerClasses = classNames(css.listingsContainer, {\n      [css.withBioMissingAbove]: !hasBio\n    });\n    const reviewsError = /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.loadingReviewsFailed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n    const reviewsOfProvider = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_PROVIDER);\n    const reviewsOfCustomer = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_CUSTOMER);\n    const mobileReviews = /*#__PURE__*/React.createElement(\"div\", {\n      className: css.mobileReviews,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: css.mobileReviewsTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.reviewsOfProviderTitle\",\n      values: {\n        count: reviewsOfProvider.length\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })), queryReviewsError ? reviewsError : null, /*#__PURE__*/React.createElement(Reviews, {\n      reviews: reviewsOfProvider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: css.mobileReviewsTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.reviewsOfCustomerTitle\",\n      values: {\n        count: reviewsOfCustomer.length\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    })), queryReviewsError ? reviewsError : null, /*#__PURE__*/React.createElement(Reviews, {\n      reviews: reviewsOfCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }));\n    const desktopReviewTabs = [{\n      text: /*#__PURE__*/React.createElement(\"h3\", {\n        className: css.desktopReviewsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ProfilePage.reviewsOfProviderTitle\",\n        values: {\n          count: reviewsOfProvider.length\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      })),\n      selected: this.state.showReviewsType === REVIEW_TYPE_OF_PROVIDER,\n      onClick: this.showOfProviderReviews\n    }, {\n      text: /*#__PURE__*/React.createElement(\"h3\", {\n        className: css.desktopReviewsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ProfilePage.reviewsOfCustomerTitle\",\n        values: {\n          count: reviewsOfCustomer.length\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      })),\n      selected: this.state.showReviewsType === REVIEW_TYPE_OF_CUSTOMER,\n      onClick: this.showOfCustomerReviews\n    }];\n    const desktopReviews = /*#__PURE__*/React.createElement(\"div\", {\n      className: css.desktopReviews,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.desktopReviewsWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ButtonTabNavHorizontal, {\n      className: css.desktopReviewsTabNav,\n      tabs: desktopReviewTabs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }), queryReviewsError ? reviewsError : null, this.state.showReviewsType === REVIEW_TYPE_OF_PROVIDER ? /*#__PURE__*/React.createElement(Reviews, {\n      reviews: reviewsOfProvider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Reviews, {\n      reviews: reviewsOfCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    })));\n    const mainContent = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: css.desktopHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.desktopHeading\",\n      values: {\n        name: displayName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    })), hasBio ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.bio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, bio) : null, hasListings ? /*#__PURE__*/React.createElement(\"div\", {\n      className: listingsContainerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: css.listingsTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ProfilePage.listingsTitle\",\n      values: {\n        count: listings.length\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: css.listings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, listings.map(l => /*#__PURE__*/React.createElement(\"li\", {\n      className: css.listing,\n      key: l.id.uuid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListingCard, {\n      listing: l,\n      showAuthorInfo: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }))))) : null, isMobileLayout ? mobileReviews : desktopReviews);\n    let content;\n\n    if (userShowError && userShowError.status === 404) {\n      return /*#__PURE__*/React.createElement(NotFoundPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }\n      });\n    } else if (userShowError || queryListingsError) {\n      content = /*#__PURE__*/React.createElement(\"p\", {\n        className: css.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ProfilePage.loadingDataFailed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      content = mainContent;\n    }\n\n    const schemaTitle = intl.formatMessage({\n      id: 'ProfilePage.schemaTitle'\n    }, {\n      name: displayName,\n      siteTitle: config.siteTitle\n    });\n    return /*#__PURE__*/React.createElement(Page, {\n      scrollingDisabled: scrollingDisabled,\n      title: schemaTitle,\n      schema: {\n        '@context': 'http://schema.org',\n        '@type': 'ProfilePage',\n        name: schemaTitle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LayoutSideNavigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LayoutWrapperTopbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TopbarContainer, {\n      currentPage: \"ProfilePage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(LayoutWrapperSideNav, {\n      className: css.aside,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }, asideContent), /*#__PURE__*/React.createElement(LayoutWrapperMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, content), /*#__PURE__*/React.createElement(LayoutWrapperFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nProfilePageComponent.defaultProps = {\n  currentUser: null,\n  user: null,\n  userShowError: null,\n  queryListingsError: null,\n  reviews: [],\n  queryReviewsError: null\n};\nconst {\n  bool,\n  arrayOf,\n  number,\n  shape\n} = PropTypes;\nProfilePageComponent.propTypes = {\n  scrollingDisabled: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  user: propTypes.user,\n  userShowError: propTypes.error,\n  queryListingsError: propTypes.error,\n  listings: arrayOf(propTypes.listing).isRequired,\n  reviews: arrayOf(propTypes.review),\n  queryReviewsError: propTypes.error,\n  // form withViewport\n  viewport: shape({\n    width: number.isRequired,\n    height: number.isRequired\n  }).isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\n\nconst mapStateToProps = state => {\n  const {\n    currentUser\n  } = state.user;\n  const {\n    userId,\n    userShowError,\n    queryListingsError,\n    userListingRefs,\n    reviews,\n    queryReviewsError\n  } = state.ProfilePage;\n  const userMatches = getMarketplaceEntities(state, [{\n    type: 'user',\n    id: userId\n  }]);\n  const user = userMatches.length === 1 ? userMatches[0] : null;\n  const listings = getMarketplaceEntities(state, userListingRefs);\n  return {\n    scrollingDisabled: isScrollingDisabled(state),\n    currentUser,\n    user,\n    userShowError,\n    queryListingsError,\n    listings,\n    reviews,\n    queryReviewsError\n  };\n};\n\nconst ProfilePage = compose(connect(mapStateToProps), withViewport, injectIntl)(ProfilePageComponent);\nexport default ProfilePage;","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/ProfilePage/ProfilePage.js"],"names":["React","Component","PropTypes","compose","connect","classNames","config","FormattedMessage","injectIntl","intlShape","REVIEW_TYPE_OF_PROVIDER","REVIEW_TYPE_OF_CUSTOMER","propTypes","ensureCurrentUser","ensureUser","withViewport","isScrollingDisabled","getMarketplaceEntities","Page","LayoutSideNavigation","LayoutWrapperMain","LayoutWrapperSideNav","LayoutWrapperTopbar","LayoutWrapperFooter","Footer","AvatarLarge","NamedLink","ListingCard","Reviews","ButtonTabNavHorizontal","TopbarContainer","NotFoundPage","css","MAX_MOBILE_SCREEN_WIDTH","ProfilePageComponent","constructor","props","state","showReviewsType","showOfProviderReviews","bind","showOfCustomerReviews","setState","render","scrollingDisabled","currentUser","user","userShowError","queryListingsError","listings","reviews","queryReviewsError","viewport","intl","ensuredCurrentUser","profileUser","isCurrentUser","id","uuid","displayName","attributes","profile","bio","hasBio","hasListings","length","isMobileLayout","width","editLinkMobile","editLinkDesktop","asideContent","avatar","mobileHeading","name","listingsContainerClasses","listingsContainer","withBioMissingAbove","reviewsError","error","reviewsOfProvider","filter","r","type","reviewsOfCustomer","mobileReviews","mobileReviewsTitle","count","desktopReviewTabs","text","desktopReviewsTitle","selected","onClick","desktopReviews","desktopReviewsWrapper","desktopReviewsTabNav","mainContent","desktopHeading","listingsTitle","map","l","listing","content","status","schemaTitle","formatMessage","siteTitle","aside","defaultProps","bool","arrayOf","number","shape","isRequired","review","height","mapStateToProps","userId","userListingRefs","ProfilePage","userMatches"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport config from '../../config';\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\r\nimport { REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER, propTypes } from '../../util/types';\r\nimport { ensureCurrentUser, ensureUser } from '../../util/data';\r\nimport { withViewport } from '../../util/contextHelpers';\r\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\r\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\r\nimport {\r\n  Page,\r\n  LayoutSideNavigation,\r\n  LayoutWrapperMain,\r\n  LayoutWrapperSideNav,\r\n  LayoutWrapperTopbar,\r\n  LayoutWrapperFooter,\r\n  Footer,\r\n  AvatarLarge,\r\n  NamedLink,\r\n  ListingCard,\r\n  Reviews,\r\n  ButtonTabNavHorizontal,\r\n} from '../../components';\r\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\r\nimport NotFoundPage from '../../containers/NotFoundPage/NotFoundPage';\r\n\r\nimport css from './ProfilePage.module.css';\r\n\r\nconst MAX_MOBILE_SCREEN_WIDTH = 768;\r\n\r\nexport class ProfilePageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // keep track of which reviews tab to show in desktop viewport\r\n      showReviewsType: REVIEW_TYPE_OF_PROVIDER,\r\n    };\r\n\r\n    this.showOfProviderReviews = this.showOfProviderReviews.bind(this);\r\n    this.showOfCustomerReviews = this.showOfCustomerReviews.bind(this);\r\n  }\r\n\r\n  showOfProviderReviews() {\r\n    this.setState({\r\n      showReviewsType: REVIEW_TYPE_OF_PROVIDER,\r\n    });\r\n  }\r\n\r\n  showOfCustomerReviews() {\r\n    this.setState({\r\n      showReviewsType: REVIEW_TYPE_OF_CUSTOMER,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      scrollingDisabled,\r\n      currentUser,\r\n      user,\r\n      userShowError,\r\n      queryListingsError,\r\n      listings,\r\n      reviews,\r\n      queryReviewsError,\r\n      viewport,\r\n      intl,\r\n    } = this.props;\r\n    const ensuredCurrentUser = ensureCurrentUser(currentUser);\r\n    const profileUser = ensureUser(user);\r\n    const isCurrentUser =\r\n      ensuredCurrentUser.id && profileUser.id && ensuredCurrentUser.id.uuid === profileUser.id.uuid;\r\n    const displayName = profileUser.attributes.profile.displayName;\r\n    const bio = profileUser.attributes.profile.bio;\r\n    const hasBio = !!bio;\r\n    const hasListings = listings.length > 0;\r\n    const isMobileLayout = viewport.width < MAX_MOBILE_SCREEN_WIDTH;\r\n\r\n    const editLinkMobile = isCurrentUser ? (\r\n      <NamedLink className={css.editLinkMobile} name=\"ProfileSettingsPage\">\r\n        <FormattedMessage id=\"ProfilePage.editProfileLinkMobile\" />\r\n      </NamedLink>\r\n    ) : null;\r\n    const editLinkDesktop = isCurrentUser ? (\r\n      <NamedLink className={css.editLinkDesktop} name=\"ProfileSettingsPage\">\r\n        <FormattedMessage id=\"ProfilePage.editProfileLinkDesktop\" />\r\n      </NamedLink>\r\n    ) : null;\r\n\r\n    const asideContent = (\r\n      <div className={css.asideContent}>\r\n        <AvatarLarge className={css.avatar} user={user} disableProfileLink />\r\n        <h1 className={css.mobileHeading}>\r\n          {displayName ? (\r\n            <FormattedMessage id=\"ProfilePage.mobileHeading\" values={{ name: displayName }} />\r\n          ) : null}\r\n        </h1>\r\n        {editLinkMobile}\r\n        {editLinkDesktop}\r\n      </div>\r\n    );\r\n\r\n    const listingsContainerClasses = classNames(css.listingsContainer, {\r\n      [css.withBioMissingAbove]: !hasBio,\r\n    });\r\n\r\n    const reviewsError = (\r\n      <p className={css.error}>\r\n        <FormattedMessage id=\"ProfilePage.loadingReviewsFailed\" />\r\n      </p>\r\n    );\r\n\r\n    const reviewsOfProvider = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_PROVIDER);\r\n\r\n    const reviewsOfCustomer = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_CUSTOMER);\r\n\r\n    const mobileReviews = (\r\n      <div className={css.mobileReviews}>\r\n        <h2 className={css.mobileReviewsTitle}>\r\n          <FormattedMessage\r\n            id=\"ProfilePage.reviewsOfProviderTitle\"\r\n            values={{ count: reviewsOfProvider.length }}\r\n          />\r\n        </h2>\r\n        {queryReviewsError ? reviewsError : null}\r\n        <Reviews reviews={reviewsOfProvider} />\r\n        <h2 className={css.mobileReviewsTitle}>\r\n          <FormattedMessage\r\n            id=\"ProfilePage.reviewsOfCustomerTitle\"\r\n            values={{ count: reviewsOfCustomer.length }}\r\n          />\r\n        </h2>\r\n        {queryReviewsError ? reviewsError : null}\r\n        <Reviews reviews={reviewsOfCustomer} />\r\n      </div>\r\n    );\r\n\r\n    const desktopReviewTabs = [\r\n      {\r\n        text: (\r\n          <h3 className={css.desktopReviewsTitle}>\r\n            <FormattedMessage\r\n              id=\"ProfilePage.reviewsOfProviderTitle\"\r\n              values={{ count: reviewsOfProvider.length }}\r\n            />\r\n          </h3>\r\n        ),\r\n        selected: this.state.showReviewsType === REVIEW_TYPE_OF_PROVIDER,\r\n        onClick: this.showOfProviderReviews,\r\n      },\r\n      {\r\n        text: (\r\n          <h3 className={css.desktopReviewsTitle}>\r\n            <FormattedMessage\r\n              id=\"ProfilePage.reviewsOfCustomerTitle\"\r\n              values={{ count: reviewsOfCustomer.length }}\r\n            />\r\n          </h3>\r\n        ),\r\n        selected: this.state.showReviewsType === REVIEW_TYPE_OF_CUSTOMER,\r\n        onClick: this.showOfCustomerReviews,\r\n      },\r\n    ];\r\n\r\n    const desktopReviews = (\r\n      <div className={css.desktopReviews}>\r\n        <div className={css.desktopReviewsWrapper}>\r\n          <ButtonTabNavHorizontal className={css.desktopReviewsTabNav} tabs={desktopReviewTabs} />\r\n\r\n          {queryReviewsError ? reviewsError : null}\r\n\r\n          {this.state.showReviewsType === REVIEW_TYPE_OF_PROVIDER ? (\r\n            <Reviews reviews={reviewsOfProvider} />\r\n          ) : (\r\n            <Reviews reviews={reviewsOfCustomer} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const mainContent = (\r\n      <div>\r\n        <h1 className={css.desktopHeading}>\r\n          <FormattedMessage id=\"ProfilePage.desktopHeading\" values={{ name: displayName }} />\r\n        </h1>\r\n        {hasBio ? <p className={css.bio}>{bio}</p> : null}\r\n        {hasListings ? (\r\n          <div className={listingsContainerClasses}>\r\n            <h2 className={css.listingsTitle}>\r\n              <FormattedMessage\r\n                id=\"ProfilePage.listingsTitle\"\r\n                values={{ count: listings.length }}\r\n              />\r\n            </h2>\r\n            <ul className={css.listings}>\r\n              {listings.map(l => (\r\n                <li className={css.listing} key={l.id.uuid}>\r\n                  <ListingCard listing={l} showAuthorInfo={false} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n        {isMobileLayout ? mobileReviews : desktopReviews}\r\n      </div>\r\n    );\r\n\r\n    let content;\r\n\r\n    if (userShowError && userShowError.status === 404) {\r\n      return <NotFoundPage />;\r\n    } else if (userShowError || queryListingsError) {\r\n      content = (\r\n        <p className={css.error}>\r\n          <FormattedMessage id=\"ProfilePage.loadingDataFailed\" />\r\n        </p>\r\n      );\r\n    } else {\r\n      content = mainContent;\r\n    }\r\n\r\n    const schemaTitle = intl.formatMessage(\r\n      {\r\n        id: 'ProfilePage.schemaTitle',\r\n      },\r\n      {\r\n        name: displayName,\r\n        siteTitle: config.siteTitle,\r\n      }\r\n    );\r\n\r\n    return (\r\n      <Page\r\n        scrollingDisabled={scrollingDisabled}\r\n        title={schemaTitle}\r\n        schema={{\r\n          '@context': 'http://schema.org',\r\n          '@type': 'ProfilePage',\r\n          name: schemaTitle,\r\n        }}\r\n      >\r\n        <LayoutSideNavigation>\r\n          <LayoutWrapperTopbar>\r\n            <TopbarContainer currentPage=\"ProfilePage\" />\r\n          </LayoutWrapperTopbar>\r\n          <LayoutWrapperSideNav className={css.aside}>{asideContent}</LayoutWrapperSideNav>\r\n          <LayoutWrapperMain>{content}</LayoutWrapperMain>\r\n          <LayoutWrapperFooter>\r\n            <Footer />\r\n          </LayoutWrapperFooter>\r\n        </LayoutSideNavigation>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nProfilePageComponent.defaultProps = {\r\n  currentUser: null,\r\n  user: null,\r\n  userShowError: null,\r\n  queryListingsError: null,\r\n  reviews: [],\r\n  queryReviewsError: null,\r\n};\r\n\r\nconst { bool, arrayOf, number, shape } = PropTypes;\r\n\r\nProfilePageComponent.propTypes = {\r\n  scrollingDisabled: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  user: propTypes.user,\r\n  userShowError: propTypes.error,\r\n  queryListingsError: propTypes.error,\r\n  listings: arrayOf(propTypes.listing).isRequired,\r\n  reviews: arrayOf(propTypes.review),\r\n  queryReviewsError: propTypes.error,\r\n\r\n  // form withViewport\r\n  viewport: shape({\r\n    width: number.isRequired,\r\n    height: number.isRequired,\r\n  }).isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { currentUser } = state.user;\r\n  const {\r\n    userId,\r\n    userShowError,\r\n    queryListingsError,\r\n    userListingRefs,\r\n    reviews,\r\n    queryReviewsError,\r\n  } = state.ProfilePage;\r\n  const userMatches = getMarketplaceEntities(state, [{ type: 'user', id: userId }]);\r\n  const user = userMatches.length === 1 ? userMatches[0] : null;\r\n  const listings = getMarketplaceEntities(state, userListingRefs);\r\n  return {\r\n    scrollingDisabled: isScrollingDisabled(state),\r\n    currentUser,\r\n    user,\r\n    userShowError,\r\n    queryListingsError,\r\n    listings,\r\n    reviews,\r\n    queryReviewsError,\r\n  };\r\n};\r\n\r\nconst ProfilePage = compose(\r\n  connect(mapStateToProps),\r\n  withViewport,\r\n  injectIntl\r\n)(ProfilePageComponent);\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}