{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\OrderBreakdown\\\\LineItemTotalPrice.js\";\nimport React from 'react';\nimport { bool } from 'prop-types';\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\nimport { formatMoney } from '../../util/currency';\nimport { txIsCanceled, txIsReceived, txIsCompleted } from '../../util/transaction';\nimport { propTypes } from '../../util/types';\nimport css from './OrderBreakdown.module.css';\n\nconst LineItemTotalPrice = props => {\n  const {\n    transaction,\n    isProvider,\n    intl\n  } = props;\n  let providerTotalMessageId = 'OrderBreakdown.providerTotalDefault';\n\n  if (txIsReceived(transaction) || txIsCompleted(transaction)) {\n    providerTotalMessageId = 'OrderBreakdown.providerTotalReceived';\n  } else if (txIsCanceled(transaction)) {\n    providerTotalMessageId = 'OrderBreakdown.providerTotalCanceled';\n  }\n\n  const totalLabel = isProvider ? /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: providerTotalMessageId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderBreakdown.total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n  const totalPrice = isProvider ? transaction.attributes.payoutTotal : transaction.attributes.payinTotal;\n  const formattedTotalPrice = formatMoney(intl, totalPrice);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    className: css.totalDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.lineItemTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.totalLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, totalLabel), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.totalPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, formattedTotalPrice)));\n};\n\n_c = LineItemTotalPrice;\nLineItemTotalPrice.propTypes = {\n  transaction: propTypes.transaction.isRequired,\n  isProvider: bool.isRequired,\n  intl: intlShape.isRequired\n};\nexport default LineItemTotalPrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemTotalPrice\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/OrderBreakdown/LineItemTotalPrice.js"],"names":["React","bool","FormattedMessage","intlShape","formatMoney","txIsCanceled","txIsReceived","txIsCompleted","propTypes","css","LineItemTotalPrice","props","transaction","isProvider","intl","providerTotalMessageId","totalLabel","totalPrice","attributes","payoutTotal","payinTotal","formattedTotalPrice","totalDivider","lineItemTotal","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,sBAA5C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,QAA0D,wBAA1D;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,GAAP,MAAgB,6BAAhB;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAAoCH,KAA1C;AAEA,MAAII,sBAAsB,GAAG,qCAA7B;;AACA,MAAIT,YAAY,CAACM,WAAD,CAAZ,IAA6BL,aAAa,CAACK,WAAD,CAA9C,EAA6D;AAC3DG,IAAAA,sBAAsB,GAAG,sCAAzB;AACD,GAFD,MAEO,IAAIV,YAAY,CAACO,WAAD,CAAhB,EAA+B;AACpCG,IAAAA,sBAAsB,GAAG,sCAAzB;AACD;;AAED,QAAMC,UAAU,GAAGH,UAAU,gBAC3B,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAEE,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2B,gBAG3B,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAMA,QAAME,UAAU,GAAGJ,UAAU,GACzBD,WAAW,CAACM,UAAZ,CAAuBC,WADE,GAEzBP,WAAW,CAACM,UAAZ,CAAuBE,UAF3B;AAGA,QAAMC,mBAAmB,GAAGjB,WAAW,CAACU,IAAD,EAAOG,UAAP,CAAvC;AAEA,sBACE,uDACE;AAAI,IAAA,SAAS,EAAER,GAAG,CAACa,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAEb,GAAG,CAACc,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEd,GAAG,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,UAAjC,CADF,eAEE;AAAK,IAAA,SAAS,EAAEP,GAAG,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCI,mBAAjC,CAFF,CAFF,CADF;AASD,CA9BD;;KAAMX,kB;AAgCNA,kBAAkB,CAACF,SAAnB,GAA+B;AAC7BI,EAAAA,WAAW,EAAEJ,SAAS,CAACI,WAAV,CAAsBY,UADN;AAE7BX,EAAAA,UAAU,EAAEZ,IAAI,CAACuB,UAFY;AAG7BV,EAAAA,IAAI,EAAEX,SAAS,CAACqB;AAHa,CAA/B;AAMA,eAAed,kBAAf","sourcesContent":["import React from 'react';\r\nimport { bool } from 'prop-types';\r\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\r\nimport { formatMoney } from '../../util/currency';\r\nimport { txIsCanceled, txIsReceived, txIsCompleted } from '../../util/transaction';\r\nimport { propTypes } from '../../util/types';\r\n\r\nimport css from './OrderBreakdown.module.css';\r\n\r\nconst LineItemTotalPrice = props => {\r\n  const { transaction, isProvider, intl } = props;\r\n\r\n  let providerTotalMessageId = 'OrderBreakdown.providerTotalDefault';\r\n  if (txIsReceived(transaction) || txIsCompleted(transaction)) {\r\n    providerTotalMessageId = 'OrderBreakdown.providerTotalReceived';\r\n  } else if (txIsCanceled(transaction)) {\r\n    providerTotalMessageId = 'OrderBreakdown.providerTotalCanceled';\r\n  }\r\n\r\n  const totalLabel = isProvider ? (\r\n    <FormattedMessage id={providerTotalMessageId} />\r\n  ) : (\r\n    <FormattedMessage id=\"OrderBreakdown.total\" />\r\n  );\r\n\r\n  const totalPrice = isProvider\r\n    ? transaction.attributes.payoutTotal\r\n    : transaction.attributes.payinTotal;\r\n  const formattedTotalPrice = formatMoney(intl, totalPrice);\r\n\r\n  return (\r\n    <>\r\n      <hr className={css.totalDivider} />\r\n      <div className={css.lineItemTotal}>\r\n        <div className={css.totalLabel}>{totalLabel}</div>\r\n        <div className={css.totalPrice}>{formattedTotalPrice}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLineItemTotalPrice.propTypes = {\r\n  transaction: propTypes.transaction.isRequired,\r\n  isProvider: bool.isRequired,\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default LineItemTotalPrice;\r\n"]},"metadata":{},"sourceType":"module"}