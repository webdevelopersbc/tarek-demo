{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\Page\\\\Page.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport routeConfiguration from '../../routing/routeConfiguration';\nimport { injectIntl, intlShape } from '../../util/reactIntl';\nimport { metaTagProps } from '../../util/seo';\nimport { canonicalRoutePath } from '../../util/routes';\nimport { CookieConsent } from '../../components';\nimport facebookImage from '../../assets/sneakertimeFacebook-1200x630.jpg';\nimport twitterImage from '../../assets/sneakertimeTwitter-600x314.jpg';\nimport css from './Page.module.css';\n\nconst preventDefault = e => {\n  e.preventDefault();\n};\n\nconst twitterPageURL = siteTwitterHandle => {\n  if (siteTwitterHandle && siteTwitterHandle.charAt(0) === '@') {\n    return `https://twitter.com/${siteTwitterHandle.substring(1)}`;\n  } else if (siteTwitterHandle) {\n    return `https://twitter.com/${siteTwitterHandle}`;\n  }\n\n  return null;\n};\n\nclass PageComponent extends Component {\n  constructor(props) {\n    super(props); // Keeping scrollPosition out of state reduces rendering cycles (and no bad states rendered)\n\n    this.scrollPosition = 0;\n    this.contentDiv = null;\n    this.scrollingDisabledChanged = this.scrollingDisabledChanged.bind(this);\n  }\n\n  componentDidMount() {\n    // By default a dropped file is loaded in the browser window as a\n    // file URL. We want to prevent this since it might loose a lot of\n    // data the user has typed but not yet saved. Preventing requires\n    // handling both dragover and drop events.\n    document.addEventListener('dragover', preventDefault);\n    document.addEventListener('drop', preventDefault); // Remove duplicated server-side rendered page schema.\n    // It's in <body> to improve initial rendering performance,\n    // but after web app is initialized, react-helmet-async operates with <head>\n\n    const pageSchema = document.getElementById('page-schema');\n\n    if (pageSchema) {\n      pageSchema.remove();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('dragover', preventDefault);\n    document.removeEventListener('drop', preventDefault);\n  }\n\n  scrollingDisabledChanged(currentScrollingDisabled) {\n    if (currentScrollingDisabled && currentScrollingDisabled !== this.scrollingDisabled) {\n      // Update current scroll position, if scrolling is disabled (e.g. modal is open)\n      this.scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n      this.scrollingDisabled = currentScrollingDisabled;\n    } else if (currentScrollingDisabled !== this.scrollingDisabled) {\n      this.scrollingDisabled = currentScrollingDisabled;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      children,\n      location,\n      intl,\n      scrollingDisabled,\n      referrer,\n      author,\n      contentType,\n      description,\n      facebookImages,\n      published,\n      schema,\n      tags,\n      title,\n      twitterHandle,\n      twitterImages,\n      updated\n    } = this.props;\n    const classes = classNames(rootClassName || css.root, className, {\n      [css.scrollingDisabled]: scrollingDisabled\n    });\n    this.scrollingDisabledChanged(scrollingDisabled);\n    const referrerMeta = referrer ? /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"referrer\",\n      content: referrer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }) : null;\n    const canonicalRootURL = config.canonicalRootURL;\n    const shouldReturnPathOnly = referrer && referrer !== 'unsafe-url';\n    const canonicalPath = canonicalRoutePath(routeConfiguration(), location, shouldReturnPathOnly);\n    const canonicalUrl = `${canonicalRootURL}${canonicalPath}`;\n    const siteTitle = config.siteTitle;\n    const schemaTitle = intl.formatMessage({\n      id: 'Page.schemaTitle'\n    }, {\n      siteTitle\n    });\n    const schemaDescription = intl.formatMessage({\n      id: 'Page.schemaDescription'\n    });\n    const metaTitle = title || schemaTitle;\n    const metaDescription = description || schemaDescription;\n    const facebookImgs = facebookImages || [{\n      name: 'facebook',\n      url: `${canonicalRootURL}${facebookImage}`,\n      width: 1200,\n      height: 630\n    }];\n    const twitterImgs = twitterImages || [{\n      name: 'twitter',\n      url: `${canonicalRootURL}${twitterImage}`,\n      width: 600,\n      height: 314\n    }];\n    const metaToHead = metaTagProps({\n      author,\n      contentType,\n      description: metaDescription,\n      facebookImages: facebookImgs,\n      twitterImages: twitterImgs,\n      published,\n      tags,\n      title: metaTitle,\n      twitterHandle,\n      updated,\n      url: canonicalUrl,\n      locale: intl.locale\n    }); // eslint-disable-next-line react/no-array-index-key\n\n    const metaTags = metaToHead.map((metaProps, i) => /*#__PURE__*/React.createElement(\"meta\", Object.assign({\n      key: i\n    }, metaProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 55\n      }\n    })));\n    const facebookPage = config.siteFacebookPage;\n    const twitterPage = twitterPageURL(config.siteTwitterHandle);\n    const instagramPage = config.siteInstagramPage;\n    const sameOrganizationAs = [facebookPage, twitterPage, instagramPage].filter(v => v != null); // Schema for search engines (helps them to understand what this page is about)\n    // http://schema.org\n    // We are using JSON-LD format\n    // Schema attribute can be either single schema object or an array of objects\n    // This makes it possible to include several different items from the same page.\n    // E.g. Product, Place, Video\n\n    const schemaFromProps = Array.isArray(schema) ? schema : [schema];\n    const schemaArrayJSONString = JSON.stringify([...schemaFromProps, {\n      '@context': 'http://schema.org',\n      '@type': 'Organization',\n      '@id': `${canonicalRootURL}#organization`,\n      url: canonicalRootURL,\n      name: siteTitle,\n      sameAs: sameOrganizationAs,\n      logo: `${canonicalRootURL}/static/webapp-icon-192x192.png`,\n      address: config.address\n    }, {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: canonicalRootURL,\n      description: schemaDescription,\n      name: schemaTitle,\n      publisher: {\n        '@id': `${canonicalRootURL}#organization`\n      }\n    }]);\n    const scrollPositionStyles = scrollingDisabled ? {\n      marginTop: `${-1 * this.scrollPosition}px`\n    } : {}; // If scrolling is not disabled, but content element has still scrollPosition set\n    // in style attribute, we scrollTo scrollPosition.\n\n    const hasMarginTopStyle = this.contentDiv && this.contentDiv.style.marginTop;\n\n    if (!scrollingDisabled && hasMarginTopStyle) {\n      window.requestAnimationFrame(() => {\n        window.scrollTo(0, this.scrollPosition);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      htmlAttributes: {\n        lang: intl.locale\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, title), referrerMeta, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"canonical\",\n      href: canonicalUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      httpEquiv: \"Content-Type\",\n      content: \"text/html; charset=UTF-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      httpEquiv: \"Content-Language\",\n      content: intl.locale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }), metaTags, /*#__PURE__*/React.createElement(\"script\", {\n      id: \"page-schema\",\n      type: \"application/ld+json\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, schemaArrayJSONString.replace(/</g, '\\\\u003c'))), /*#__PURE__*/React.createElement(CookieConsent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.content,\n      style: scrollPositionStyles,\n      ref: c => {\n        this.contentDiv = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n}\n\nconst {\n  any,\n  array,\n  arrayOf,\n  bool,\n  func,\n  number,\n  object,\n  oneOfType,\n  shape,\n  string\n} = PropTypes;\nPageComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  children: null,\n  author: null,\n  contentType: 'website',\n  description: null,\n  facebookImages: null,\n  twitterImages: null,\n  published: null,\n  referrer: null,\n  schema: null,\n  tags: null,\n  twitterHandle: null,\n  updated: null\n};\nPageComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  children: any,\n  scrollingDisabled: bool.isRequired,\n  // Handle referrer policy\n  referrer: string,\n  // SEO related props\n  author: string,\n  contentType: string,\n  // og:type\n  description: string,\n  // page description\n  facebookImages: arrayOf(shape({\n    width: number.isRequired,\n    height: number.isRequired,\n    url: string.isRequired\n  })),\n  twitterImages: arrayOf(shape({\n    width: number.isRequired,\n    height: number.isRequired,\n    url: string.isRequired\n  })),\n  published: string,\n  // article:published_time\n  schema: oneOfType([object, array]),\n  // http://schema.org\n  tags: string,\n  // article:tag\n  title: string.isRequired,\n  // page title\n  twitterHandle: string,\n  // twitter handle\n  updated: string,\n  // article:modified_time\n  // from withRouter\n  history: shape({\n    listen: func.isRequired\n  }).isRequired,\n  location: object.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst Page = injectIntl(_c = withRouter(PageComponent));\n_c2 = Page;\nPage.displayName = 'Page';\nexport default Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page$injectIntl\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/Page/Page.js"],"names":["React","Component","PropTypes","Helmet","withRouter","classNames","config","routeConfiguration","injectIntl","intlShape","metaTagProps","canonicalRoutePath","CookieConsent","facebookImage","twitterImage","css","preventDefault","e","twitterPageURL","siteTwitterHandle","charAt","substring","PageComponent","constructor","props","scrollPosition","contentDiv","scrollingDisabledChanged","bind","componentDidMount","document","addEventListener","pageSchema","getElementById","remove","componentWillUnmount","removeEventListener","currentScrollingDisabled","scrollingDisabled","window","pageYOffset","documentElement","scrollTop","render","className","rootClassName","children","location","intl","referrer","author","contentType","description","facebookImages","published","schema","tags","title","twitterHandle","twitterImages","updated","classes","root","referrerMeta","canonicalRootURL","shouldReturnPathOnly","canonicalPath","canonicalUrl","siteTitle","schemaTitle","formatMessage","id","schemaDescription","metaTitle","metaDescription","facebookImgs","name","url","width","height","twitterImgs","metaToHead","locale","metaTags","map","metaProps","i","facebookPage","siteFacebookPage","twitterPage","instagramPage","siteInstagramPage","sameOrganizationAs","filter","v","schemaFromProps","Array","isArray","schemaArrayJSONString","JSON","stringify","sameAs","logo","address","publisher","scrollPositionStyles","marginTop","hasMarginTopStyle","style","requestAnimationFrame","scrollTo","lang","replace","content","c","any","array","arrayOf","bool","func","number","object","oneOfType","shape","string","defaultProps","propTypes","isRequired","history","listen","Page","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nimport config from '../../config';\r\nimport routeConfiguration from '../../routing/routeConfiguration';\r\nimport { injectIntl, intlShape } from '../../util/reactIntl';\r\nimport { metaTagProps } from '../../util/seo';\r\nimport { canonicalRoutePath } from '../../util/routes';\r\n\r\nimport { CookieConsent } from '../../components';\r\n\r\nimport facebookImage from '../../assets/sneakertimeFacebook-1200x630.jpg';\r\nimport twitterImage from '../../assets/sneakertimeTwitter-600x314.jpg';\r\nimport css from './Page.module.css';\r\n\r\nconst preventDefault = e => {\r\n  e.preventDefault();\r\n};\r\n\r\nconst twitterPageURL = siteTwitterHandle => {\r\n  if (siteTwitterHandle && siteTwitterHandle.charAt(0) === '@') {\r\n    return `https://twitter.com/${siteTwitterHandle.substring(1)}`;\r\n  } else if (siteTwitterHandle) {\r\n    return `https://twitter.com/${siteTwitterHandle}`;\r\n  }\r\n  return null;\r\n};\r\n\r\nclass PageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Keeping scrollPosition out of state reduces rendering cycles (and no bad states rendered)\r\n    this.scrollPosition = 0;\r\n    this.contentDiv = null;\r\n    this.scrollingDisabledChanged = this.scrollingDisabledChanged.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // By default a dropped file is loaded in the browser window as a\r\n    // file URL. We want to prevent this since it might loose a lot of\r\n    // data the user has typed but not yet saved. Preventing requires\r\n    // handling both dragover and drop events.\r\n    document.addEventListener('dragover', preventDefault);\r\n    document.addEventListener('drop', preventDefault);\r\n\r\n    // Remove duplicated server-side rendered page schema.\r\n    // It's in <body> to improve initial rendering performance,\r\n    // but after web app is initialized, react-helmet-async operates with <head>\r\n    const pageSchema = document.getElementById('page-schema');\r\n    if (pageSchema) {\r\n      pageSchema.remove();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('dragover', preventDefault);\r\n    document.removeEventListener('drop', preventDefault);\r\n  }\r\n\r\n  scrollingDisabledChanged(currentScrollingDisabled) {\r\n    if (currentScrollingDisabled && currentScrollingDisabled !== this.scrollingDisabled) {\r\n      // Update current scroll position, if scrolling is disabled (e.g. modal is open)\r\n      this.scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\r\n      this.scrollingDisabled = currentScrollingDisabled;\r\n    } else if (currentScrollingDisabled !== this.scrollingDisabled) {\r\n      this.scrollingDisabled = currentScrollingDisabled;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      rootClassName,\r\n      children,\r\n      location,\r\n      intl,\r\n      scrollingDisabled,\r\n      referrer,\r\n      author,\r\n      contentType,\r\n      description,\r\n      facebookImages,\r\n      published,\r\n      schema,\r\n      tags,\r\n      title,\r\n      twitterHandle,\r\n      twitterImages,\r\n      updated,\r\n    } = this.props;\r\n\r\n    const classes = classNames(rootClassName || css.root, className, {\r\n      [css.scrollingDisabled]: scrollingDisabled,\r\n    });\r\n\r\n    this.scrollingDisabledChanged(scrollingDisabled);\r\n    const referrerMeta = referrer ? <meta name=\"referrer\" content={referrer} /> : null;\r\n\r\n    const canonicalRootURL = config.canonicalRootURL;\r\n    const shouldReturnPathOnly = referrer && referrer !== 'unsafe-url';\r\n    const canonicalPath = canonicalRoutePath(routeConfiguration(), location, shouldReturnPathOnly);\r\n    const canonicalUrl = `${canonicalRootURL}${canonicalPath}`;\r\n\r\n    const siteTitle = config.siteTitle;\r\n    const schemaTitle = intl.formatMessage({ id: 'Page.schemaTitle' }, { siteTitle });\r\n    const schemaDescription = intl.formatMessage({ id: 'Page.schemaDescription' });\r\n    const metaTitle = title || schemaTitle;\r\n    const metaDescription = description || schemaDescription;\r\n    const facebookImgs = facebookImages || [\r\n      {\r\n        name: 'facebook',\r\n        url: `${canonicalRootURL}${facebookImage}`,\r\n        width: 1200,\r\n        height: 630,\r\n      },\r\n    ];\r\n    const twitterImgs = twitterImages || [\r\n      {\r\n        name: 'twitter',\r\n        url: `${canonicalRootURL}${twitterImage}`,\r\n        width: 600,\r\n        height: 314,\r\n      },\r\n    ];\r\n\r\n    const metaToHead = metaTagProps({\r\n      author,\r\n      contentType,\r\n      description: metaDescription,\r\n      facebookImages: facebookImgs,\r\n      twitterImages: twitterImgs,\r\n      published,\r\n      tags,\r\n      title: metaTitle,\r\n      twitterHandle,\r\n      updated,\r\n      url: canonicalUrl,\r\n      locale: intl.locale,\r\n    });\r\n\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    const metaTags = metaToHead.map((metaProps, i) => <meta key={i} {...metaProps} />);\r\n\r\n    const facebookPage = config.siteFacebookPage;\r\n    const twitterPage = twitterPageURL(config.siteTwitterHandle);\r\n    const instagramPage = config.siteInstagramPage;\r\n    const sameOrganizationAs = [facebookPage, twitterPage, instagramPage].filter(v => v != null);\r\n\r\n    // Schema for search engines (helps them to understand what this page is about)\r\n    // http://schema.org\r\n    // We are using JSON-LD format\r\n\r\n    // Schema attribute can be either single schema object or an array of objects\r\n    // This makes it possible to include several different items from the same page.\r\n    // E.g. Product, Place, Video\r\n    const schemaFromProps = Array.isArray(schema) ? schema : [schema];\r\n    const schemaArrayJSONString = JSON.stringify([\r\n      ...schemaFromProps,\r\n      {\r\n        '@context': 'http://schema.org',\r\n        '@type': 'Organization',\r\n        '@id': `${canonicalRootURL}#organization`,\r\n        url: canonicalRootURL,\r\n        name: siteTitle,\r\n        sameAs: sameOrganizationAs,\r\n        logo: `${canonicalRootURL}/static/webapp-icon-192x192.png`,\r\n        address: config.address,\r\n      },\r\n      {\r\n        '@context': 'http://schema.org',\r\n        '@type': 'WebSite',\r\n        url: canonicalRootURL,\r\n        description: schemaDescription,\r\n        name: schemaTitle,\r\n        publisher: {\r\n          '@id': `${canonicalRootURL}#organization`,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    const scrollPositionStyles = scrollingDisabled\r\n      ? { marginTop: `${-1 * this.scrollPosition}px` }\r\n      : {};\r\n\r\n    // If scrolling is not disabled, but content element has still scrollPosition set\r\n    // in style attribute, we scrollTo scrollPosition.\r\n    const hasMarginTopStyle = this.contentDiv && this.contentDiv.style.marginTop;\r\n    if (!scrollingDisabled && hasMarginTopStyle) {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(0, this.scrollPosition);\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang: intl.locale,\r\n          }}\r\n        >\r\n          <title>{title}</title>\r\n          {referrerMeta}\r\n          <link rel=\"canonical\" href={canonicalUrl} />\r\n          <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n          <meta httpEquiv=\"Content-Language\" content={intl.locale} />\r\n          {metaTags}\r\n          <script id=\"page-schema\" type=\"application/ld+json\">\r\n            {schemaArrayJSONString.replace(/</g, '\\\\u003c')}\r\n          </script>\r\n        </Helmet>\r\n        <CookieConsent />\r\n        <div\r\n          className={css.content}\r\n          style={scrollPositionStyles}\r\n          ref={c => {\r\n            this.contentDiv = c;\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst { any, array, arrayOf, bool, func, number, object, oneOfType, shape, string } = PropTypes;\r\n\r\nPageComponent.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  children: null,\r\n  author: null,\r\n  contentType: 'website',\r\n  description: null,\r\n  facebookImages: null,\r\n  twitterImages: null,\r\n  published: null,\r\n  referrer: null,\r\n  schema: null,\r\n  tags: null,\r\n  twitterHandle: null,\r\n  updated: null,\r\n};\r\n\r\nPageComponent.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  children: any,\r\n  scrollingDisabled: bool.isRequired,\r\n\r\n  // Handle referrer policy\r\n  referrer: string,\r\n\r\n  // SEO related props\r\n  author: string,\r\n  contentType: string, // og:type\r\n  description: string, // page description\r\n  facebookImages: arrayOf(\r\n    shape({\r\n      width: number.isRequired,\r\n      height: number.isRequired,\r\n      url: string.isRequired,\r\n    })\r\n  ),\r\n  twitterImages: arrayOf(\r\n    shape({\r\n      width: number.isRequired,\r\n      height: number.isRequired,\r\n      url: string.isRequired,\r\n    })\r\n  ),\r\n  published: string, // article:published_time\r\n  schema: oneOfType([object, array]), // http://schema.org\r\n  tags: string, // article:tag\r\n  title: string.isRequired, // page title\r\n  twitterHandle: string, // twitter handle\r\n  updated: string, // article:modified_time\r\n\r\n  // from withRouter\r\n  history: shape({\r\n    listen: func.isRequired,\r\n  }).isRequired,\r\n  location: object.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst Page = injectIntl(withRouter(PageComponent));\r\nPage.displayName = 'Page';\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}