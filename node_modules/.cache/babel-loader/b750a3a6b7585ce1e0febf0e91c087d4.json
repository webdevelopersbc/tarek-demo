{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\PropertyGroup\\\\PropertyGroup.js\";\n\n/*\r\n * Renders a set of options with selected and non-selected values.\r\n *\r\n * The corresponding component when selecting the values is\r\n * FieldCheckboxGroup.\r\n *\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport includes from 'lodash/includes';\nimport css from './PropertyGroup.module.css';\n\nconst checkSelected = (options, selectedOptions) => {\n  return options.map(option => ({\n    key: option.key,\n    label: option.label,\n    isSelected: includes(selectedOptions, option.key)\n  }));\n};\n\nconst IconCheck = props => {\n  const isVisible = props.isVisible;\n  const classes = isVisible ? css.checkIcon : classNames(css.checkIcon, css.hidden);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"9\",\n    height: \"9\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: css.marketplaceFill,\n    d: \"M2.636621 7.7824771L.3573694 5.6447948c-.4764924-.4739011-.4764924-1.2418639 0-1.7181952.4777142-.473901 1.251098-.473901 1.7288122 0l1.260291 1.1254783L6.1721653.505847C6.565577-.0373166 7.326743-.1636902 7.8777637.227582c.5473554.3912721.6731983 1.150729.2797866 1.6951076L4.4924979 7.631801c-.2199195.306213-.5803433.5067096-.9920816.5067096-.3225487 0-.6328797-.1263736-.8637952-.3560334z\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = IconCheck;\n\nconst Item = props => {\n  const {\n    label,\n    isSelected\n  } = props;\n  const labelClass = isSelected ? css.selectedLabel : css.notSelectedLabel;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: css.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.iconWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconCheck, {\n    isVisible: isSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.labelWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\n_c2 = Item;\n\nconst PropertyGroup = props => {\n  const {\n    rootClassName,\n    className,\n    id,\n    options,\n    selectedOptions,\n    twoColumns\n  } = props;\n  const classes = classNames(rootClassName || css.root, className);\n  const listClasses = twoColumns ? classNames(classes, css.twoColumns) : classes;\n  const checked = checkSelected(options, selectedOptions);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: listClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, checked.map(option => /*#__PURE__*/React.createElement(Item, {\n    key: `${id}.${option.key}`,\n    label: option.label,\n    isSelected: option.isSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c3 = PropertyGroup;\nPropertyGroup.defaultProps = {\n  rootClassName: null,\n  className: null,\n  selectedOptions: [],\n  twoColumns: false\n};\nconst {\n  arrayOf,\n  bool,\n  node,\n  shape,\n  string\n} = PropTypes;\nPropertyGroup.propTypes = {\n  rootClassName: string,\n  className: string,\n  id: string.isRequired,\n  options: arrayOf(shape({\n    key: string.isRequired,\n    label: node.isRequired\n  })),\n  selectedOptions: arrayOf(string),\n  twoColumns: bool\n};\nexport default PropertyGroup;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IconCheck\");\n$RefreshReg$(_c2, \"Item\");\n$RefreshReg$(_c3, \"PropertyGroup\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/PropertyGroup/PropertyGroup.js"],"names":["React","PropTypes","classNames","includes","css","checkSelected","options","selectedOptions","map","option","key","label","isSelected","IconCheck","props","isVisible","classes","checkIcon","hidden","marketplaceFill","Item","labelClass","selectedLabel","notSelectedLabel","item","iconWrapper","labelWrapper","PropertyGroup","rootClassName","className","id","twoColumns","root","listClasses","checked","defaultProps","arrayOf","bool","node","shape","string","propTypes","isRequired"],"mappings":"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","sourcesContent":["/*\r\n * Renders a set of options with selected and non-selected values.\r\n *\r\n * The corresponding component when selecting the values is\r\n * FieldCheckboxGroup.\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport includes from 'lodash/includes';\r\n\r\nimport css from './PropertyGroup.module.css';\r\n\r\nconst checkSelected = (options, selectedOptions) => {\r\n  return options.map(option => ({\r\n    key: option.key,\r\n    label: option.label,\r\n    isSelected: includes(selectedOptions, option.key),\r\n  }));\r\n};\r\n\r\nconst IconCheck = props => {\r\n  const isVisible = props.isVisible;\r\n  const classes = isVisible ? css.checkIcon : classNames(css.checkIcon, css.hidden);\r\n\r\n  return (\r\n    <svg width=\"9\" height=\"9\" xmlns=\"http://www.w3.org/2000/svg\" className={classes}>\r\n      <path\r\n        className={css.marketplaceFill}\r\n        d=\"M2.636621 7.7824771L.3573694 5.6447948c-.4764924-.4739011-.4764924-1.2418639 0-1.7181952.4777142-.473901 1.251098-.473901 1.7288122 0l1.260291 1.1254783L6.1721653.505847C6.565577-.0373166 7.326743-.1636902 7.8777637.227582c.5473554.3912721.6731983 1.150729.2797866 1.6951076L4.4924979 7.631801c-.2199195.306213-.5803433.5067096-.9920816.5067096-.3225487 0-.6328797-.1263736-.8637952-.3560334z\"\r\n        fillRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Item = props => {\r\n  const { label, isSelected } = props;\r\n  const labelClass = isSelected ? css.selectedLabel : css.notSelectedLabel;\r\n  return (\r\n    <li className={css.item}>\r\n      <span className={css.iconWrapper}>\r\n        <IconCheck isVisible={isSelected} />\r\n      </span>\r\n      <div className={css.labelWrapper}>\r\n        <span className={labelClass}>{label}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst PropertyGroup = props => {\r\n  const { rootClassName, className, id, options, selectedOptions, twoColumns } = props;\r\n  const classes = classNames(rootClassName || css.root, className);\r\n  const listClasses = twoColumns ? classNames(classes, css.twoColumns) : classes;\r\n\r\n  const checked = checkSelected(options, selectedOptions);\r\n\r\n  return (\r\n    <ul className={listClasses}>\r\n      {checked.map(option => (\r\n        <Item key={`${id}.${option.key}`} label={option.label} isSelected={option.isSelected} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nPropertyGroup.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  selectedOptions: [],\r\n  twoColumns: false,\r\n};\r\n\r\nconst { arrayOf, bool, node, shape, string } = PropTypes;\r\n\r\nPropertyGroup.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  id: string.isRequired,\r\n  options: arrayOf(\r\n    shape({\r\n      key: string.isRequired,\r\n      label: node.isRequired,\r\n    })\r\n  ),\r\n  selectedOptions: arrayOf(string),\r\n  twoColumns: bool,\r\n};\r\n\r\nexport default PropertyGroup;\r\n"]},"metadata":{},"sourceType":"module"}