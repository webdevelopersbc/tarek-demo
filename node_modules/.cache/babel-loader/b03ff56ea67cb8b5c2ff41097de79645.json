{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\SearchPage\\\\SortBy\\\\SortByPopup.js\";\nimport React, { Component } from 'react';\nimport { arrayOf, func, number, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Menu, MenuContent, MenuItem, MenuLabel } from '../../../components';\nimport css from './SortByPopup.module.css';\n\nconst optionLabel = (options, key) => {\n  const option = options.find(o => o.key === key);\n  return option ? option.label : key;\n};\n\nconst SortByIcon = props => {\n  const classes = classNames(css.icon, props.className); // extra small arrow head (down)\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes,\n    width: \"8\",\n    height: \"5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.764 4.236c.131.13.341.13.472 0l2.666-2.667a.333.333 0 10-.471-.471L4 3.528l-2.43-2.43a.333.333 0 10-.471.471l2.665 2.667z\",\n    fill: \"#4A4A4A\",\n    stroke: \"#4A4A4A\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = SortByIcon;\n\nclass SortByPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.onToggleActive = this.onToggleActive.bind(this);\n    this.selectOption = this.selectOption.bind(this);\n  }\n\n  onToggleActive(isOpen) {\n    this.setState({\n      isOpen: isOpen\n    });\n  }\n\n  selectOption(urlParam, option) {\n    this.setState({\n      isOpen: false\n    });\n    this.props.onSelect(urlParam, option);\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      menuLabelRootClassName,\n      urlParam,\n      label,\n      options,\n      initialValue,\n      contentPlacementOffset\n    } = this.props; // resolve menu label text and class\n\n    const menuLabel = initialValue ? optionLabel(options, initialValue) : label;\n    const classes = classNames(rootClassName || css.root, className);\n    const menuLabelClasses = classNames(menuLabelRootClassName || css.menuLabel);\n    const iconArrowClassName = this.state.isOpen ? css.iconArrowAnimation : null;\n    return /*#__PURE__*/React.createElement(Menu, {\n      className: classes,\n      useArrow: false,\n      contentPlacementOffset: contentPlacementOffset,\n      contentPosition: \"left\",\n      onToggleActive: this.onToggleActive,\n      isOpen: this.state.isOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MenuLabel, {\n      className: menuLabelClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, menuLabel, /*#__PURE__*/React.createElement(SortByIcon, {\n      className: iconArrowClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MenuContent, {\n      className: css.menuContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, options.map(option => {\n      // check if this option is selected\n      const selected = initialValue === option.key; // menu item border class\n\n      const menuItemBorderClass = selected ? css.menuItemBorderSelected : css.menuItemBorder;\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: css.menuItem,\n        disabled: option.disabled,\n        onClick: () => selected ? null : this.selectOption(urlParam, option.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: menuItemBorderClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }), option.longLabel || option.label));\n    })));\n  }\n\n}\n\nSortByPopup.defaultProps = {\n  rootClassName: null,\n  className: null,\n  menuLabelRootClassName: null,\n  initialValue: null,\n  contentPlacementOffset: 0\n};\nSortByPopup.propTypes = {\n  rootClassName: string,\n  className: string,\n  menuLabelRootClassName: string,\n  urlParam: string.isRequired,\n  label: string.isRequired,\n  onSelect: func.isRequired,\n  options: arrayOf(shape({\n    key: string.isRequired,\n    label: string.isRequired\n  })).isRequired,\n  initialValue: string,\n  contentPlacementOffset: number\n};\nexport default SortByPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortByIcon\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/SearchPage/SortBy/SortByPopup.js"],"names":["React","Component","arrayOf","func","number","shape","string","classNames","Menu","MenuContent","MenuItem","MenuLabel","css","optionLabel","options","key","option","find","o","label","SortByIcon","props","classes","icon","className","SortByPopup","constructor","state","isOpen","onToggleActive","bind","selectOption","setState","urlParam","onSelect","render","rootClassName","menuLabelRootClassName","initialValue","contentPlacementOffset","menuLabel","root","menuLabelClasses","iconArrowClassName","iconArrowAnimation","menuContent","map","selected","menuItemBorderClass","menuItemBorderSelected","menuItemBorder","menuItem","disabled","longLabel","defaultProps","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,YAArD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,qBAAvD;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACpC,QAAMC,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACH,GAAF,KAAUA,GAA5B,CAAf;AACA,SAAOC,MAAM,GAAGA,MAAM,CAACG,KAAV,GAAkBJ,GAA/B;AACD,CAHD;;AAKA,MAAMK,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGf,UAAU,CAACK,GAAG,CAACW,IAAL,EAAWF,KAAK,CAACG,SAAjB,CAA1B,CAD0B,CAE1B;;AACA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAhB;AAAyB,IAAA,KAAK,EAAC,GAA/B;AAAmC,IAAA,MAAM,EAAC,GAA1C;AAA8C,IAAA,KAAK,EAAC,4BAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,CAAC,EAAC,8HADJ;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,QAAQ,EAAC,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAbD;;KAAMF,U;;AAeN,MAAMK,WAAN,SAA0BxB,SAA1B,CAAoC;AAClCyB,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKM,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,cAAc,CAACD,MAAD,EAAS;AACrB,SAAKI,QAAL,CAAc;AAAEJ,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACD;;AAEDG,EAAAA,YAAY,CAACE,QAAD,EAAWjB,MAAX,EAAmB;AAC7B,SAAKgB,QAAL,CAAc;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAd;AACA,SAAKP,KAAL,CAAWa,QAAX,CAAoBD,QAApB,EAA8BjB,MAA9B;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,aADI;AAEJZ,MAAAA,SAFI;AAGJa,MAAAA,sBAHI;AAIJJ,MAAAA,QAJI;AAKJd,MAAAA,KALI;AAMJL,MAAAA,OANI;AAOJwB,MAAAA,YAPI;AAQJC,MAAAA;AARI,QASF,KAAKlB,KATT,CADO,CAYP;;AACA,UAAMmB,SAAS,GAAGF,YAAY,GAAGzB,WAAW,CAACC,OAAD,EAAUwB,YAAV,CAAd,GAAwCnB,KAAtE;AAEA,UAAMG,OAAO,GAAGf,UAAU,CAAC6B,aAAa,IAAIxB,GAAG,CAAC6B,IAAtB,EAA4BjB,SAA5B,CAA1B;AACA,UAAMkB,gBAAgB,GAAGnC,UAAU,CAAC8B,sBAAsB,IAAIzB,GAAG,CAAC4B,SAA/B,CAAnC;AACA,UAAMG,kBAAkB,GAAG,KAAKhB,KAAL,CAAWC,MAAX,GAAoBhB,GAAG,CAACgC,kBAAxB,GAA6C,IAAxE;AAEA,wBACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAEtB,OADb;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,sBAAsB,EAAEiB,sBAH1B;AAIE,MAAA,eAAe,EAAC,MAJlB;AAKE,MAAA,cAAc,EAAE,KAAKV,cALvB;AAME,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEc,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,SADH,eAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEG,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,eAYE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE/B,GAAG,CAACiC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/B,OAAO,CAACgC,GAAR,CAAY9B,MAAM,IAAI;AACrB;AACA,YAAM+B,QAAQ,GAAGT,YAAY,KAAKtB,MAAM,CAACD,GAAzC,CAFqB,CAGrB;;AACA,YAAMiC,mBAAmB,GAAGD,QAAQ,GAAGnC,GAAG,CAACqC,sBAAP,GAAgCrC,GAAG,CAACsC,cAAxE;AAEA,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAElC,MAAM,CAACD,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAEH,GAAG,CAACuC,QADjB;AAEE,QAAA,QAAQ,EAAEnC,MAAM,CAACoC,QAFnB;AAGE,QAAA,OAAO,EAAE,MAAOL,QAAQ,GAAG,IAAH,GAAU,KAAKhB,YAAL,CAAkBE,QAAlB,EAA4BjB,MAAM,CAACD,GAAnC,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAM,QAAA,SAAS,EAAEiC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAMGhC,MAAM,CAACqC,SAAP,IAAoBrC,MAAM,CAACG,KAN9B,CADF,CADF;AAYD,KAlBA,CADH,CAZF,CADF;AAoCD;;AAzEiC;;AA4EpCM,WAAW,CAAC6B,YAAZ,GAA2B;AACzBlB,EAAAA,aAAa,EAAE,IADU;AAEzBZ,EAAAA,SAAS,EAAE,IAFc;AAGzBa,EAAAA,sBAAsB,EAAE,IAHC;AAIzBC,EAAAA,YAAY,EAAE,IAJW;AAKzBC,EAAAA,sBAAsB,EAAE;AALC,CAA3B;AAQAd,WAAW,CAAC8B,SAAZ,GAAwB;AACtBnB,EAAAA,aAAa,EAAE9B,MADO;AAEtBkB,EAAAA,SAAS,EAAElB,MAFW;AAGtB+B,EAAAA,sBAAsB,EAAE/B,MAHF;AAItB2B,EAAAA,QAAQ,EAAE3B,MAAM,CAACkD,UAJK;AAKtBrC,EAAAA,KAAK,EAAEb,MAAM,CAACkD,UALQ;AAMtBtB,EAAAA,QAAQ,EAAE/B,IAAI,CAACqD,UANO;AAOtB1C,EAAAA,OAAO,EAAEZ,OAAO,CACdG,KAAK,CAAC;AACJU,IAAAA,GAAG,EAAET,MAAM,CAACkD,UADR;AAEJrC,IAAAA,KAAK,EAAEb,MAAM,CAACkD;AAFV,GAAD,CADS,CAAP,CAKPA,UAZoB;AAatBlB,EAAAA,YAAY,EAAEhC,MAbQ;AActBiC,EAAAA,sBAAsB,EAAEnC;AAdF,CAAxB;AAiBA,eAAeqB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { arrayOf, func, number, shape, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { Menu, MenuContent, MenuItem, MenuLabel } from '../../../components';\r\nimport css from './SortByPopup.module.css';\r\n\r\nconst optionLabel = (options, key) => {\r\n  const option = options.find(o => o.key === key);\r\n  return option ? option.label : key;\r\n};\r\n\r\nconst SortByIcon = props => {\r\n  const classes = classNames(css.icon, props.className);\r\n  // extra small arrow head (down)\r\n  return (\r\n    <svg className={classes} width=\"8\" height=\"5\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path\r\n        d=\"M3.764 4.236c.131.13.341.13.472 0l2.666-2.667a.333.333 0 10-.471-.471L4 3.528l-2.43-2.43a.333.333 0 10-.471.471l2.665 2.667z\"\r\n        fill=\"#4A4A4A\"\r\n        stroke=\"#4A4A4A\"\r\n        fillRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nclass SortByPopup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { isOpen: false };\r\n    this.onToggleActive = this.onToggleActive.bind(this);\r\n    this.selectOption = this.selectOption.bind(this);\r\n  }\r\n\r\n  onToggleActive(isOpen) {\r\n    this.setState({ isOpen: isOpen });\r\n  }\r\n\r\n  selectOption(urlParam, option) {\r\n    this.setState({ isOpen: false });\r\n    this.props.onSelect(urlParam, option);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      rootClassName,\r\n      className,\r\n      menuLabelRootClassName,\r\n      urlParam,\r\n      label,\r\n      options,\r\n      initialValue,\r\n      contentPlacementOffset,\r\n    } = this.props;\r\n\r\n    // resolve menu label text and class\r\n    const menuLabel = initialValue ? optionLabel(options, initialValue) : label;\r\n\r\n    const classes = classNames(rootClassName || css.root, className);\r\n    const menuLabelClasses = classNames(menuLabelRootClassName || css.menuLabel);\r\n    const iconArrowClassName = this.state.isOpen ? css.iconArrowAnimation : null;\r\n\r\n    return (\r\n      <Menu\r\n        className={classes}\r\n        useArrow={false}\r\n        contentPlacementOffset={contentPlacementOffset}\r\n        contentPosition=\"left\"\r\n        onToggleActive={this.onToggleActive}\r\n        isOpen={this.state.isOpen}\r\n      >\r\n        <MenuLabel className={menuLabelClasses}>\r\n          {menuLabel}\r\n          <SortByIcon className={iconArrowClassName} />\r\n        </MenuLabel>\r\n        <MenuContent className={css.menuContent}>\r\n          {options.map(option => {\r\n            // check if this option is selected\r\n            const selected = initialValue === option.key;\r\n            // menu item border class\r\n            const menuItemBorderClass = selected ? css.menuItemBorderSelected : css.menuItemBorder;\r\n\r\n            return (\r\n              <MenuItem key={option.key}>\r\n                <button\r\n                  className={css.menuItem}\r\n                  disabled={option.disabled}\r\n                  onClick={() => (selected ? null : this.selectOption(urlParam, option.key))}\r\n                >\r\n                  <span className={menuItemBorderClass} />\r\n                  {option.longLabel || option.label}\r\n                </button>\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </MenuContent>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nSortByPopup.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  menuLabelRootClassName: null,\r\n  initialValue: null,\r\n  contentPlacementOffset: 0,\r\n};\r\n\r\nSortByPopup.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  menuLabelRootClassName: string,\r\n  urlParam: string.isRequired,\r\n  label: string.isRequired,\r\n  onSelect: func.isRequired,\r\n  options: arrayOf(\r\n    shape({\r\n      key: string.isRequired,\r\n      label: string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  initialValue: string,\r\n  contentPlacementOffset: number,\r\n};\r\n\r\nexport default SortByPopup;\r\n"]},"metadata":{},"sourceType":"module"}