{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldRangeSlider\\\\FieldRangeSlider.js\";\nimport React from 'react';\nimport { Field } from 'react-final-form';\nimport classNames from 'classnames';\nimport { RangeSlider } from '../../components';\n\nconst RangeSliderInput = props => {\n  const {\n    input,\n    handles,\n    ...rest\n  } = props;\n  const {\n    value,\n    ...inputProps\n  } = input;\n  const currentHandles = Array.isArray(value) ? value : handles;\n  return /*#__PURE__*/React.createElement(RangeSlider, Object.assign({}, inputProps, rest, {\n    handles: currentHandles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = RangeSliderInput;\n\nconst FieldRangeSlider = props => {\n  const {\n    rootClassName,\n    className,\n    id,\n    label,\n    ...rest\n  } = props;\n\n  if (label && !id) {\n    throw new Error('id required when a label is given');\n  }\n\n  const inputProps = {\n    id,\n    ...rest\n  };\n  const classes = classNames(rootClassName, className);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, label ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }, label) : null, /*#__PURE__*/React.createElement(Field, Object.assign({\n    component: RangeSliderInput\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c2 = FieldRangeSlider;\nexport default FieldRangeSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RangeSliderInput\");\n$RefreshReg$(_c2, \"FieldRangeSlider\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldRangeSlider/FieldRangeSlider.js"],"names":["React","Field","classNames","RangeSlider","RangeSliderInput","props","input","handles","rest","value","inputProps","currentHandles","Array","isArray","FieldRangeSlider","rootClassName","className","id","label","Error","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkB,OAAGC;AAArB,MAA8BH,KAApC;AACA,QAAM;AAAEI,IAAAA,KAAF;AAAS,OAAGC;AAAZ,MAA2BJ,KAAjC;AAEA,QAAMK,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBA,KAAvB,GAA+BF,OAAtD;AACA,sBAAO,oBAAC,WAAD,oBAAiBG,UAAjB,EAAiCF,IAAjC;AAAuC,IAAA,OAAO,EAAEG,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAND;;KAAMP,gB;;AAQN,MAAMU,gBAAgB,GAAGT,KAAK,IAAI;AAChC,QAAM;AAAEU,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,EAA5B;AAAgCC,IAAAA,KAAhC;AAAuC,OAAGV;AAA1C,MAAmDH,KAAzD;;AAEA,MAAIa,KAAK,IAAI,CAACD,EAAd,EAAkB;AAChB,UAAM,IAAIE,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,QAAMT,UAAU,GAAG;AAAEO,IAAAA,EAAF;AAAM,OAAGT;AAAT,GAAnB;AACA,QAAMY,OAAO,GAAGlB,UAAU,CAACa,aAAD,EAAgBC,SAAhB,CAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEI,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,gBAAG;AAAO,IAAA,OAAO,EAAED,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBC,KAArB,CAAH,GAAyC,IADjD,eAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEd;AAAlB,KAAwCM,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CAhBD;;MAAMI,gB;AAkBN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\r\nimport { Field } from 'react-final-form';\r\nimport classNames from 'classnames';\r\nimport { RangeSlider } from '../../components';\r\n\r\nconst RangeSliderInput = props => {\r\n  const { input, handles, ...rest } = props;\r\n  const { value, ...inputProps } = input;\r\n\r\n  const currentHandles = Array.isArray(value) ? value : handles;\r\n  return <RangeSlider {...inputProps} {...rest} handles={currentHandles} />;\r\n};\r\n\r\nconst FieldRangeSlider = props => {\r\n  const { rootClassName, className, id, label, ...rest } = props;\r\n\r\n  if (label && !id) {\r\n    throw new Error('id required when a label is given');\r\n  }\r\n\r\n  const inputProps = { id, ...rest };\r\n  const classes = classNames(rootClassName, className);\r\n\r\n  return (\r\n    <div className={classes}>\r\n      {label ? <label htmlFor={id}>{label}</label> : null}\r\n      <Field component={RangeSliderInput} {...inputProps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FieldRangeSlider;\r\n"]},"metadata":{},"sourceType":"module"}