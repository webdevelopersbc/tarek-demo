{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\EditListingPage\\\\EditListingWizard\\\\EditListingDetailsPanel\\\\EditListingDetailsForm.js\";\nimport React from 'react';\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames'; // Import configs and util modules\n\nimport config from '../../../../config';\nimport { intlShape, injectIntl, FormattedMessage } from '../../../../util/reactIntl';\nimport { propTypes } from '../../../../util/types';\nimport { maxLength, required, composeValidators } from '../../../../util/validators';\nimport { findConfigForSelectFilter } from '../../../../util/search'; // Import shared components\n\nimport { Form, Button, FieldTextInput } from '../../../../components'; // Import modules from this directory\n\nimport CustomFieldEnum from '../CustomFieldEnum';\nimport css from './EditListingDetailsForm.module.css';\nconst TITLE_MAX_LENGTH = 60;\n\nconst EditListingDetailsFormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: formRenderProps => {\n    const {\n      autoFocus,\n      className,\n      disabled,\n      ready,\n      handleSubmit,\n      intl,\n      invalid,\n      pristine,\n      saveActionMsg,\n      updated,\n      updateInProgress,\n      fetchErrors,\n      filterConfig\n    } = formRenderProps;\n    const titleMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.title'\n    });\n    const titlePlaceholderMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.titlePlaceholder'\n    });\n    const titleRequiredMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.titleRequired'\n    });\n    const maxLengthMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.maxLength'\n    }, {\n      maxLength: TITLE_MAX_LENGTH\n    });\n    const descriptionMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.description'\n    });\n    const descriptionPlaceholderMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.descriptionPlaceholder'\n    });\n    const maxLength60Message = maxLength(maxLengthMessage, TITLE_MAX_LENGTH);\n    const descriptionRequiredMessage = intl.formatMessage({\n      id: 'EditListingDetailsForm.descriptionRequired'\n    });\n    const {\n      updateListingError,\n      createListingDraftError,\n      showListingsError\n    } = fetchErrors || {};\n    const errorMessageUpdateListing = updateListingError ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EditListingDetailsForm.updateFailed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })) : null; // This error happens only on first tab (of EditListingWizard)\n\n    const errorMessageCreateListingDraft = createListingDraftError ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EditListingDetailsForm.createListingDraftError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })) : null;\n    const errorMessageShowListing = showListingsError ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EditListingDetailsForm.showListingFailed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })) : null;\n    const classes = classNames(css.root, className);\n    const submitReady = updated && pristine || ready;\n    const submitInProgress = updateInProgress;\n    const submitDisabled = invalid || disabled || submitInProgress;\n    const categoryConfig = findConfigForSelectFilter('category', filterConfig);\n    const categorySchemaType = categoryConfig.schemaType;\n    const categories = categoryConfig.options ? categoryConfig.options : [];\n    const categoryLabel = intl.formatMessage({\n      id: 'EditListingDetailsForm.categoryLabel'\n    });\n    const categoryPlaceholder = intl.formatMessage({\n      id: 'EditListingDetailsForm.categoryPlaceholder'\n    });\n    const categoryRequired = required(intl.formatMessage({\n      id: 'EditListingDetailsForm.categoryRequired'\n    }));\n    const sizeConfig = findConfigForSelectFilter('size', filterConfig);\n    const sizeSchemaType = sizeConfig ? sizeConfig.schemaType : null;\n    const sizes = sizeConfig && sizeConfig.options ? sizeConfig.options : [];\n    const sizeLabel = intl.formatMessage({\n      id: 'EditListingDetailsForm.sizeLabel'\n    });\n    const sizePlaceholder = intl.formatMessage({\n      id: 'EditListingDetailsForm.sizePlaceholder'\n    });\n    const sizeRequired = required(intl.formatMessage({\n      id: 'EditListingDetailsForm.sizeRequired'\n    }));\n    const brandConfig = findConfigForSelectFilter('brand', filterConfig);\n    const brandSchemaType = brandConfig ? brandConfig.schemaType : null;\n    const brands = brandConfig && brandConfig.options ? brandConfig.options : [];\n    const brandLabel = intl.formatMessage({\n      id: 'EditListingDetailsForm.brandLabel'\n    });\n    const brandPlaceholder = intl.formatMessage({\n      id: 'EditListingDetailsForm.brandPlaceholder'\n    });\n    const brandRequired = required(intl.formatMessage({\n      id: 'EditListingDetailsForm.brandRequired'\n    }));\n    return /*#__PURE__*/React.createElement(Form, {\n      className: classes,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, errorMessageCreateListingDraft, errorMessageUpdateListing, errorMessageShowListing, /*#__PURE__*/React.createElement(FieldTextInput, {\n      id: \"title\",\n      name: \"title\",\n      className: css.title,\n      type: \"text\",\n      label: titleMessage,\n      placeholder: titlePlaceholderMessage,\n      maxLength: TITLE_MAX_LENGTH,\n      validate: composeValidators(required(titleRequiredMessage), maxLength60Message),\n      autoFocus: autoFocus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      id: \"description\",\n      name: \"description\",\n      className: css.description,\n      type: \"textarea\",\n      label: descriptionMessage,\n      placeholder: descriptionPlaceholderMessage,\n      validate: composeValidators(required(descriptionRequiredMessage)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomFieldEnum, {\n      id: \"category\",\n      name: \"category\",\n      options: categories,\n      label: categoryLabel,\n      placeholder: categoryPlaceholder,\n      validate: categoryRequired,\n      schemaType: categorySchemaType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomFieldEnum, {\n      id: \"size\",\n      name: \"size\",\n      options: sizes,\n      label: sizeLabel,\n      placeholder: sizePlaceholder,\n      validate: sizeRequired,\n      schemaType: sizeSchemaType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomFieldEnum, {\n      id: \"brand\",\n      name: \"brand\",\n      options: brands,\n      label: brandLabel,\n      placeholder: brandPlaceholder,\n      validate: brandRequired,\n      schemaType: brandSchemaType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: css.submitButton,\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      ready: submitReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, saveActionMsg));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}));\n\n_c = EditListingDetailsFormComponent;\nEditListingDetailsFormComponent.defaultProps = {\n  className: null,\n  fetchErrors: null,\n  filterConfig: config.custom.filters\n};\nEditListingDetailsFormComponent.propTypes = {\n  className: string,\n  intl: intlShape.isRequired,\n  onSubmit: func.isRequired,\n  saveActionMsg: string.isRequired,\n  disabled: bool.isRequired,\n  ready: bool.isRequired,\n  updated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  fetchErrors: shape({\n    createListingDraftError: propTypes.error,\n    showListingsError: propTypes.error,\n    updateListingError: propTypes.error\n  }),\n  filterConfig: propTypes.filterConfig\n};\nexport default compose(injectIntl)(EditListingDetailsFormComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditListingDetailsFormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/EditListingPage/EditListingWizard/EditListingDetailsPanel/EditListingDetailsForm.js"],"names":["React","arrayOf","bool","func","shape","string","compose","Form","FinalForm","classNames","config","intlShape","injectIntl","FormattedMessage","propTypes","maxLength","required","composeValidators","findConfigForSelectFilter","Button","FieldTextInput","CustomFieldEnum","css","TITLE_MAX_LENGTH","EditListingDetailsFormComponent","props","formRenderProps","autoFocus","className","disabled","ready","handleSubmit","intl","invalid","pristine","saveActionMsg","updated","updateInProgress","fetchErrors","filterConfig","titleMessage","formatMessage","id","titlePlaceholderMessage","titleRequiredMessage","maxLengthMessage","descriptionMessage","descriptionPlaceholderMessage","maxLength60Message","descriptionRequiredMessage","updateListingError","createListingDraftError","showListingsError","errorMessageUpdateListing","error","errorMessageCreateListingDraft","errorMessageShowListing","classes","root","submitReady","submitInProgress","submitDisabled","categoryConfig","categorySchemaType","schemaType","categories","options","categoryLabel","categoryPlaceholder","categoryRequired","sizeConfig","sizeSchemaType","sizes","sizeLabel","sizePlaceholder","sizeRequired","brandConfig","brandSchemaType","brands","brandLabel","brandPlaceholder","brandRequired","title","description","submitButton","defaultProps","custom","filters","isRequired","onSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport classNames from 'classnames';\r\n\r\n// Import configs and util modules\r\nimport config from '../../../../config';\r\nimport { intlShape, injectIntl, FormattedMessage } from '../../../../util/reactIntl';\r\nimport { propTypes } from '../../../../util/types';\r\nimport { maxLength, required, composeValidators } from '../../../../util/validators';\r\nimport { findConfigForSelectFilter } from '../../../../util/search';\r\n\r\n// Import shared components\r\nimport { Form, Button, FieldTextInput } from '../../../../components';\r\n// Import modules from this directory\r\nimport CustomFieldEnum from '../CustomFieldEnum';\r\nimport css from './EditListingDetailsForm.module.css';\r\n\r\nconst TITLE_MAX_LENGTH = 60;\r\n\r\nconst EditListingDetailsFormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={formRenderProps => {\r\n      const {\r\n        autoFocus,\r\n        className,\r\n        disabled,\r\n        ready,\r\n        handleSubmit,\r\n        intl,\r\n        invalid,\r\n        pristine,\r\n        saveActionMsg,\r\n        updated,\r\n        updateInProgress,\r\n        fetchErrors,\r\n        filterConfig,\r\n      } = formRenderProps;\r\n\r\n      const titleMessage = intl.formatMessage({ id: 'EditListingDetailsForm.title' });\r\n      const titlePlaceholderMessage = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.titlePlaceholder',\r\n      });\r\n      const titleRequiredMessage = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.titleRequired',\r\n      });\r\n      const maxLengthMessage = intl.formatMessage(\r\n        { id: 'EditListingDetailsForm.maxLength' },\r\n        {\r\n          maxLength: TITLE_MAX_LENGTH,\r\n        }\r\n      );\r\n\r\n      const descriptionMessage = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.description',\r\n      });\r\n      const descriptionPlaceholderMessage = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.descriptionPlaceholder',\r\n      });\r\n      const maxLength60Message = maxLength(maxLengthMessage, TITLE_MAX_LENGTH);\r\n      const descriptionRequiredMessage = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.descriptionRequired',\r\n      });\r\n\r\n      const { updateListingError, createListingDraftError, showListingsError } = fetchErrors || {};\r\n      const errorMessageUpdateListing = updateListingError ? (\r\n        <p className={css.error}>\r\n          <FormattedMessage id=\"EditListingDetailsForm.updateFailed\" />\r\n        </p>\r\n      ) : null;\r\n\r\n      // This error happens only on first tab (of EditListingWizard)\r\n      const errorMessageCreateListingDraft = createListingDraftError ? (\r\n        <p className={css.error}>\r\n          <FormattedMessage id=\"EditListingDetailsForm.createListingDraftError\" />\r\n        </p>\r\n      ) : null;\r\n\r\n      const errorMessageShowListing = showListingsError ? (\r\n        <p className={css.error}>\r\n          <FormattedMessage id=\"EditListingDetailsForm.showListingFailed\" />\r\n        </p>\r\n      ) : null;\r\n\r\n      const classes = classNames(css.root, className);\r\n      const submitReady = (updated && pristine) || ready;\r\n      const submitInProgress = updateInProgress;\r\n      const submitDisabled = invalid || disabled || submitInProgress;\r\n\r\n      const categoryConfig = findConfigForSelectFilter('category', filterConfig);\r\n      const categorySchemaType = categoryConfig.schemaType;\r\n      const categories = categoryConfig.options ? categoryConfig.options : [];\r\n      const categoryLabel = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.categoryLabel',\r\n      });\r\n      const categoryPlaceholder = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.categoryPlaceholder',\r\n      });\r\n\r\n      const categoryRequired = required(\r\n        intl.formatMessage({\r\n          id: 'EditListingDetailsForm.categoryRequired',\r\n        })\r\n      );\r\n\r\n      const sizeConfig = findConfigForSelectFilter('size', filterConfig);\r\n      const sizeSchemaType = sizeConfig ? sizeConfig.schemaType : null;\r\n      const sizes = sizeConfig && sizeConfig.options ? sizeConfig.options : [];\r\n      const sizeLabel = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.sizeLabel',\r\n      });\r\n      const sizePlaceholder = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.sizePlaceholder',\r\n      });\r\n\r\n      const sizeRequired = required(\r\n        intl.formatMessage({\r\n          id: 'EditListingDetailsForm.sizeRequired',\r\n        })\r\n      );\r\n\r\n      const brandConfig = findConfigForSelectFilter('brand', filterConfig);\r\n      const brandSchemaType = brandConfig ? brandConfig.schemaType : null;\r\n      const brands = brandConfig && brandConfig.options ? brandConfig.options : [];\r\n      const brandLabel = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.brandLabel',\r\n      });\r\n      const brandPlaceholder = intl.formatMessage({\r\n        id: 'EditListingDetailsForm.brandPlaceholder',\r\n      });\r\n\r\n      const brandRequired = required(\r\n        intl.formatMessage({\r\n          id: 'EditListingDetailsForm.brandRequired',\r\n        })\r\n      );\r\n\r\n      return (\r\n        <Form className={classes} onSubmit={handleSubmit}>\r\n          {errorMessageCreateListingDraft}\r\n          {errorMessageUpdateListing}\r\n          {errorMessageShowListing}\r\n          <FieldTextInput\r\n            id=\"title\"\r\n            name=\"title\"\r\n            className={css.title}\r\n            type=\"text\"\r\n            label={titleMessage}\r\n            placeholder={titlePlaceholderMessage}\r\n            maxLength={TITLE_MAX_LENGTH}\r\n            validate={composeValidators(required(titleRequiredMessage), maxLength60Message)}\r\n            autoFocus={autoFocus}\r\n          />\r\n          <FieldTextInput\r\n            id=\"description\"\r\n            name=\"description\"\r\n            className={css.description}\r\n            type=\"textarea\"\r\n            label={descriptionMessage}\r\n            placeholder={descriptionPlaceholderMessage}\r\n            validate={composeValidators(required(descriptionRequiredMessage))}\r\n          />\r\n          <CustomFieldEnum\r\n            id=\"category\"\r\n            name=\"category\"\r\n            options={categories}\r\n            label={categoryLabel}\r\n            placeholder={categoryPlaceholder}\r\n            validate={categoryRequired}\r\n            schemaType={categorySchemaType}\r\n          />\r\n\r\n          <CustomFieldEnum\r\n            id=\"size\"\r\n            name=\"size\"\r\n            options={sizes}\r\n            label={sizeLabel}\r\n            placeholder={sizePlaceholder}\r\n            validate={sizeRequired}\r\n            schemaType={sizeSchemaType}\r\n          />\r\n\r\n          <CustomFieldEnum\r\n            id=\"brand\"\r\n            name=\"brand\"\r\n            options={brands}\r\n            label={brandLabel}\r\n            placeholder={brandPlaceholder}\r\n            validate={brandRequired}\r\n            schemaType={brandSchemaType}\r\n          />\r\n\r\n          <Button\r\n            className={css.submitButton}\r\n            type=\"submit\"\r\n            inProgress={submitInProgress}\r\n            disabled={submitDisabled}\r\n            ready={submitReady}\r\n          >\r\n            {saveActionMsg}\r\n          </Button>\r\n        </Form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nEditListingDetailsFormComponent.defaultProps = {\r\n  className: null,\r\n  fetchErrors: null,\r\n  filterConfig: config.custom.filters,\r\n};\r\n\r\nEditListingDetailsFormComponent.propTypes = {\r\n  className: string,\r\n  intl: intlShape.isRequired,\r\n  onSubmit: func.isRequired,\r\n  saveActionMsg: string.isRequired,\r\n  disabled: bool.isRequired,\r\n  ready: bool.isRequired,\r\n  updated: bool.isRequired,\r\n  updateInProgress: bool.isRequired,\r\n  fetchErrors: shape({\r\n    createListingDraftError: propTypes.error,\r\n    showListingsError: propTypes.error,\r\n    updateListingError: propTypes.error,\r\n  }),\r\n  filterConfig: propTypes.filterConfig,\r\n};\r\n\r\nexport default compose(injectIntl)(EditListingDetailsFormComponent);\r\n"]},"metadata":{},"sourceType":"module"}