{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport createReducer from './reducers';\nimport * as analytics from './analytics/analytics';\nimport config from './config';\n/**\r\n * Create a new store with the given initial state. Adds Redux\r\n * middleware and enhancers.\r\n */\n\nexport default function configureStore(initialState = {}, sdk = null, analyticsHandlers = []) {\n  const middlewares = [thunk.withExtraArgument(sdk), analytics.createMiddleware(analyticsHandlers)]; // Enable Redux Devtools in client side dev mode.\n\n  const composeEnhancers = config.dev && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n  const store = createStore(createReducer(), initialState, enhancer);\n  return store;\n}","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","createReducer","analytics","config","configureStore","initialState","sdk","analyticsHandlers","middlewares","withExtraArgument","createMiddleware","composeEnhancers","dev","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2CC,GAAG,GAAG,IAAjD,EAAuDC,iBAAiB,GAAG,EAA3E,EAA+E;AAC5F,QAAMC,WAAW,GAAG,CAACR,KAAK,CAACS,iBAAN,CAAwBH,GAAxB,CAAD,EAA+BJ,SAAS,CAACQ,gBAAV,CAA2BH,iBAA3B,CAA/B,CAApB,CAD4F,CAG5F;;AACA,QAAMI,gBAAgB,GACpBR,MAAM,CAACS,GAAP,IAAc,OAAOC,MAAP,KAAkB,QAAhC,IAA4CA,MAAM,CAACC,oCAAnD,GACID,MAAM,CAACC,oCADX,GAEIf,OAHN;AAKA,QAAMgB,QAAQ,GAAGJ,gBAAgB,CAACb,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CAAjC;AAEA,QAAMQ,KAAK,GAAGnB,WAAW,CAACI,aAAa,EAAd,EAAkBI,YAAlB,EAAgCU,QAAhC,CAAzB;AAEA,SAAOC,KAAP;AACD","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createReducer from './reducers';\r\nimport * as analytics from './analytics/analytics';\r\nimport config from './config';\r\n\r\n/**\r\n * Create a new store with the given initial state. Adds Redux\r\n * middleware and enhancers.\r\n */\r\nexport default function configureStore(initialState = {}, sdk = null, analyticsHandlers = []) {\r\n  const middlewares = [thunk.withExtraArgument(sdk), analytics.createMiddleware(analyticsHandlers)];\r\n\r\n  // Enable Redux Devtools in client side dev mode.\r\n  const composeEnhancers =\r\n    config.dev && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      : compose;\r\n\r\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n  const store = createStore(createReducer(), initialState, enhancer);\r\n\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}