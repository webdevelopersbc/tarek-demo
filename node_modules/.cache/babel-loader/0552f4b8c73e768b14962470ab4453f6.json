{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\LayoutSingleColumn\\\\LayoutSingleColumn.js\";\n\n/**\r\n * LayoutSingleColumn needs to have 2-3 children:\r\n * LayoutWrapperTopbar, LayoutWrapperMain, and possibly LayoutWrapperFooter.\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { LayoutWrapperTopbar, LayoutWrapperMain, LayoutWrapperFooter } from '../../components';\nimport css from './LayoutSingleColumn.module.css';\n\nconst prepareChildren = children => {\n  const childrenCount = React.Children.count(children);\n\n  if (!(childrenCount === 2 || childrenCount === 3)) {\n    throw new Error(`LayoutSingleColumn needs to have 2 - 3 children:\n      LayoutWrapperTopbar, and LayoutWrapperMain,\n      and optionally LayoutWrapperFooter.`);\n  }\n\n  const childrenMap = {};\n  React.Children.forEach(children, child => {\n    if (child.type === LayoutWrapperTopbar) {\n      childrenMap.layoutWrapperTopbar = child;\n    } else if (child.type === LayoutWrapperMain) {\n      // LayoutWrapperMain needs different rootClassName\n      const childWithAddedCSS = /*#__PURE__*/React.cloneElement(child, {\n        rootClassName: css.layoutWrapperMain\n      });\n      childrenMap.layoutWrapperMain = childWithAddedCSS;\n    } else if (child.type === LayoutWrapperFooter) {\n      childrenMap.layoutWrapperFooter = child;\n    } else {\n      throw new Error(`LayoutSingleColumn has an unknown child.\n      Only LayoutWrapperTopbar, LayoutWrapperMain, LayoutWrapperFooter are allowed.`);\n    }\n  });\n  return childrenMap;\n};\n\nconst LayoutSingleColumn = props => {\n  const {\n    className,\n    rootClassName,\n    children\n  } = props;\n  const preparedChildren = prepareChildren(children);\n  const classes = classNames(rootClassName || css.root, className);\n  const maybeFooter = preparedChildren.layoutWrapperFooter || null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, preparedChildren.layoutWrapperTopbar, preparedChildren.layoutWrapperMain, maybeFooter);\n};\n\n_c = LayoutSingleColumn;\nLayoutSingleColumn.defaultProps = {\n  className: null,\n  rootClassName: null\n};\nconst {\n  node,\n  string\n} = PropTypes;\nLayoutSingleColumn.propTypes = {\n  children: node.isRequired,\n  className: string,\n  rootClassName: string\n};\nexport default LayoutSingleColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutSingleColumn\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/LayoutSingleColumn/LayoutSingleColumn.js"],"names":["React","PropTypes","classNames","LayoutWrapperTopbar","LayoutWrapperMain","LayoutWrapperFooter","css","prepareChildren","children","childrenCount","Children","count","Error","childrenMap","forEach","child","type","layoutWrapperTopbar","childWithAddedCSS","cloneElement","rootClassName","layoutWrapperMain","layoutWrapperFooter","LayoutSingleColumn","props","className","preparedChildren","classes","root","maybeFooter","defaultProps","node","string","propTypes","isRequired"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,mBAAjD,QAA4E,kBAA5E;AAEA,OAAOC,GAAP,MAAgB,iCAAhB;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAClC,QAAMC,aAAa,GAAGT,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBH,QAArB,CAAtB;;AACA,MAAI,EAAEC,aAAa,KAAK,CAAlB,IAAuBA,aAAa,KAAK,CAA3C,CAAJ,EAAmD;AACjD,UAAM,IAAIG,KAAJ,CACH;AACP;AACA,0CAHU,CAAN;AAKD;;AAED,QAAMC,WAAW,GAAG,EAApB;AAEAb,EAAAA,KAAK,CAACU,QAAN,CAAeI,OAAf,CAAuBN,QAAvB,EAAiCO,KAAK,IAAI;AACxC,QAAIA,KAAK,CAACC,IAAN,KAAeb,mBAAnB,EAAwC;AACtCU,MAAAA,WAAW,CAACI,mBAAZ,GAAkCF,KAAlC;AACD,KAFD,MAEO,IAAIA,KAAK,CAACC,IAAN,KAAeZ,iBAAnB,EAAsC;AAC3C;AACA,YAAMc,iBAAiB,gBAAGlB,KAAK,CAACmB,YAAN,CAAmBJ,KAAnB,EAA0B;AAClDK,QAAAA,aAAa,EAAEd,GAAG,CAACe;AAD+B,OAA1B,CAA1B;AAGAR,MAAAA,WAAW,CAACQ,iBAAZ,GAAgCH,iBAAhC;AACD,KANM,MAMA,IAAIH,KAAK,CAACC,IAAN,KAAeX,mBAAnB,EAAwC;AAC7CQ,MAAAA,WAAW,CAACS,mBAAZ,GAAkCP,KAAlC;AACD,KAFM,MAEA;AACL,YAAM,IAAIH,KAAJ,CACH;AACT,oFAFY,CAAN;AAID;AACF,GAjBD;AAkBA,SAAOC,WAAP;AACD,CA/BD;;AAiCA,MAAMU,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAM;AAAEC,IAAAA,SAAF;AAAaL,IAAAA,aAAb;AAA4BZ,IAAAA;AAA5B,MAAyCgB,KAA/C;AACA,QAAME,gBAAgB,GAAGnB,eAAe,CAACC,QAAD,CAAxC;AACA,QAAMmB,OAAO,GAAGzB,UAAU,CAACkB,aAAa,IAAId,GAAG,CAACsB,IAAtB,EAA4BH,SAA5B,CAA1B;AACA,QAAMI,WAAW,GAAGH,gBAAgB,CAACJ,mBAAjB,IAAwC,IAA5D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEK,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,gBAAgB,CAACT,mBADpB,EAEGS,gBAAgB,CAACL,iBAFpB,EAGGQ,WAHH,CADF;AAOD,CAbD;;KAAMN,kB;AAeNA,kBAAkB,CAACO,YAAnB,GAAkC;AAChCL,EAAAA,SAAS,EAAE,IADqB;AAEhCL,EAAAA,aAAa,EAAE;AAFiB,CAAlC;AAKA,MAAM;AAAEW,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAmB/B,SAAzB;AAEAsB,kBAAkB,CAACU,SAAnB,GAA+B;AAC7BzB,EAAAA,QAAQ,EAAEuB,IAAI,CAACG,UADc;AAE7BT,EAAAA,SAAS,EAAEO,MAFkB;AAG7BZ,EAAAA,aAAa,EAAEY;AAHc,CAA/B;AAMA,eAAeT,kBAAf","sourcesContent":["/**\r\n * LayoutSingleColumn needs to have 2-3 children:\r\n * LayoutWrapperTopbar, LayoutWrapperMain, and possibly LayoutWrapperFooter.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { LayoutWrapperTopbar, LayoutWrapperMain, LayoutWrapperFooter } from '../../components';\r\n\r\nimport css from './LayoutSingleColumn.module.css';\r\n\r\nconst prepareChildren = children => {\r\n  const childrenCount = React.Children.count(children);\r\n  if (!(childrenCount === 2 || childrenCount === 3)) {\r\n    throw new Error(\r\n      `LayoutSingleColumn needs to have 2 - 3 children:\r\n      LayoutWrapperTopbar, and LayoutWrapperMain,\r\n      and optionally LayoutWrapperFooter.`\r\n    );\r\n  }\r\n\r\n  const childrenMap = {};\r\n\r\n  React.Children.forEach(children, child => {\r\n    if (child.type === LayoutWrapperTopbar) {\r\n      childrenMap.layoutWrapperTopbar = child;\r\n    } else if (child.type === LayoutWrapperMain) {\r\n      // LayoutWrapperMain needs different rootClassName\r\n      const childWithAddedCSS = React.cloneElement(child, {\r\n        rootClassName: css.layoutWrapperMain,\r\n      });\r\n      childrenMap.layoutWrapperMain = childWithAddedCSS;\r\n    } else if (child.type === LayoutWrapperFooter) {\r\n      childrenMap.layoutWrapperFooter = child;\r\n    } else {\r\n      throw new Error(\r\n        `LayoutSingleColumn has an unknown child.\r\n      Only LayoutWrapperTopbar, LayoutWrapperMain, LayoutWrapperFooter are allowed.`\r\n      );\r\n    }\r\n  });\r\n  return childrenMap;\r\n};\r\n\r\nconst LayoutSingleColumn = props => {\r\n  const { className, rootClassName, children } = props;\r\n  const preparedChildren = prepareChildren(children);\r\n  const classes = classNames(rootClassName || css.root, className);\r\n  const maybeFooter = preparedChildren.layoutWrapperFooter || null;\r\n\r\n  return (\r\n    <div className={classes}>\r\n      {preparedChildren.layoutWrapperTopbar}\r\n      {preparedChildren.layoutWrapperMain}\r\n      {maybeFooter}\r\n    </div>\r\n  );\r\n};\r\n\r\nLayoutSingleColumn.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nconst { node, string } = PropTypes;\r\n\r\nLayoutSingleColumn.propTypes = {\r\n  children: node.isRequired,\r\n  className: string,\r\n  rootClassName: string,\r\n};\r\n\r\nexport default LayoutSingleColumn;\r\n"]},"metadata":{},"sourceType":"module"}