{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldBoolean\\\\FieldBoolean.example.js\";\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldBoolean from './FieldBoolean';\nconst formName = 'Styleguide.FieldBoolean.Form';\n\nconst FormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  formId: formName,\n  render: fieldRenderProps => {\n    const {\n      form,\n      handleSubmit,\n      onChange,\n      invalid,\n      pristine,\n      submitting\n    } = props;\n    const required = validators.requiredBoolean('This field is required');\n    const submitDisabled = invalid || pristine || submitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSpy, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldBoolean, {\n      id: `${form}.boolOption`,\n      name: \"boolOption\",\n      label: \"Boolean option\",\n      placeholder: \"Choose yes/no\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: 24\n      },\n      type: \"submit\",\n      disabled: submitDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}));\n\n_c = FormComponent;\nexport const YesNo = {\n  component: FormComponent,\n  props: {\n    onChange: formState => {\n      if (Object.keys(formState.values).length > 0) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n\n    onSubmit(values) {\n      console.log('onSubmit:', values);\n    }\n\n  },\n  group: 'inputs'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldBoolean/FieldBoolean.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","Button","FieldBoolean","formName","FormComponent","props","fieldRenderProps","form","handleSubmit","onChange","invalid","pristine","submitting","required","requiredBoolean","submitDisabled","e","preventDefault","marginTop","YesNo","component","formState","Object","keys","values","length","console","log","onSubmit","group"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,QAAQ,GAAG,8BAAjB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,iBACzB,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,MAAM,EAAEF,QAFV;AAGE,EAAA,MAAM,EAAEG,gBAAgB,IAAI;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,YAAR;AAAsBC,MAAAA,QAAtB;AAAgCC,MAAAA,OAAhC;AAAyCC,MAAAA,QAAzC;AAAmDC,MAAAA;AAAnD,QAAkEP,KAAxE;AACA,UAAMQ,QAAQ,GAAGb,UAAU,CAACc,eAAX,CAA2B,wBAA3B,CAAjB;AACA,UAAMC,cAAc,GAAGL,OAAO,IAAIC,QAAX,IAAuBC,UAA9C;AACA,wBACE;AACE,MAAA,QAAQ,EAAEI,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAT,QAAAA,YAAY,CAACQ,CAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEP,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,YAAD;AACE,MAAA,EAAE,EAAG,GAAEF,IAAK,aADd;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAC,gBAHR;AAIE,MAAA,WAAW,EAAC,eAJd;AAKE,MAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAcE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAEH,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,CADF;AAoBD,GA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;KAAMX,a;AAgCN,OAAO,MAAMe,KAAK,GAAG;AACnBC,EAAAA,SAAS,EAAEhB,aADQ;AAEnBC,EAAAA,KAAK,EAAE;AACLI,IAAAA,QAAQ,EAAEY,SAAS,IAAI;AACrB,UAAIC,MAAM,CAACC,IAAP,CAAYF,SAAS,CAACG,MAAtB,EAA8BC,MAA9B,GAAuC,CAA3C,EAA8C;AAC5CC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,SAAS,CAACG,MAAjD;AACD;AACF,KALI;;AAMLI,IAAAA,QAAQ,CAACJ,MAAD,EAAS;AACfE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAzB;AACD;;AARI,GAFY;AAYnBK,EAAAA,KAAK,EAAE;AAZY,CAAd","sourcesContent":["import React from 'react';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport * as validators from '../../util/validators';\r\nimport { Button } from '../../components';\r\nimport FieldBoolean from './FieldBoolean';\r\n\r\nconst formName = 'Styleguide.FieldBoolean.Form';\r\n\r\nconst FormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    formId={formName}\r\n    render={fieldRenderProps => {\r\n      const { form, handleSubmit, onChange, invalid, pristine, submitting } = props;\r\n      const required = validators.requiredBoolean('This field is required');\r\n      const submitDisabled = invalid || pristine || submitting;\r\n      return (\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormSpy onChange={onChange} />\r\n          <FieldBoolean\r\n            id={`${form}.boolOption`}\r\n            name=\"boolOption\"\r\n            label=\"Boolean option\"\r\n            placeholder=\"Choose yes/no\"\r\n            validate={required}\r\n          />\r\n          <Button style={{ marginTop: 24 }} type=\"submit\" disabled={submitDisabled}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport const YesNo = {\r\n  component: FormComponent,\r\n  props: {\r\n    onChange: formState => {\r\n      if (Object.keys(formState.values).length > 0) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit(values) {\r\n      console.log('onSubmit:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}