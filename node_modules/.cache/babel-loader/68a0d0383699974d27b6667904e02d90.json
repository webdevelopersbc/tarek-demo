{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\SearchPage\\\\FilterPlain\\\\FilterPlain.js\";\nimport React, { Component } from 'react';\nimport { bool, func, node, object, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\nimport IconPlus from '../IconPlus/IconPlus';\nimport FilterForm from '../FilterForm/FilterForm';\nimport css from './FilterPlain.module.css';\n\nclass FilterPlainComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.toggleIsOpen = this.toggleIsOpen.bind(this);\n  }\n\n  handleChange(values) {\n    const {\n      onSubmit\n    } = this.props;\n    onSubmit(values);\n  }\n\n  handleClear() {\n    const {\n      onSubmit,\n      onClear\n    } = this.props;\n\n    if (onClear) {\n      onClear();\n    }\n\n    onSubmit(null);\n  }\n\n  toggleIsOpen() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      plainClassName,\n      id,\n      label,\n      labelSelection,\n      labelSelectionSeparator,\n      isSelected,\n      children,\n      initialValues,\n      keepDirtyOnReinitialize,\n      contentPlacementOffset\n    } = this.props;\n    const classes = classNames(rootClassName || css.root, className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.filterHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: css.labelButton,\n      onClick: this.toggleIsOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: css.labelButtonContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: css.labelWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: css.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, label, labelSelection && labelSelectionSeparator ? labelSelectionSeparator : null, labelSelection ? /*#__PURE__*/React.createElement(\"span\", {\n      className: css.labelSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, labelSelection) : null)), /*#__PURE__*/React.createElement(\"span\", {\n      className: css.openSign,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconPlus, {\n      isOpen: this.state.isOpen,\n      isSelected: isSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: classNames(plainClassName, css.plain, {\n        [css.isOpen]: this.state.isOpen\n      }),\n      ref: node => {\n        this.filterContent = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilterForm, {\n      id: `${id}.form`,\n      liveEdit: true,\n      contentPlacementOffset: contentPlacementOffset,\n      onChange: this.handleChange,\n      initialValues: initialValues,\n      keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, children), /*#__PURE__*/React.createElement(\"button\", {\n      className: css.clearButton,\n      onClick: this.handleClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'FilterPlain.clear',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nFilterPlainComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  plainClassName: null,\n  initialValues: null,\n  keepDirtyOnReinitialize: false,\n  labelSelection: null,\n  labelSelectionSeparator: null\n};\nFilterPlainComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  plainClassName: string,\n  id: string.isRequired,\n  onSubmit: func.isRequired,\n  label: node.isRequired,\n  labelSelection: node,\n  labelSelectionSeparator: node,\n  isSelected: bool.isRequired,\n  children: node.isRequired,\n  initialValues: object,\n  keepDirtyOnReinitialize: bool,\n  // form injectIntl\n  intl: intlShape.isRequired\n};\nconst FilterPlain = injectIntl(FilterPlainComponent);\n_c = FilterPlain;\nexport default FilterPlain;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPlain\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/SearchPage/FilterPlain/FilterPlain.js"],"names":["React","Component","bool","func","node","object","string","classNames","FormattedMessage","injectIntl","intlShape","IconPlus","FilterForm","css","FilterPlainComponent","constructor","props","state","isOpen","handleChange","bind","handleClear","toggleIsOpen","values","onSubmit","onClear","setState","prevState","render","rootClassName","className","plainClassName","id","label","labelSelection","labelSelectionSeparator","isSelected","children","initialValues","keepDirtyOnReinitialize","contentPlacementOffset","classes","root","filterHeader","labelButton","labelButtonContent","labelWrapper","labelSelected","openSign","plain","filterContent","clearButton","defaultProps","propTypes","isRequired","intl","FilterPlain"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAiD,YAAjD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAwD,yBAAxD;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,MAAMC,oBAAN,SAAmCb,SAAnC,CAA6C;AAC3Cc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACI,MAAD,EAAS;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKR,KAA1B;AACAQ,IAAAA,QAAQ,CAACD,MAAD,CAAR;AACD;;AAEDF,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEG,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAwB,KAAKT,KAAnC;;AAEA,QAAIS,OAAJ,EAAa;AACXA,MAAAA,OAAO;AACR;;AAEDD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAEDF,EAAAA,YAAY,GAAG;AACb,SAAKI,QAAL,CAAcC,SAAS,KAAK;AAAET,MAAAA,MAAM,EAAE,CAACS,SAAS,CAACT;AAArB,KAAL,CAAvB;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,aADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,cAHI;AAIJC,MAAAA,EAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA,cANI;AAOJC,MAAAA,uBAPI;AAQJC,MAAAA,UARI;AASJC,MAAAA,QATI;AAUJC,MAAAA,aAVI;AAWJC,MAAAA,uBAXI;AAYJC,MAAAA;AAZI,QAaF,KAAKxB,KAbT;AAcA,UAAMyB,OAAO,GAAGlC,UAAU,CAACsB,aAAa,IAAIhB,GAAG,CAAC6B,IAAtB,EAA4BZ,SAA5B,CAA1B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEW,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE5B,GAAG,CAAC8B,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAE9B,GAAG,CAAC+B,WAAvB;AAAoC,MAAA,OAAO,EAAE,KAAKtB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAET,GAAG,CAACgC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAEhC,GAAG,CAACiC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAEjC,GAAG,CAACoB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KADH,EAEGC,cAAc,IAAIC,uBAAlB,GAA4CA,uBAA5C,GAAsE,IAFzE,EAGGD,cAAc,gBACb;AAAM,MAAA,SAAS,EAAErB,GAAG,CAACkC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCb,cAArC,CADa,GAEX,IALN,CADF,CADF,eAUE;AAAM,MAAA,SAAS,EAAErB,GAAG,CAACmC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWC,MAA7B;AAAqC,MAAA,UAAU,EAAEkB,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF,CADF,CADF,eAmBE;AACE,MAAA,EAAE,EAAEJ,EADN;AAEE,MAAA,SAAS,EAAEzB,UAAU,CAACwB,cAAD,EAAiBlB,GAAG,CAACoC,KAArB,EAA4B;AAAE,SAACpC,GAAG,CAACK,MAAL,GAAc,KAAKD,KAAL,CAAWC;AAA3B,OAA5B,CAFvB;AAGE,MAAA,GAAG,EAAEd,IAAI,IAAI;AACX,aAAK8C,aAAL,GAAqB9C,IAArB;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,UAAD;AACE,MAAA,EAAE,EAAG,GAAE4B,EAAG,OADZ;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,sBAAsB,EAAEQ,sBAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKrB,YAJjB;AAKE,MAAA,aAAa,EAAEmB,aALjB;AAME,MAAA,uBAAuB,EAAEC,uBAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGF,QARH,CAPF,eAiBE;AAAQ,MAAA,SAAS,EAAExB,GAAG,CAACsC,WAAvB;AAAoC,MAAA,OAAO,EAAE,KAAK9B,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAE,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBF,CAnBF,CADF;AA2CD;;AAzF0C;;AA4F7CP,oBAAoB,CAACsC,YAArB,GAAoC;AAClCvB,EAAAA,aAAa,EAAE,IADmB;AAElCC,EAAAA,SAAS,EAAE,IAFuB;AAGlCC,EAAAA,cAAc,EAAE,IAHkB;AAIlCO,EAAAA,aAAa,EAAE,IAJmB;AAKlCC,EAAAA,uBAAuB,EAAE,KALS;AAMlCL,EAAAA,cAAc,EAAE,IANkB;AAOlCC,EAAAA,uBAAuB,EAAE;AAPS,CAApC;AAUArB,oBAAoB,CAACuC,SAArB,GAAiC;AAC/BxB,EAAAA,aAAa,EAAEvB,MADgB;AAE/BwB,EAAAA,SAAS,EAAExB,MAFoB;AAG/ByB,EAAAA,cAAc,EAAEzB,MAHe;AAI/B0B,EAAAA,EAAE,EAAE1B,MAAM,CAACgD,UAJoB;AAK/B9B,EAAAA,QAAQ,EAAErB,IAAI,CAACmD,UALgB;AAM/BrB,EAAAA,KAAK,EAAE7B,IAAI,CAACkD,UANmB;AAO/BpB,EAAAA,cAAc,EAAE9B,IAPe;AAQ/B+B,EAAAA,uBAAuB,EAAE/B,IARM;AAS/BgC,EAAAA,UAAU,EAAElC,IAAI,CAACoD,UATc;AAU/BjB,EAAAA,QAAQ,EAAEjC,IAAI,CAACkD,UAVgB;AAW/BhB,EAAAA,aAAa,EAAEjC,MAXgB;AAY/BkC,EAAAA,uBAAuB,EAAErC,IAZM;AAc/B;AACAqD,EAAAA,IAAI,EAAE7C,SAAS,CAAC4C;AAfe,CAAjC;AAkBA,MAAME,WAAW,GAAG/C,UAAU,CAACK,oBAAD,CAA9B;KAAM0C,W;AAEN,eAAeA,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { bool, func, node, object, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\n\r\nimport IconPlus from '../IconPlus/IconPlus';\r\nimport FilterForm from '../FilterForm/FilterForm';\r\n\r\nimport css from './FilterPlain.module.css';\r\n\r\nclass FilterPlainComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOpen: true };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleIsOpen = this.toggleIsOpen.bind(this);\r\n  }\r\n\r\n  handleChange(values) {\r\n    const { onSubmit } = this.props;\r\n    onSubmit(values);\r\n  }\r\n\r\n  handleClear() {\r\n    const { onSubmit, onClear } = this.props;\r\n\r\n    if (onClear) {\r\n      onClear();\r\n    }\r\n\r\n    onSubmit(null);\r\n  }\r\n\r\n  toggleIsOpen() {\r\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      rootClassName,\r\n      className,\r\n      plainClassName,\r\n      id,\r\n      label,\r\n      labelSelection,\r\n      labelSelectionSeparator,\r\n      isSelected,\r\n      children,\r\n      initialValues,\r\n      keepDirtyOnReinitialize,\r\n      contentPlacementOffset,\r\n    } = this.props;\r\n    const classes = classNames(rootClassName || css.root, className);\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className={css.filterHeader}>\r\n          <button className={css.labelButton} onClick={this.toggleIsOpen}>\r\n            <span className={css.labelButtonContent}>\r\n              <span className={css.labelWrapper}>\r\n                <span className={css.label}>\r\n                  {label}\r\n                  {labelSelection && labelSelectionSeparator ? labelSelectionSeparator : null}\r\n                  {labelSelection ? (\r\n                    <span className={css.labelSelected}>{labelSelection}</span>\r\n                  ) : null}\r\n                </span>\r\n              </span>\r\n              <span className={css.openSign}>\r\n                <IconPlus isOpen={this.state.isOpen} isSelected={isSelected} />\r\n              </span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div\r\n          id={id}\r\n          className={classNames(plainClassName, css.plain, { [css.isOpen]: this.state.isOpen })}\r\n          ref={node => {\r\n            this.filterContent = node;\r\n          }}\r\n        >\r\n          <FilterForm\r\n            id={`${id}.form`}\r\n            liveEdit\r\n            contentPlacementOffset={contentPlacementOffset}\r\n            onChange={this.handleChange}\r\n            initialValues={initialValues}\r\n            keepDirtyOnReinitialize={keepDirtyOnReinitialize}\r\n          >\r\n            {children}\r\n          </FilterForm>\r\n          <button className={css.clearButton} onClick={this.handleClear}>\r\n            <FormattedMessage id={'FilterPlain.clear'} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilterPlainComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  plainClassName: null,\r\n  initialValues: null,\r\n  keepDirtyOnReinitialize: false,\r\n  labelSelection: null,\r\n  labelSelectionSeparator: null,\r\n};\r\n\r\nFilterPlainComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  plainClassName: string,\r\n  id: string.isRequired,\r\n  onSubmit: func.isRequired,\r\n  label: node.isRequired,\r\n  labelSelection: node,\r\n  labelSelectionSeparator: node,\r\n  isSelected: bool.isRequired,\r\n  children: node.isRequired,\r\n  initialValues: object,\r\n  keepDirtyOnReinitialize: bool,\r\n\r\n  // form injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst FilterPlain = injectIntl(FilterPlainComponent);\r\n\r\nexport default FilterPlain;\r\n"]},"metadata":{},"sourceType":"module"}