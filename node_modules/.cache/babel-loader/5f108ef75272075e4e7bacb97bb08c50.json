{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldReviewRating\\\\FieldReviewRating.example.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldReviewRating from './FieldReviewRating';\nconst formName = 'Styleguide.FieldReviewRating.Form';\n\nconst FormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  formId: formName,\n  render: fieldRenderProps => {\n    const {\n      formId,\n      handleSubmit,\n      onChange,\n      invalid,\n      pristine,\n      submitting\n    } = fieldRenderProps;\n    const required = validators.required('This field is required');\n    const submitDisabled = invalid || pristine || submitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSpy, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldReviewRating, {\n      id: `${formId}.rate1`,\n      name: \"rating\",\n      label: \"Rate your experience\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: 24\n      },\n      type: \"submit\",\n      disabled: submitDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}));\n\n_c = FormComponent;\nexport const StarRating = {\n  component: FormComponent,\n  props: {\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('submit values:', values);\n    }\n  },\n  group: 'inputs'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldReviewRating/FieldReviewRating.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","Button","FieldReviewRating","formName","FormComponent","props","fieldRenderProps","formId","handleSubmit","onChange","invalid","pristine","submitting","required","submitDisabled","e","preventDefault","marginTop","StarRating","component","formState","dirty","console","log","values","onSubmit","group"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,MAAMC,QAAQ,GAAG,mCAAjB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,iBACzB,oBAAC,SAAD,oBACMA,KADN;AAEE,EAAA,MAAM,EAAEF,QAFV;AAGE,EAAA,MAAM,EAAEG,gBAAgB,IAAI;AAC1B,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,YAAV;AAAwBC,MAAAA,QAAxB;AAAkCC,MAAAA,OAAlC;AAA2CC,MAAAA,QAA3C;AAAqDC,MAAAA;AAArD,QAAoEN,gBAA1E;AACA,UAAMO,QAAQ,GAAGb,UAAU,CAACa,QAAX,CAAoB,wBAApB,CAAjB;AACA,UAAMC,cAAc,GAAGJ,OAAO,IAAIC,QAAX,IAAuBC,UAA9C;AAEA,wBACE;AACE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAR,QAAAA,YAAY,CAACO,CAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEN,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,iBAAD;AACE,MAAA,EAAE,EAAG,GAAEF,MAAO,QADhB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,sBAHR;AAIE,MAAA,QAAQ,EAAEM,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAaE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAEH,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CADF;AAmBD,GA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;KAAMV,a;AAgCN,OAAO,MAAMc,UAAU,GAAG;AACxBC,EAAAA,SAAS,EAAEf,aADa;AAExBC,EAAAA,KAAK,EAAE;AACLI,IAAAA,QAAQ,EAAEW,SAAS,IAAI;AACrB,UAAIA,SAAS,CAACC,KAAd,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,SAAS,CAACI,MAAjD;AACD;AACF,KALI;AAMLC,IAAAA,QAAQ,EAAED,MAAM,IAAI;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,MAA9B;AACD;AARI,GAFiB;AAYxBE,EAAAA,KAAK,EAAE;AAZiB,CAAnB","sourcesContent":["/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport * as validators from '../../util/validators';\r\nimport { Button } from '../../components';\r\nimport FieldReviewRating from './FieldReviewRating';\r\n\r\nconst formName = 'Styleguide.FieldReviewRating.Form';\r\n\r\nconst FormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    formId={formName}\r\n    render={fieldRenderProps => {\r\n      const { formId, handleSubmit, onChange, invalid, pristine, submitting } = fieldRenderProps;\r\n      const required = validators.required('This field is required');\r\n      const submitDisabled = invalid || pristine || submitting;\r\n\r\n      return (\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormSpy onChange={onChange} />\r\n          <FieldReviewRating\r\n            id={`${formId}.rate1`}\r\n            name=\"rating\"\r\n            label=\"Rate your experience\"\r\n            validate={required}\r\n          />\r\n          <Button style={{ marginTop: 24 }} type=\"submit\" disabled={submitDisabled}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport const StarRating = {\r\n  component: FormComponent,\r\n  props: {\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('submit values:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}