{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnicodeExtensionValue = void 0;\n\nvar utils_1 = require(\"./utils\");\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\n\n\nfunction UnicodeExtensionValue(extension, key) {\n  utils_1.invariant(key.length === 2, 'key must have 2 elements');\n  var size = extension.length;\n  var searchValue = \"-\" + key + \"-\";\n  var pos = extension.indexOf(searchValue);\n\n  if (pos !== -1) {\n    var start = pos + 4;\n    var end = start;\n    var k = start;\n    var done = false;\n\n    while (!done) {\n      var e = extension.indexOf('-', k);\n      var len = void 0;\n\n      if (e === -1) {\n        len = size - k;\n      } else {\n        len = e - k;\n      }\n\n      if (len === 2) {\n        done = true;\n      } else if (e === -1) {\n        end = size;\n        done = true;\n      } else {\n        end = e;\n        k = e + 1;\n      }\n    }\n\n    return extension.slice(start, end);\n  }\n\n  searchValue = \"-\" + key;\n  pos = extension.indexOf(searchValue);\n\n  if (pos !== -1 && pos + 3 === size) {\n    return '';\n  }\n\n  return undefined;\n}\n\nexports.UnicodeExtensionValue = UnicodeExtensionValue;","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/node_modules/@formatjs/intl-localematcher/abstract/UnicodeExtensionValue.js"],"names":["Object","defineProperty","exports","value","UnicodeExtensionValue","utils_1","require","extension","key","invariant","length","size","searchValue","pos","indexOf","start","end","k","done","e","len","slice","undefined"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,qBAAT,CAA+BG,SAA/B,EAA0CC,GAA1C,EAA+C;AAC3CH,EAAAA,OAAO,CAACI,SAAR,CAAkBD,GAAG,CAACE,MAAJ,KAAe,CAAjC,EAAoC,0BAApC;AACA,MAAIC,IAAI,GAAGJ,SAAS,CAACG,MAArB;AACA,MAAIE,WAAW,GAAG,MAAMJ,GAAN,GAAY,GAA9B;AACA,MAAIK,GAAG,GAAGN,SAAS,CAACO,OAAV,CAAkBF,WAAlB,CAAV;;AACA,MAAIC,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZ,QAAIE,KAAK,GAAGF,GAAG,GAAG,CAAlB;AACA,QAAIG,GAAG,GAAGD,KAAV;AACA,QAAIE,CAAC,GAAGF,KAAR;AACA,QAAIG,IAAI,GAAG,KAAX;;AACA,WAAO,CAACA,IAAR,EAAc;AACV,UAAIC,CAAC,GAAGZ,SAAS,CAACO,OAAV,CAAkB,GAAlB,EAAuBG,CAAvB,CAAR;AACA,UAAIG,GAAG,GAAG,KAAK,CAAf;;AACA,UAAID,CAAC,KAAK,CAAC,CAAX,EAAc;AACVC,QAAAA,GAAG,GAAGT,IAAI,GAAGM,CAAb;AACH,OAFD,MAGK;AACDG,QAAAA,GAAG,GAAGD,CAAC,GAAGF,CAAV;AACH;;AACD,UAAIG,GAAG,KAAK,CAAZ,EAAe;AACXF,QAAAA,IAAI,GAAG,IAAP;AACH,OAFD,MAGK,IAAIC,CAAC,KAAK,CAAC,CAAX,EAAc;AACfH,QAAAA,GAAG,GAAGL,IAAN;AACAO,QAAAA,IAAI,GAAG,IAAP;AACH,OAHI,MAIA;AACDF,QAAAA,GAAG,GAAGG,CAAN;AACAF,QAAAA,CAAC,GAAGE,CAAC,GAAG,CAAR;AACH;AACJ;;AACD,WAAOZ,SAAS,CAACc,KAAV,CAAgBN,KAAhB,EAAuBC,GAAvB,CAAP;AACH;;AACDJ,EAAAA,WAAW,GAAG,MAAMJ,GAApB;AACAK,EAAAA,GAAG,GAAGN,SAAS,CAACO,OAAV,CAAkBF,WAAlB,CAAN;;AACA,MAAIC,GAAG,KAAK,CAAC,CAAT,IAAcA,GAAG,GAAG,CAAN,KAAYF,IAA9B,EAAoC;AAChC,WAAO,EAAP;AACH;;AACD,SAAOW,SAAP;AACH;;AACDpB,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnicodeExtensionValue = void 0;\nvar utils_1 = require(\"./utils\");\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\nfunction UnicodeExtensionValue(extension, key) {\n    utils_1.invariant(key.length === 2, 'key must have 2 elements');\n    var size = extension.length;\n    var searchValue = \"-\" + key + \"-\";\n    var pos = extension.indexOf(searchValue);\n    if (pos !== -1) {\n        var start = pos + 4;\n        var end = start;\n        var k = start;\n        var done = false;\n        while (!done) {\n            var e = extension.indexOf('-', k);\n            var len = void 0;\n            if (e === -1) {\n                len = size - k;\n            }\n            else {\n                len = e - k;\n            }\n            if (len === 2) {\n                done = true;\n            }\n            else if (e === -1) {\n                end = size;\n                done = true;\n            }\n            else {\n                end = e;\n                k = e + 1;\n            }\n        }\n        return extension.slice(start, end);\n    }\n    searchValue = \"-\" + key;\n    pos = extension.indexOf(searchValue);\n    if (pos !== -1 && pos + 3 === size) {\n        return '';\n    }\n    return undefined;\n}\nexports.UnicodeExtensionValue = UnicodeExtensionValue;\n"]},"metadata":{},"sourceType":"script"}