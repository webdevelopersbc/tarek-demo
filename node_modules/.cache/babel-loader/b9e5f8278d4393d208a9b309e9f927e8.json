{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\TransactionPage\\\\ReviewModal\\\\ReviewModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage, intlShape, injectIntl } from '../../../util/reactIntl';\nimport { propTypes } from '../../../util/types';\nimport { IconReviewUser, Modal } from '../../../components';\nimport ReviewForm from '../ReviewForm/ReviewForm';\nimport css from './ReviewModal.module.css';\n\nconst ReviewModal = props => {\n  const {\n    className,\n    rootClassName,\n    id,\n    intl,\n    isOpen,\n    onCloseModal,\n    onManageDisableScrolling,\n    onSubmitReview,\n    revieweeName,\n    reviewSent,\n    sendReviewInProgress,\n    sendReviewError\n  } = props;\n  const classes = classNames(rootClassName || css.root, className);\n  const closeButtonMessage = intl.formatMessage({\n    id: 'ReviewModal.later'\n  });\n  const reviewee = /*#__PURE__*/React.createElement(\"span\", {\n    className: css.reviewee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }, revieweeName);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    containerClassName: classes,\n    contentClassName: css.modalContent,\n    isOpen: isOpen,\n    onClose: onCloseModal,\n    onManageDisableScrolling: onManageDisableScrolling,\n    usePortal: true,\n    closeButtonMessage: closeButtonMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconReviewUser, {\n    className: css.modalIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.modalTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ReviewModal.title\",\n    values: {\n      revieweeName: reviewee\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.modalMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ReviewModal.description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ReviewForm, {\n    onSubmit: onSubmitReview,\n    reviewSent: reviewSent,\n    sendReviewInProgress: sendReviewInProgress,\n    sendReviewError: sendReviewError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = ReviewModal;\nconst {\n  bool,\n  string\n} = PropTypes;\nReviewModal.defaultProps = {\n  className: null,\n  rootClassName: null,\n  reviewSent: false,\n  sendReviewInProgress: false,\n  sendReviewError: null\n};\nReviewModal.propTypes = {\n  className: string,\n  rootClassName: string,\n  intl: intlShape.isRequired,\n  reviewSent: bool,\n  sendReviewInProgress: bool,\n  sendReviewError: propTypes.error\n};\nexport default _c2 = injectIntl(ReviewModal);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReviewModal\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/TransactionPage/ReviewModal/ReviewModal.js"],"names":["React","PropTypes","classNames","FormattedMessage","intlShape","injectIntl","propTypes","IconReviewUser","Modal","ReviewForm","css","ReviewModal","props","className","rootClassName","id","intl","isOpen","onCloseModal","onManageDisableScrolling","onSubmitReview","revieweeName","reviewSent","sendReviewInProgress","sendReviewError","classes","root","closeButtonMessage","formatMessage","reviewee","modalContent","modalIcon","modalTitle","modalMessage","bool","string","defaultProps","isRequired","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,gBAAT,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,yBAAxD;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,qBAAtC;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,wBAPI;AAQJC,IAAAA,cARI;AASJC,IAAAA,YATI;AAUJC,IAAAA,UAVI;AAWJC,IAAAA,oBAXI;AAYJC,IAAAA;AAZI,MAaFZ,KAbJ;AAeA,QAAMa,OAAO,GAAGvB,UAAU,CAACY,aAAa,IAAIJ,GAAG,CAACgB,IAAtB,EAA4Bb,SAA5B,CAA1B;AACA,QAAMc,kBAAkB,GAAGX,IAAI,CAACY,aAAL,CAAmB;AAAEb,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAA3B;AACA,QAAMc,QAAQ,gBAAG;AAAM,IAAA,SAAS,EAAEnB,GAAG,CAACmB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCR,YAAhC,CAAjB;AAEA,sBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAEN,EADN;AAEE,IAAA,kBAAkB,EAAEU,OAFtB;AAGE,IAAA,gBAAgB,EAAEf,GAAG,CAACoB,YAHxB;AAIE,IAAA,MAAM,EAAEb,MAJV;AAKE,IAAA,OAAO,EAAEC,YALX;AAME,IAAA,wBAAwB,EAAEC,wBAN5B;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,kBAAkB,EAAEQ,kBARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEjB,GAAG,CAACqB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAG,IAAA,SAAS,EAAErB,GAAG,CAACsB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,mBAArB;AAAyC,IAAA,MAAM,EAAE;AAAEX,MAAAA,YAAY,EAAEQ;AAAhB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,eAcE;AAAG,IAAA,SAAS,EAAEnB,GAAG,CAACuB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,eAiBE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEb,cADZ;AAEE,IAAA,UAAU,EAAEE,UAFd;AAGE,IAAA,oBAAoB,EAAEC,oBAHxB;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AA0BD,CA9CD;;KAAMb,W;AAgDN,MAAM;AAAEuB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAmBlC,SAAzB;AAEAU,WAAW,CAACyB,YAAZ,GAA2B;AACzBvB,EAAAA,SAAS,EAAE,IADc;AAEzBC,EAAAA,aAAa,EAAE,IAFU;AAGzBQ,EAAAA,UAAU,EAAE,KAHa;AAIzBC,EAAAA,oBAAoB,EAAE,KAJG;AAKzBC,EAAAA,eAAe,EAAE;AALQ,CAA3B;AAQAb,WAAW,CAACL,SAAZ,GAAwB;AACtBO,EAAAA,SAAS,EAAEsB,MADW;AAEtBrB,EAAAA,aAAa,EAAEqB,MAFO;AAGtBnB,EAAAA,IAAI,EAAEZ,SAAS,CAACiC,UAHM;AAItBf,EAAAA,UAAU,EAAEY,IAJU;AAKtBX,EAAAA,oBAAoB,EAAEW,IALA;AAMtBV,EAAAA,eAAe,EAAElB,SAAS,CAACgC;AANL,CAAxB;AASA,qBAAejC,UAAU,CAACM,WAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, intlShape, injectIntl } from '../../../util/reactIntl';\r\nimport { propTypes } from '../../../util/types';\r\nimport { IconReviewUser, Modal } from '../../../components';\r\n\r\nimport ReviewForm from '../ReviewForm/ReviewForm';\r\n\r\nimport css from './ReviewModal.module.css';\r\n\r\nconst ReviewModal = props => {\r\n  const {\r\n    className,\r\n    rootClassName,\r\n    id,\r\n    intl,\r\n    isOpen,\r\n    onCloseModal,\r\n    onManageDisableScrolling,\r\n    onSubmitReview,\r\n    revieweeName,\r\n    reviewSent,\r\n    sendReviewInProgress,\r\n    sendReviewError,\r\n  } = props;\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n  const closeButtonMessage = intl.formatMessage({ id: 'ReviewModal.later' });\r\n  const reviewee = <span className={css.reviewee}>{revieweeName}</span>;\r\n\r\n  return (\r\n    <Modal\r\n      id={id}\r\n      containerClassName={classes}\r\n      contentClassName={css.modalContent}\r\n      isOpen={isOpen}\r\n      onClose={onCloseModal}\r\n      onManageDisableScrolling={onManageDisableScrolling}\r\n      usePortal\r\n      closeButtonMessage={closeButtonMessage}\r\n    >\r\n      <IconReviewUser className={css.modalIcon} />\r\n      <p className={css.modalTitle}>\r\n        <FormattedMessage id=\"ReviewModal.title\" values={{ revieweeName: reviewee }} />\r\n      </p>\r\n      <p className={css.modalMessage}>\r\n        <FormattedMessage id=\"ReviewModal.description\" />\r\n      </p>\r\n      <ReviewForm\r\n        onSubmit={onSubmitReview}\r\n        reviewSent={reviewSent}\r\n        sendReviewInProgress={sendReviewInProgress}\r\n        sendReviewError={sendReviewError}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst { bool, string } = PropTypes;\r\n\r\nReviewModal.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  reviewSent: false,\r\n  sendReviewInProgress: false,\r\n  sendReviewError: null,\r\n};\r\n\r\nReviewModal.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  intl: intlShape.isRequired,\r\n  reviewSent: bool,\r\n  sendReviewInProgress: bool,\r\n  sendReviewError: propTypes.error,\r\n};\r\n\r\nexport default injectIntl(ReviewModal);\r\n"]},"metadata":{},"sourceType":"module"}