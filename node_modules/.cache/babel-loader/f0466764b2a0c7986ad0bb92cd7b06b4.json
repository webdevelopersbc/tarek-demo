{"ast":null,"code":"'use strict';\n\nvar PluralRules = require('./plural-rules');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar PluralRules__default = /*#__PURE__*/_interopDefaultLegacy(PluralRules);\n\nif (typeof Intl === 'undefined') {\n  if (typeof global !== 'undefined') {\n    global.Intl = {\n      PluralRules: PluralRules__default['default']\n    };\n  } else if (typeof window !== 'undefined') {\n    window.Intl = {\n      PluralRules: PluralRules__default['default']\n    };\n  } else {\n    this.Intl = {\n      PluralRules: PluralRules__default['default']\n    };\n  }\n\n  PluralRules__default['default'].polyfill = true;\n} else if (!Intl.PluralRules) {\n  Intl.PluralRules = PluralRules__default['default'];\n  PluralRules__default['default'].polyfill = true;\n} else {\n  var test = ['en', 'es', 'ru', 'zh'];\n  var supported = Intl.PluralRules.supportedLocalesOf(test);\n\n  if (supported.length < test.length) {\n    Intl.PluralRules = PluralRules__default['default'];\n    PluralRules__default['default'].polyfill = true;\n  }\n}","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/node_modules/intl-pluralrules/polyfill.js"],"names":["PluralRules","require","_interopDefaultLegacy","e","PluralRules__default","Intl","global","window","polyfill","test","supported","supportedLocalesOf","length"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,SAASC,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,oBAAoB,GAAG,aAAaF,qBAAqB,CAACF,WAAD,CAA7D;;AAEA,IAAI,OAAOK,IAAP,KAAgB,WAApB,EAAiC;AAC/B,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,IAAAA,MAAM,CAACD,IAAP,GAAc;AACZL,MAAAA,WAAW,EAAEI,oBAAoB,CAAC,SAAD;AADrB,KAAd;AAGD,GAJD,MAIO,IAAI,OAAOG,MAAP,KAAkB,WAAtB,EAAmC;AACxCA,IAAAA,MAAM,CAACF,IAAP,GAAc;AACZL,MAAAA,WAAW,EAAEI,oBAAoB,CAAC,SAAD;AADrB,KAAd;AAGD,GAJM,MAIA;AACL,SAAKC,IAAL,GAAY;AACVL,MAAAA,WAAW,EAAEI,oBAAoB,CAAC,SAAD;AADvB,KAAZ;AAGD;;AAEDA,EAAAA,oBAAoB,CAAC,SAAD,CAApB,CAAgCI,QAAhC,GAA2C,IAA3C;AACD,CAhBD,MAgBO,IAAI,CAACH,IAAI,CAACL,WAAV,EAAuB;AAC5BK,EAAAA,IAAI,CAACL,WAAL,GAAmBI,oBAAoB,CAAC,SAAD,CAAvC;AACAA,EAAAA,oBAAoB,CAAC,SAAD,CAApB,CAAgCI,QAAhC,GAA2C,IAA3C;AACD,CAHM,MAGA;AACL,MAAIC,IAAI,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAX;AACA,MAAIC,SAAS,GAAGL,IAAI,CAACL,WAAL,CAAiBW,kBAAjB,CAAoCF,IAApC,CAAhB;;AAEA,MAAIC,SAAS,CAACE,MAAV,GAAmBH,IAAI,CAACG,MAA5B,EAAoC;AAClCP,IAAAA,IAAI,CAACL,WAAL,GAAmBI,oBAAoB,CAAC,SAAD,CAAvC;AACAA,IAAAA,oBAAoB,CAAC,SAAD,CAApB,CAAgCI,QAAhC,GAA2C,IAA3C;AACD;AACF","sourcesContent":["'use strict';\n\nvar PluralRules = require('./plural-rules');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PluralRules__default = /*#__PURE__*/_interopDefaultLegacy(PluralRules);\n\nif (typeof Intl === 'undefined') {\n  if (typeof global !== 'undefined') {\n    global.Intl = {\n      PluralRules: PluralRules__default['default']\n    };\n  } else if (typeof window !== 'undefined') {\n    window.Intl = {\n      PluralRules: PluralRules__default['default']\n    };\n  } else {\n    this.Intl = {\n      PluralRules: PluralRules__default['default']\n    };\n  }\n\n  PluralRules__default['default'].polyfill = true;\n} else if (!Intl.PluralRules) {\n  Intl.PluralRules = PluralRules__default['default'];\n  PluralRules__default['default'].polyfill = true;\n} else {\n  var test = ['en', 'es', 'ru', 'zh'];\n  var supported = Intl.PluralRules.supportedLocalesOf(test);\n\n  if (supported.length < test.length) {\n    Intl.PluralRules = PluralRules__default['default'];\n    PluralRules__default['default'].polyfill = true;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}