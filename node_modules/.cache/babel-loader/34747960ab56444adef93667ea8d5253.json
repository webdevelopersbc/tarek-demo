{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldTextInput\\\\FieldTextInput.example.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport * as validators from '../../util/validators';\nimport { Button } from '../../components';\nimport FieldTextInput from './FieldTextInput';\nimport css from './FieldTextInputExample.module.css';\n\nconst FormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const {\n      handleSubmit,\n      onChange,\n      invalid,\n      pristine,\n      submitting,\n      formName\n    } = fieldRenderProps;\n    const required = validators.required('This field is required');\n    const submitDisabled = invalid || pristine || submitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSpy, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"text\",\n      id: `${formName}.input1`,\n      name: \"input1\",\n      label: \"Input that requires a value:\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"text\",\n      id: `${formName}.input2`,\n      name: \"input2\",\n      label: \"Input that does not require a value:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"text\",\n      name: \"input3\",\n      placeholder: \"Input without label...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      id: `${formName}.textarea1`,\n      name: \"textarea1\",\n      label: \"Textarea that requires a value:\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      id: `${formName}.textarea2`,\n      name: \"textarea2\",\n      label: \"Textarea that does not require a value:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FieldTextInput, {\n      className: css.field,\n      type: \"textarea\",\n      name: \"textarea3\",\n      placeholder: \"Textarea without label...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: css.submit,\n      type: \"submit\",\n      disabled: submitDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}));\n\n_c = FormComponent;\nexport const Inputs = {\n  component: FormComponent,\n  props: {\n    formName: 'Inputs',\n    onChange: formState => {\n      if (Object.keys(formState.values).length > 0) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('submit values:', values);\n    }\n  },\n  group: 'inputs'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldTextInput/FieldTextInput.example.js"],"names":["React","Form","FinalForm","FormSpy","validators","Button","FieldTextInput","css","FormComponent","props","fieldRenderProps","handleSubmit","onChange","invalid","pristine","submitting","formName","required","submitDisabled","e","preventDefault","field","submit","Inputs","component","formState","Object","keys","values","length","console","log","onSubmit","group"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport * as validators from '../../util/validators';\r\nimport { Button } from '../../components';\r\nimport FieldTextInput from './FieldTextInput';\r\n\r\nimport css from './FieldTextInputExample.module.css';\r\n\r\nconst FormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={fieldRenderProps => {\r\n      const { handleSubmit, onChange, invalid, pristine, submitting, formName } = fieldRenderProps;\r\n      const required = validators.required('This field is required');\r\n      const submitDisabled = invalid || pristine || submitting;\r\n      return (\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormSpy onChange={onChange} />\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"text\"\r\n            id={`${formName}.input1`}\r\n            name=\"input1\"\r\n            label=\"Input that requires a value:\"\r\n            validate={required}\r\n          />\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"text\"\r\n            id={`${formName}.input2`}\r\n            name=\"input2\"\r\n            label=\"Input that does not require a value:\"\r\n          />\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"text\"\r\n            name=\"input3\"\r\n            placeholder=\"Input without label...\"\r\n          />\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"textarea\"\r\n            id={`${formName}.textarea1`}\r\n            name=\"textarea1\"\r\n            label=\"Textarea that requires a value:\"\r\n            validate={required}\r\n          />\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"textarea\"\r\n            id={`${formName}.textarea2`}\r\n            name=\"textarea2\"\r\n            label=\"Textarea that does not require a value:\"\r\n          />\r\n          <FieldTextInput\r\n            className={css.field}\r\n            type=\"textarea\"\r\n            name=\"textarea3\"\r\n            placeholder=\"Textarea without label...\"\r\n          />\r\n          <Button className={css.submit} type=\"submit\" disabled={submitDisabled}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport const Inputs = {\r\n  component: FormComponent,\r\n  props: {\r\n    formName: 'Inputs',\r\n    onChange: formState => {\r\n      if (Object.keys(formState.values).length > 0) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('submit values:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}