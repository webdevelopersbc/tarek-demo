{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\EditListingPage\\\\EditListingWizard\\\\EditListingPoliciesPanel\\\\EditListingPoliciesForm.js\";\nimport React from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport { compose } from 'redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport classNames from 'classnames'; // Import configs and util modules\n\nimport { intlShape, injectIntl, FormattedMessage } from '../../../../util/reactIntl';\nimport { propTypes } from '../../../../util/types'; // Import shared components\n\nimport { Form, Button, FieldTextInput } from '../../../../components'; // Import modules from this directory\n\nimport css from './EditListingPoliciesForm.module.css';\nexport const EditListingPoliciesFormComponent = props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: formRenderProps => {\n    const {\n      className,\n      disabled,\n      ready,\n      handleSubmit,\n      intl,\n      invalid,\n      pristine,\n      saveActionMsg,\n      updated,\n      updateInProgress,\n      fetchErrors\n    } = formRenderProps;\n    const rulesLabelMessage = intl.formatMessage({\n      id: 'EditListingPoliciesForm.rulesLabel'\n    });\n    const rulesPlaceholderMessage = intl.formatMessage({\n      id: 'EditListingPoliciesForm.rulesPlaceholder'\n    });\n    const {\n      updateListingError,\n      showListingsError\n    } = fetchErrors || {};\n    const errorMessage = updateListingError ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EditListingPoliciesForm.updateFailed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })) : null;\n    const errorMessageShowListing = showListingsError ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"EditListingPoliciesForm.showListingFailed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })) : null;\n    const classes = classNames(css.root, className);\n    const submitReady = updated && pristine || ready;\n    const submitInProgress = updateInProgress;\n    const submitDisabled = invalid || disabled || submitInProgress;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: classes,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, errorMessage, errorMessageShowListing, /*#__PURE__*/React.createElement(FieldTextInput, {\n      id: \"rules\",\n      name: \"rules\",\n      className: css.policy,\n      type: \"textarea\",\n      label: rulesLabelMessage,\n      placeholder: rulesPlaceholderMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: css.submitButton,\n      type: \"submit\",\n      inProgress: submitInProgress,\n      disabled: submitDisabled,\n      ready: submitReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, saveActionMsg));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}));\n_c = EditListingPoliciesFormComponent;\nEditListingPoliciesFormComponent.defaultProps = {\n  selectedPlace: null,\n  updateError: null\n};\nEditListingPoliciesFormComponent.propTypes = {\n  intl: intlShape.isRequired,\n  onSubmit: func.isRequired,\n  saveActionMsg: string.isRequired,\n  selectedPlace: propTypes.place,\n  disabled: bool.isRequired,\n  ready: bool.isRequired,\n  updated: bool.isRequired,\n  updateInProgress: bool.isRequired,\n  fetchErrors: shape({\n    showListingsError: propTypes.error,\n    updateListingError: propTypes.error\n  })\n};\nexport default compose(injectIntl)(EditListingPoliciesFormComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditListingPoliciesFormComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/EditListingPage/EditListingWizard/EditListingPoliciesPanel/EditListingPoliciesForm.js"],"names":["React","bool","func","shape","string","compose","Form","FinalForm","classNames","intlShape","injectIntl","FormattedMessage","propTypes","Button","FieldTextInput","css","EditListingPoliciesFormComponent","props","formRenderProps","className","disabled","ready","handleSubmit","intl","invalid","pristine","saveActionMsg","updated","updateInProgress","fetchErrors","rulesLabelMessage","formatMessage","id","rulesPlaceholderMessage","updateListingError","showListingsError","errorMessage","error","errorMessageShowListing","classes","root","submitReady","submitInProgress","submitDisabled","policy","submitButton","defaultProps","selectedPlace","updateError","isRequired","onSubmit","place"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { bool, func, shape, string } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport classNames from 'classnames';\r\n\r\n// Import configs and util modules\r\nimport { intlShape, injectIntl, FormattedMessage } from '../../../../util/reactIntl';\r\nimport { propTypes } from '../../../../util/types';\r\n\r\n// Import shared components\r\nimport { Form, Button, FieldTextInput } from '../../../../components';\r\n\r\n// Import modules from this directory\r\nimport css from './EditListingPoliciesForm.module.css';\r\n\r\nexport const EditListingPoliciesFormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={formRenderProps => {\r\n      const {\r\n        className,\r\n        disabled,\r\n        ready,\r\n        handleSubmit,\r\n        intl,\r\n        invalid,\r\n        pristine,\r\n        saveActionMsg,\r\n        updated,\r\n        updateInProgress,\r\n        fetchErrors,\r\n      } = formRenderProps;\r\n\r\n      const rulesLabelMessage = intl.formatMessage({\r\n        id: 'EditListingPoliciesForm.rulesLabel',\r\n      });\r\n      const rulesPlaceholderMessage = intl.formatMessage({\r\n        id: 'EditListingPoliciesForm.rulesPlaceholder',\r\n      });\r\n\r\n      const { updateListingError, showListingsError } = fetchErrors || {};\r\n      const errorMessage = updateListingError ? (\r\n        <p className={css.error}>\r\n          <FormattedMessage id=\"EditListingPoliciesForm.updateFailed\" />\r\n        </p>\r\n      ) : null;\r\n      const errorMessageShowListing = showListingsError ? (\r\n        <p className={css.error}>\r\n          <FormattedMessage id=\"EditListingPoliciesForm.showListingFailed\" />\r\n        </p>\r\n      ) : null;\r\n\r\n      const classes = classNames(css.root, className);\r\n      const submitReady = (updated && pristine) || ready;\r\n      const submitInProgress = updateInProgress;\r\n      const submitDisabled = invalid || disabled || submitInProgress;\r\n\r\n      return (\r\n        <Form className={classes} onSubmit={handleSubmit}>\r\n          {errorMessage}\r\n          {errorMessageShowListing}\r\n\r\n          <FieldTextInput\r\n            id=\"rules\"\r\n            name=\"rules\"\r\n            className={css.policy}\r\n            type=\"textarea\"\r\n            label={rulesLabelMessage}\r\n            placeholder={rulesPlaceholderMessage}\r\n          />\r\n\r\n          <Button\r\n            className={css.submitButton}\r\n            type=\"submit\"\r\n            inProgress={submitInProgress}\r\n            disabled={submitDisabled}\r\n            ready={submitReady}\r\n          >\r\n            {saveActionMsg}\r\n          </Button>\r\n        </Form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nEditListingPoliciesFormComponent.defaultProps = {\r\n  selectedPlace: null,\r\n  updateError: null,\r\n};\r\n\r\nEditListingPoliciesFormComponent.propTypes = {\r\n  intl: intlShape.isRequired,\r\n  onSubmit: func.isRequired,\r\n  saveActionMsg: string.isRequired,\r\n  selectedPlace: propTypes.place,\r\n  disabled: bool.isRequired,\r\n  ready: bool.isRequired,\r\n  updated: bool.isRequired,\r\n  updateInProgress: bool.isRequired,\r\n  fetchErrors: shape({\r\n    showListingsError: propTypes.error,\r\n    updateListingError: propTypes.error,\r\n  }),\r\n};\r\n\r\nexport default compose(injectIntl)(EditListingPoliciesFormComponent);\r\n"]},"metadata":{},"sourceType":"module"}