{"ast":null,"code":"import Decimal from 'decimal.js';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport { TRANSITION_REQUEST_PAYMENT, TRANSITION_CONFIRM_PAYMENT, TX_TRANSITION_ACTOR_CUSTOMER } from '../../util/transaction';\nimport { LINE_ITEM_DAY, LINE_ITEM_NIGHT, LINE_ITEM_UNITS, DATE_TYPE_DATE, DATE_TYPE_DATETIME } from '../../util/types';\nimport config from '../../config';\nimport OrderBreakdown from './OrderBreakdown';\nconst {\n  UUID,\n  Money\n} = sdkTypes;\nconst CURRENCY = config.currency;\n\nconst exampleBooking = attributes => {\n  return {\n    id: new UUID('example-booking'),\n    type: 'booking',\n    attributes\n  };\n};\n\nconst exampleTransaction = params => {\n  const created = new Date(Date.UTC(2017, 1, 1));\n  const confirmed = new Date(Date.UTC(2017, 1, 1, 0, 1));\n  return {\n    id: new UUID('example-transaction'),\n    type: 'transaction',\n    attributes: {\n      createdAt: created,\n      lastTransitionedAt: created,\n      lastTransition: TRANSITION_CONFIRM_PAYMENT,\n      transitions: [{\n        createdAt: created,\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_REQUEST_PAYMENT\n      }, {\n        createdAt: confirmed,\n        by: TX_TRANSITION_ACTOR_CUSTOMER,\n        transition: TRANSITION_CONFIRM_PAYMENT\n      }],\n      // payinTotal, payoutTotal, and lineItems required in params\n      ...params\n    }\n  };\n};\n\nconst unitPrice = new Decimal(4500);\nconst quantity = new Decimal(2);\nconst basePrice = unitPrice.times(quantity);\nconst fee = basePrice.dividedBy(10).times(-1);\nconst shipping = new Decimal(1000);\nexport const ProductShippingCustomer = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_UNITS,\n    transaction: exampleTransaction({\n      payinTotal: new Money(basePrice.plus(shipping), CURRENCY),\n      payoutTotal: new Money(basePrice.plus(shipping).plus(fee).toNumber(), CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(shipping, CURRENCY),\n        lineTotal: new Money(shipping, CURRENCY),\n        reversal: false\n      }]\n    })\n  },\n  group: 'payment'\n};\nexport const ProductShippingProvider = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_UNITS,\n    transaction: exampleTransaction({\n      payinTotal: new Money(basePrice.plus(shipping), CURRENCY),\n      payoutTotal: new Money(basePrice.plus(shipping).plus(fee).toNumber(), CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(shipping, CURRENCY),\n        lineTotal: new Money(shipping, CURRENCY),\n        reversal: false\n      }]\n    })\n  },\n  group: 'payment'\n};\nexport const ProductRefundShippingCustomer = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_UNITS,\n    transaction: exampleTransaction({\n      payinTotal: new Money(0, CURRENCY),\n      payoutTotal: new Money(0, CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(shipping, CURRENCY),\n        lineTotal: new Money(shipping, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(shipping, CURRENCY),\n        lineTotal: new Money(shipping.times(-1), CURRENCY),\n        reversal: true\n      }]\n    })\n  },\n  group: 'payment'\n};\nexport const ProductRefundShippingProvider = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_UNITS,\n    transaction: exampleTransaction({\n      payinTotal: new Money(0, CURRENCY),\n      payoutTotal: new Money(0, CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(shipping, CURRENCY),\n        lineTotal: new Money(shipping, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/shipping-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(shipping, CURRENCY),\n        lineTotal: new Money(shipping.times(-1), CURRENCY),\n        reversal: true\n      }]\n    })\n  },\n  group: 'payment'\n};\nexport const ProductRefundPickupCustomer = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_UNITS,\n    transaction: exampleTransaction({\n      payinTotal: new Money(0, CURRENCY),\n      payoutTotal: new Money(0, CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/pickup-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(0, CURRENCY),\n        lineTotal: new Money(0, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/pickup-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(-1),\n        unitPrice: new Money(0, CURRENCY),\n        lineTotal: new Money(-0, CURRENCY),\n        reversal: true\n      }]\n    })\n  },\n  group: 'payment'\n};\nexport const ProductRefundPickupProvider = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_UNITS,\n    transaction: exampleTransaction({\n      payinTotal: new Money(0, CURRENCY),\n      payoutTotal: new Money(0, CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity,\n        unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\n        lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.toNumber(), CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(fee.toNumber(), CURRENCY),\n        lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/pickup-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(0, CURRENCY),\n        lineTotal: new Money(0, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/pickup-fee',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(-1),\n        unitPrice: new Money(0, CURRENCY),\n        lineTotal: new Money(-0, CURRENCY),\n        reversal: true\n      }]\n    })\n  },\n  group: 'payment'\n};\nexport const BookingCheckout = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(9000, CURRENCY),\n      payoutTotal: new Money(9000, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingCustomerOrder = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(9000, CURRENCY),\n      payoutTotal: new Money(9000, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingProviderSale = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(9000, CURRENCY),\n      payoutTotal: new Money(7000, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(-2000, CURRENCY),\n        lineTotal: new Money(-2000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingProviderSaleZeroCommission = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(9000, CURRENCY),\n      payoutTotal: new Money(9000, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(0, CURRENCY),\n        lineTotal: new Money(0, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingProviderSaleSingleNight = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATE,\n    transaction: exampleTransaction({\n      payinTotal: new Money(4500, CURRENCY),\n      payoutTotal: new Money(2500, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(4500, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(-2000, CURRENCY),\n        lineTotal: new Money(-2000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 15))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingProviderSalePreauthorized = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'provider',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      lastTransition: TRANSITION_CONFIRM_PAYMENT,\n      payinTotal: new Money(4500, CURRENCY),\n      payoutTotal: new Money(2500, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(4500, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/provider-commission',\n        includeFor: ['provider'],\n        unitPrice: new Money(-2000, CURRENCY),\n        lineTotal: new Money(-2000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 15))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingSingleDay = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_DAY,\n    dateType: DATE_TYPE_DATE,\n    transaction: exampleTransaction({\n      payinTotal: new Money(4500, CURRENCY),\n      payoutTotal: new Money(4500, CURRENCY),\n      lineItems: [{\n        code: 'line-item/day',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(4500, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 15))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingMultipleDays = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_DAY,\n    dateType: DATE_TYPE_DATE,\n    transaction: exampleTransaction({\n      payinTotal: new Money(9000, CURRENCY),\n      payoutTotal: new Money(9000, CURRENCY),\n      lineItems: [{\n        code: 'line-item/day',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingWithUnitsType = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_UNITS,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(9000, CURRENCY),\n      payoutTotal: new Money(9000, CURRENCY),\n      lineItems: [{\n        code: 'line-item/units',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 18))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingCustomPricing = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(12800, CURRENCY),\n      payoutTotal: new Money(12600, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/car-cleaning',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(5000, CURRENCY),\n        lineTotal: new Money(5000, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/season-discount',\n        includeFor: ['customer', 'provider'],\n        percentage: new Decimal(-10),\n        unitPrice: new Money(14000, CURRENCY),\n        lineTotal: new Money(-1400, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/customer-commission',\n        includeFor: ['customer'],\n        percentage: new Decimal(10),\n        unitPrice: new Money(2000, CURRENCY),\n        lineTotal: new Money(200, CURRENCY),\n        reversal: false\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};\nexport const BookingCustomPricingWithRefund = {\n  component: OrderBreakdown,\n  props: {\n    userRole: 'customer',\n    unitType: LINE_ITEM_NIGHT,\n    dateType: DATE_TYPE_DATETIME,\n    transaction: exampleTransaction({\n      payinTotal: new Money(0, CURRENCY),\n      payoutTotal: new Money(0, CURRENCY),\n      lineItems: [{\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(9000, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/night',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(-2),\n        unitPrice: new Money(4500, CURRENCY),\n        lineTotal: new Money(-9000, CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/car-cleaning',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(1),\n        unitPrice: new Money(5000, CURRENCY),\n        lineTotal: new Money(5000, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/car-cleaning',\n        includeFor: ['customer', 'provider'],\n        quantity: new Decimal(-1),\n        unitPrice: new Money(5000, CURRENCY),\n        lineTotal: new Money(-5000, CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/season-discount',\n        includeFor: ['customer', 'provider'],\n        percentage: new Decimal(-10),\n        unitPrice: new Money(14000, CURRENCY),\n        lineTotal: new Money(-1400, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/season-discount',\n        includeFor: ['customer', 'provider'],\n        percentage: new Decimal(10),\n        unitPrice: new Money(14000, CURRENCY),\n        lineTotal: new Money(1400, CURRENCY),\n        reversal: true\n      }, {\n        code: 'line-item/customer-commission',\n        includeFor: ['customer'],\n        percentage: new Decimal(10),\n        unitPrice: new Money(2000, CURRENCY),\n        lineTotal: new Money(200, CURRENCY),\n        reversal: false\n      }, {\n        code: 'line-item/customer-commission',\n        includeFor: ['customer'],\n        percentage: new Decimal(-10),\n        unitPrice: new Money(2000, CURRENCY),\n        lineTotal: new Money(-200, CURRENCY),\n        reversal: true\n      }]\n    }),\n    booking: exampleBooking({\n      start: new Date(Date.UTC(2017, 3, 14)),\n      end: new Date(Date.UTC(2017, 3, 16))\n    })\n  },\n  group: 'payment'\n};","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/OrderBreakdown/OrderBreakdown.example.js"],"names":["Decimal","types","sdkTypes","TRANSITION_REQUEST_PAYMENT","TRANSITION_CONFIRM_PAYMENT","TX_TRANSITION_ACTOR_CUSTOMER","LINE_ITEM_DAY","LINE_ITEM_NIGHT","LINE_ITEM_UNITS","DATE_TYPE_DATE","DATE_TYPE_DATETIME","config","OrderBreakdown","UUID","Money","CURRENCY","currency","exampleBooking","attributes","id","type","exampleTransaction","params","created","Date","UTC","confirmed","createdAt","lastTransitionedAt","lastTransition","transitions","by","transition","unitPrice","quantity","basePrice","times","fee","dividedBy","shipping","ProductShippingCustomer","component","props","userRole","unitType","transaction","payinTotal","plus","payoutTotal","toNumber","lineItems","code","includeFor","lineTotal","reversal","group","ProductShippingProvider","ProductRefundShippingCustomer","ProductRefundShippingProvider","ProductRefundPickupCustomer","ProductRefundPickupProvider","BookingCheckout","dateType","booking","start","end","BookingCustomerOrder","BookingProviderSale","BookingProviderSaleZeroCommission","BookingProviderSaleSingleNight","BookingProviderSalePreauthorized","BookingSingleDay","BookingMultipleDays","BookingWithUnitsType","BookingCustomPricing","percentage","BookingCustomPricingWithRefund"],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\r\nimport { types as sdkTypes } from '../../util/sdkLoader';\r\nimport {\r\n  TRANSITION_REQUEST_PAYMENT,\r\n  TRANSITION_CONFIRM_PAYMENT,\r\n  TX_TRANSITION_ACTOR_CUSTOMER,\r\n} from '../../util/transaction';\r\nimport {\r\n  LINE_ITEM_DAY,\r\n  LINE_ITEM_NIGHT,\r\n  LINE_ITEM_UNITS,\r\n  DATE_TYPE_DATE,\r\n  DATE_TYPE_DATETIME,\r\n} from '../../util/types';\r\nimport config from '../../config';\r\nimport OrderBreakdown from './OrderBreakdown';\r\n\r\nconst { UUID, Money } = sdkTypes;\r\n\r\nconst CURRENCY = config.currency;\r\n\r\nconst exampleBooking = attributes => {\r\n  return {\r\n    id: new UUID('example-booking'),\r\n    type: 'booking',\r\n    attributes,\r\n  };\r\n};\r\n\r\nconst exampleTransaction = params => {\r\n  const created = new Date(Date.UTC(2017, 1, 1));\r\n  const confirmed = new Date(Date.UTC(2017, 1, 1, 0, 1));\r\n  return {\r\n    id: new UUID('example-transaction'),\r\n    type: 'transaction',\r\n    attributes: {\r\n      createdAt: created,\r\n      lastTransitionedAt: created,\r\n      lastTransition: TRANSITION_CONFIRM_PAYMENT,\r\n      transitions: [\r\n        {\r\n          createdAt: created,\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_REQUEST_PAYMENT,\r\n        },\r\n        {\r\n          createdAt: confirmed,\r\n          by: TX_TRANSITION_ACTOR_CUSTOMER,\r\n          transition: TRANSITION_CONFIRM_PAYMENT,\r\n        },\r\n      ],\r\n\r\n      // payinTotal, payoutTotal, and lineItems required in params\r\n      ...params,\r\n    },\r\n  };\r\n};\r\n\r\nconst unitPrice = new Decimal(4500);\r\nconst quantity = new Decimal(2);\r\nconst basePrice = unitPrice.times(quantity);\r\nconst fee = basePrice.dividedBy(10).times(-1);\r\nconst shipping = new Decimal(1000);\r\n\r\nexport const ProductShippingCustomer = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_UNITS,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(basePrice.plus(shipping), CURRENCY),\r\n      payoutTotal: new Money(\r\n        basePrice\r\n          .plus(shipping)\r\n          .plus(fee)\r\n          .toNumber(),\r\n        CURRENCY\r\n      ),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/shipping-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(shipping, CURRENCY),\r\n          lineTotal: new Money(shipping, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const ProductShippingProvider = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_UNITS,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(basePrice.plus(shipping), CURRENCY),\r\n      payoutTotal: new Money(\r\n        basePrice\r\n          .plus(shipping)\r\n          .plus(fee)\r\n          .toNumber(),\r\n        CURRENCY\r\n      ),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/shipping-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(shipping, CURRENCY),\r\n          lineTotal: new Money(shipping, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const ProductRefundShippingCustomer = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_UNITS,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(0, CURRENCY),\r\n      payoutTotal: new Money(0, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/shipping-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(shipping, CURRENCY),\r\n          lineTotal: new Money(shipping, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/shipping-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(shipping, CURRENCY),\r\n          lineTotal: new Money(shipping.times(-1), CURRENCY),\r\n          reversal: true,\r\n        },\r\n      ],\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const ProductRefundShippingProvider = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_UNITS,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(0, CURRENCY),\r\n      payoutTotal: new Money(0, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/shipping-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(shipping, CURRENCY),\r\n          lineTotal: new Money(shipping, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/shipping-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(shipping, CURRENCY),\r\n          lineTotal: new Money(shipping.times(-1), CURRENCY),\r\n          reversal: true,\r\n        },\r\n      ],\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const ProductRefundPickupCustomer = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_UNITS,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(0, CURRENCY),\r\n      payoutTotal: new Money(0, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/pickup-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(0, CURRENCY),\r\n          lineTotal: new Money(0, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/pickup-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(-1),\r\n          unitPrice: new Money(0, CURRENCY),\r\n          lineTotal: new Money(-0, CURRENCY),\r\n          reversal: true,\r\n        },\r\n      ],\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const ProductRefundPickupProvider = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_UNITS,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(0, CURRENCY),\r\n      payoutTotal: new Money(0, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity,\r\n          unitPrice: new Money(unitPrice.toNumber(), CURRENCY),\r\n          lineTotal: new Money(basePrice.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.toNumber(), CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(fee.toNumber(), CURRENCY),\r\n          lineTotal: new Money(fee.times(-1).toNumber(), CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/pickup-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(0, CURRENCY),\r\n          lineTotal: new Money(0, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/pickup-fee',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(-1),\r\n          unitPrice: new Money(0, CURRENCY),\r\n          lineTotal: new Money(-0, CURRENCY),\r\n          reversal: true,\r\n        },\r\n      ],\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingCheckout = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(9000, CURRENCY),\r\n      payoutTotal: new Money(9000, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingCustomerOrder = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(9000, CURRENCY),\r\n      payoutTotal: new Money(9000, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingProviderSale = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(9000, CURRENCY),\r\n      payoutTotal: new Money(7000, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(-2000, CURRENCY),\r\n          lineTotal: new Money(-2000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingProviderSaleZeroCommission = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(9000, CURRENCY),\r\n      payoutTotal: new Money(9000, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(0, CURRENCY),\r\n          lineTotal: new Money(0, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingProviderSaleSingleNight = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATE,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(4500, CURRENCY),\r\n      payoutTotal: new Money(2500, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(4500, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(-2000, CURRENCY),\r\n          lineTotal: new Money(-2000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 15)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingProviderSalePreauthorized = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'provider',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      lastTransition: TRANSITION_CONFIRM_PAYMENT,\r\n      payinTotal: new Money(4500, CURRENCY),\r\n      payoutTotal: new Money(2500, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(4500, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/provider-commission',\r\n          includeFor: ['provider'],\r\n          unitPrice: new Money(-2000, CURRENCY),\r\n          lineTotal: new Money(-2000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 15)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingSingleDay = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_DAY,\r\n    dateType: DATE_TYPE_DATE,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(4500, CURRENCY),\r\n      payoutTotal: new Money(4500, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/day',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(4500, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 15)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingMultipleDays = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_DAY,\r\n    dateType: DATE_TYPE_DATE,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(9000, CURRENCY),\r\n      payoutTotal: new Money(9000, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/day',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingWithUnitsType = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_UNITS,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(9000, CURRENCY),\r\n      payoutTotal: new Money(9000, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/units',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 18)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingCustomPricing = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(12800, CURRENCY),\r\n      payoutTotal: new Money(12600, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/car-cleaning',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(5000, CURRENCY),\r\n          lineTotal: new Money(5000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/season-discount',\r\n          includeFor: ['customer', 'provider'],\r\n          percentage: new Decimal(-10),\r\n          unitPrice: new Money(14000, CURRENCY),\r\n          lineTotal: new Money(-1400, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/customer-commission',\r\n          includeFor: ['customer'],\r\n          percentage: new Decimal(10),\r\n          unitPrice: new Money(2000, CURRENCY),\r\n          lineTotal: new Money(200, CURRENCY),\r\n          reversal: false,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n\r\nexport const BookingCustomPricingWithRefund = {\r\n  component: OrderBreakdown,\r\n  props: {\r\n    userRole: 'customer',\r\n    unitType: LINE_ITEM_NIGHT,\r\n    dateType: DATE_TYPE_DATETIME,\r\n    transaction: exampleTransaction({\r\n      payinTotal: new Money(0, CURRENCY),\r\n      payoutTotal: new Money(0, CURRENCY),\r\n      lineItems: [\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(9000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/night',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(-2),\r\n          unitPrice: new Money(4500, CURRENCY),\r\n          lineTotal: new Money(-9000, CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/car-cleaning',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(1),\r\n          unitPrice: new Money(5000, CURRENCY),\r\n          lineTotal: new Money(5000, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/car-cleaning',\r\n          includeFor: ['customer', 'provider'],\r\n          quantity: new Decimal(-1),\r\n          unitPrice: new Money(5000, CURRENCY),\r\n          lineTotal: new Money(-5000, CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/season-discount',\r\n          includeFor: ['customer', 'provider'],\r\n          percentage: new Decimal(-10),\r\n          unitPrice: new Money(14000, CURRENCY),\r\n          lineTotal: new Money(-1400, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/season-discount',\r\n          includeFor: ['customer', 'provider'],\r\n          percentage: new Decimal(10),\r\n          unitPrice: new Money(14000, CURRENCY),\r\n          lineTotal: new Money(1400, CURRENCY),\r\n          reversal: true,\r\n        },\r\n        {\r\n          code: 'line-item/customer-commission',\r\n          includeFor: ['customer'],\r\n          percentage: new Decimal(10),\r\n          unitPrice: new Money(2000, CURRENCY),\r\n          lineTotal: new Money(200, CURRENCY),\r\n          reversal: false,\r\n        },\r\n        {\r\n          code: 'line-item/customer-commission',\r\n          includeFor: ['customer'],\r\n          percentage: new Decimal(-10),\r\n          unitPrice: new Money(2000, CURRENCY),\r\n          lineTotal: new Money(-200, CURRENCY),\r\n          reversal: true,\r\n        },\r\n      ],\r\n    }),\r\n    booking: exampleBooking({\r\n      start: new Date(Date.UTC(2017, 3, 14)),\r\n      end: new Date(Date.UTC(2017, 3, 16)),\r\n    }),\r\n  },\r\n  group: 'payment',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}