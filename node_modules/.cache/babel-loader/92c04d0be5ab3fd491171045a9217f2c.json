{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\SearchPage\\\\SearchMapPriceLabel\\\\SearchMapPriceLabel.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport config from '../../../config';\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\nimport { propTypes } from '../../../util/types';\nimport { formatMoney } from '../../../util/currency';\nimport { ensureListing } from '../../../util/data';\nimport css from './SearchMapPriceLabel.module.css';\n\nclass SearchMapPriceLabel extends Component {\n  shouldComponentUpdate(nextProps) {\n    const currentListing = ensureListing(this.props.listing);\n    const nextListing = ensureListing(nextProps.listing);\n    const isSameListing = currentListing.id.uuid === nextListing.id.uuid;\n    const hasSamePrice = currentListing.attributes.price === nextListing.attributes.price;\n    const hasSameActiveStatus = this.props.isActive === nextProps.isActive;\n    const hasSameRefreshToken = this.props.mapComponentRefreshToken === nextProps.mapComponentRefreshToken;\n    return !(isSameListing && hasSamePrice && hasSameActiveStatus && hasSameRefreshToken);\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      intl,\n      listing,\n      onListingClicked,\n      isActive\n    } = this.props;\n    const currentListing = ensureListing(listing);\n    const {\n      price\n    } = currentListing.attributes; // Create formatted price if currency is known or alternatively show just the unknown currency.\n\n    const formattedPrice = price && price.currency === config.currency ? formatMoney(intl, price) : price.currency;\n    const classes = classNames(rootClassName || css.root, className);\n    const priceLabelClasses = classNames(css.priceLabel, {\n      [css.priceLabelActive]: isActive\n    });\n    const caretClasses = classNames(css.caret, {\n      [css.caretActive]: isActive\n    });\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: classes,\n      onClick: () => onListingClicked(currentListing),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.caretShadow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: priceLabelClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, formattedPrice), /*#__PURE__*/React.createElement(\"div\", {\n      className: caretClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSearchMapPriceLabel.defaultProps = {\n  className: null,\n  rootClassName: null\n};\nconst {\n  func,\n  string\n} = PropTypes;\nSearchMapPriceLabel.propTypes = {\n  className: string,\n  rootClassName: string,\n  listing: propTypes.listing.isRequired,\n  onListingClicked: func.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nexport default _c = injectIntl(SearchMapPriceLabel);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/SearchPage/SearchMapPriceLabel/SearchMapPriceLabel.js"],"names":["React","Component","PropTypes","classNames","config","injectIntl","intlShape","propTypes","formatMoney","ensureListing","css","SearchMapPriceLabel","shouldComponentUpdate","nextProps","currentListing","props","listing","nextListing","isSameListing","id","uuid","hasSamePrice","attributes","price","hasSameActiveStatus","isActive","hasSameRefreshToken","mapComponentRefreshToken","render","className","rootClassName","intl","onListingClicked","formattedPrice","currency","classes","root","priceLabelClasses","priceLabel","priceLabelActive","caretClasses","caret","caretActive","caretShadow","defaultProps","func","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport config from '../../../config';\r\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport { propTypes } from '../../../util/types';\r\nimport { formatMoney } from '../../../util/currency';\r\nimport { ensureListing } from '../../../util/data';\r\n\r\nimport css from './SearchMapPriceLabel.module.css';\r\n\r\nclass SearchMapPriceLabel extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const currentListing = ensureListing(this.props.listing);\r\n    const nextListing = ensureListing(nextProps.listing);\r\n    const isSameListing = currentListing.id.uuid === nextListing.id.uuid;\r\n    const hasSamePrice = currentListing.attributes.price === nextListing.attributes.price;\r\n    const hasSameActiveStatus = this.props.isActive === nextProps.isActive;\r\n    const hasSameRefreshToken =\r\n      this.props.mapComponentRefreshToken === nextProps.mapComponentRefreshToken;\r\n\r\n    return !(isSameListing && hasSamePrice && hasSameActiveStatus && hasSameRefreshToken);\r\n  }\r\n\r\n  render() {\r\n    const { className, rootClassName, intl, listing, onListingClicked, isActive } = this.props;\r\n    const currentListing = ensureListing(listing);\r\n    const { price } = currentListing.attributes;\r\n\r\n    // Create formatted price if currency is known or alternatively show just the unknown currency.\r\n    const formattedPrice =\r\n      price && price.currency === config.currency ? formatMoney(intl, price) : price.currency;\r\n\r\n    const classes = classNames(rootClassName || css.root, className);\r\n    const priceLabelClasses = classNames(css.priceLabel, { [css.priceLabelActive]: isActive });\r\n    const caretClasses = classNames(css.caret, { [css.caretActive]: isActive });\r\n\r\n    return (\r\n      <button className={classes} onClick={() => onListingClicked(currentListing)}>\r\n        <div className={css.caretShadow} />\r\n        <div className={priceLabelClasses}>{formattedPrice}</div>\r\n        <div className={caretClasses} />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nSearchMapPriceLabel.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nconst { func, string } = PropTypes;\r\n\r\nSearchMapPriceLabel.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  listing: propTypes.listing.isRequired,\r\n  onListingClicked: func.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default injectIntl(SearchMapPriceLabel);\r\n"]},"metadata":{},"sourceType":"module"}