{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\ModalInMobile\\\\ModalInMobile.example.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { Button } from '../../components';\nimport ModalInMobile from './ModalInMobile';\nimport css from './ModalInMobileExample.module.css';\n\nconst onManageDisableScrolling = (componentId, scrollingDisabled = true) => {\n  // We are just checking the value for now\n  console.log('Toggling ModalInMobile - currently:', componentId, scrollingDisabled);\n};\n\nconst ModalInMobileWrapper = props => {\n  _s();\n\n  const [isOpen, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Wrapper text before ModalInMobile\"), /*#__PURE__*/React.createElement(ModalInMobile, Object.assign({}, props, {\n    onClose: () => {\n      setOpen(false);\n      console.log('Closing modal');\n    },\n    isModalOpenOnMobile: isOpen,\n    onManageDisableScrolling: onManageDisableScrolling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Some content inside ModalInMobile component\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOpen,\n    className: css.visibleOnMobileLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Open\")));\n};\n\n_s(ModalInMobileWrapper, \"WPi2qa4HrijmrT7XyqmH7MkbZuo=\");\n\n_c = ModalInMobileWrapper;\nexport const Empty = {\n  component: ModalInMobileWrapper,\n  useDefaultWrapperStyles: false,\n  description: 'Modal feature is visible if window’s width is less than 400px.',\n  props: {\n    id: 'ExampleModalInMobile',\n    showAsModalMaxWidth: 400\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalInMobileWrapper\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/ModalInMobile/ModalInMobile.example.js"],"names":["React","useState","Button","ModalInMobile","css","onManageDisableScrolling","componentId","scrollingDisabled","console","log","ModalInMobileWrapper","props","isOpen","setOpen","handleOpen","margin","visibleOnMobileLayout","Empty","component","useDefaultWrapperStyles","description","id","showAsModalMaxWidth"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,mCAAhB;;AAEA,MAAMC,wBAAwB,GAAG,CAACC,WAAD,EAAcC,iBAAiB,GAAG,IAAlC,KAA2C;AAC1E;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,WAAnD,EAAgEC,iBAAhE;AACD,CAHD;;AAKA,MAAMG,oBAAoB,GAAGC,KAAK,IAAI;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,eAEE,oBAAC,aAAD,oBACMJ,KADN;AAEE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KALH;AAME,IAAA,mBAAmB,EAAEG,MANvB;AAOE,IAAA,wBAAwB,EAAEP,wBAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDATF,CAFF,eAaE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,UAAjB;AAA6B,IAAA,SAAS,EAAEV,GAAG,CAACY,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAbF,CADF;AAqBD,CA5BD;;GAAMN,oB;;KAAAA,oB;AA8BN,OAAO,MAAMO,KAAK,GAAG;AACnBC,EAAAA,SAAS,EAAER,oBADQ;AAEnBS,EAAAA,uBAAuB,EAAE,KAFN;AAGnBC,EAAAA,WAAW,EAAE,gEAHM;AAInBT,EAAAA,KAAK,EAAE;AACLU,IAAAA,EAAE,EAAE,sBADC;AAELC,IAAAA,mBAAmB,EAAE;AAFhB;AAJY,CAAd","sourcesContent":["/* eslint-disable no-console */\r\nimport React, { useState } from 'react';\r\nimport { Button } from '../../components';\r\nimport ModalInMobile from './ModalInMobile';\r\nimport css from './ModalInMobileExample.module.css';\r\n\r\nconst onManageDisableScrolling = (componentId, scrollingDisabled = true) => {\r\n  // We are just checking the value for now\r\n  console.log('Toggling ModalInMobile - currently:', componentId, scrollingDisabled);\r\n};\r\n\r\nconst ModalInMobileWrapper = props => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ margin: '1rem' }}>Wrapper text before ModalInMobile</div>\r\n      <ModalInMobile\r\n        {...props}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          console.log('Closing modal');\r\n        }}\r\n        isModalOpenOnMobile={isOpen}\r\n        onManageDisableScrolling={onManageDisableScrolling}\r\n      >\r\n        <div style={{ margin: '1rem' }}>Some content inside ModalInMobile component</div>\r\n      </ModalInMobile>\r\n      <div style={{ margin: '1rem' }}>\r\n        <Button onClick={handleOpen} className={css.visibleOnMobileLayout}>\r\n          Open\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Empty = {\r\n  component: ModalInMobileWrapper,\r\n  useDefaultWrapperStyles: false,\r\n  description: 'Modal feature is visible if window’s width is less than 400px.',\r\n  props: {\r\n    id: 'ExampleModalInMobile',\r\n    showAsModalMaxWidth: 400,\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}