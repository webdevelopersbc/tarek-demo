{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\OrderBreakdown\\\\OrderBreakdown.js\";\n\n/**\r\n * This component will show the booking info and calculated total price.\r\n * I.e. dates and other details related to payment decision in receipt format.\r\n */\nimport React from 'react';\nimport { oneOf, string } from 'prop-types';\nimport { FormattedMessage, intlShape, injectIntl } from '../../util/reactIntl';\nimport classNames from 'classnames';\nimport { propTypes, LINE_ITEM_CUSTOMER_COMMISSION, LINE_ITEM_PROVIDER_COMMISSION } from '../../util/types';\nimport LineItemBookingPeriod from './LineItemBookingPeriod';\nimport LineItemBasePriceMaybe from './LineItemBasePriceMaybe';\nimport LineItemSubTotalMaybe from './LineItemSubTotalMaybe';\nimport LineItemShippingFeeMaybe from './LineItemShippingFeeMaybe';\nimport LineItemPickupFeeMaybe from './LineItemPickupFeeMaybe';\nimport LineItemCustomerCommissionMaybe from './LineItemCustomerCommissionMaybe';\nimport LineItemCustomerCommissionRefundMaybe from './LineItemCustomerCommissionRefundMaybe';\nimport LineItemProviderCommissionMaybe from './LineItemProviderCommissionMaybe';\nimport LineItemProviderCommissionRefundMaybe from './LineItemProviderCommissionRefundMaybe';\nimport LineItemRefundMaybe from './LineItemRefundMaybe';\nimport LineItemTotalPrice from './LineItemTotalPrice';\nimport LineItemUnknownItemsMaybe from './LineItemUnknownItemsMaybe';\nimport css from './OrderBreakdown.module.css';\nexport const OrderBreakdownComponent = props => {\n  const {\n    rootClassName,\n    className,\n    userRole,\n    unitType,\n    transaction,\n    booking,\n    intl,\n    dateType\n  } = props;\n  const isCustomer = userRole === 'customer';\n  const isProvider = userRole === 'provider';\n  const lineItems = transaction.attributes.lineItems;\n  const hasCommissionLineItem = lineItems.find(item => {\n    const hasCustomerCommission = isCustomer && item.code === LINE_ITEM_CUSTOMER_COMMISSION;\n    const hasProviderCommission = isProvider && item.code === LINE_ITEM_PROVIDER_COMMISSION;\n    return (hasCustomerCommission || hasProviderCommission) && !item.reversal;\n  });\n  const classes = classNames(rootClassName || css.root, className);\n  /**\r\n   * OrderBreakdown contains different line items:\r\n   *\r\n   * LineItemBookingPeriod: prints booking start and booking end types. Prop dateType\r\n   * determines if the date and time or only the date is shown\r\n   *\r\n   * LineItemUnitsMaybe: if he unitType is line-item/unit print the name and\r\n   * quantity of the unit (Not used with FTW-product).\r\n   *\r\n   * LineItemShippingFeeMaybe: prints the shipping fee (combining additional fee of\r\n   * additional items into it).\r\n   *\r\n   * LineItemShippingFeeRefundMaybe: prints the amount of refunded shipping fee\r\n   *\r\n   * LineItemBasePriceMaybe: prints the base price calculation for the listing, e.g.\r\n   * \"$150.00 * 2 nights $300\"\r\n   *\r\n   * LineItemUnitPriceMaybe: prints just the unit price, e.g. \"Price per night $32.00\".\r\n   * This line item is not used by default in the OrderBreakdown.\r\n   *\r\n   * LineItemUnknownItemsMaybe: prints the line items that are unknown. In ideal case there\r\n   * should not be unknown line items. If you are using custom pricing, you should create\r\n   * new custom line items if you need them.\r\n   *\r\n   * LineItemSubTotalMaybe: prints subtotal of line items before possible\r\n   * commission or refunds\r\n   *\r\n   * LineItemRefundMaybe: prints the amount of refund\r\n   *\r\n   * LineItemCustomerCommissionMaybe: prints the amount of customer commission\r\n   * The default transaction process used by FTW doesn't include the customer commission.\r\n   *\r\n   * LineItemCustomerCommissionRefundMaybe: prints the amount of refunded customer commission\r\n   *\r\n   * LineItemProviderCommissionMaybe: prints the amount of provider commission\r\n   *\r\n   * LineItemProviderCommissionRefundMaybe: prints the amount of refunded provider commission\r\n   *\r\n   * LineItemTotalPrice: prints total price of the transaction\r\n   *\r\n   */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LineItemBookingPeriod, {\n    booking: booking,\n    unitType: unitType,\n    dateType: dateType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemBasePriceMaybe, {\n    lineItems: lineItems,\n    unitType: unitType,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemShippingFeeMaybe, {\n    lineItems: lineItems,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemPickupFeeMaybe, {\n    lineItems: lineItems,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemUnknownItemsMaybe, {\n    lineItems: lineItems,\n    isProvider: isProvider,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemSubTotalMaybe, {\n    lineItems: lineItems,\n    unitType: unitType,\n    userRole: userRole,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemRefundMaybe, {\n    lineItems: lineItems,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemCustomerCommissionMaybe, {\n    lineItems: lineItems,\n    isCustomer: isCustomer,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemCustomerCommissionRefundMaybe, {\n    lineItems: lineItems,\n    isCustomer: isCustomer,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemProviderCommissionMaybe, {\n    lineItems: lineItems,\n    isProvider: isProvider,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemProviderCommissionRefundMaybe, {\n    lineItems: lineItems,\n    isProvider: isProvider,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineItemTotalPrice, {\n    transaction: transaction,\n    isProvider: isProvider,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), hasCommissionLineItem ? /*#__PURE__*/React.createElement(\"span\", {\n    className: css.feeInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderBreakdown.commissionFeeNote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })) : null);\n};\n_c = OrderBreakdownComponent;\nOrderBreakdownComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  booking: null,\n  dateType: null\n};\nOrderBreakdownComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  userRole: oneOf(['customer', 'provider']).isRequired,\n  unitType: propTypes.lineItemUnitType.isRequired,\n  transaction: propTypes.transaction.isRequired,\n  booking: propTypes.booking,\n  dateType: propTypes.dateType,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nconst OrderBreakdown = injectIntl(OrderBreakdownComponent);\n_c2 = OrderBreakdown;\nOrderBreakdown.displayName = 'OrderBreakdown';\nexport default OrderBreakdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderBreakdownComponent\");\n$RefreshReg$(_c2, \"OrderBreakdown\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/OrderBreakdown/OrderBreakdown.js"],"names":["React","oneOf","string","FormattedMessage","intlShape","injectIntl","classNames","propTypes","LINE_ITEM_CUSTOMER_COMMISSION","LINE_ITEM_PROVIDER_COMMISSION","LineItemBookingPeriod","LineItemBasePriceMaybe","LineItemSubTotalMaybe","LineItemShippingFeeMaybe","LineItemPickupFeeMaybe","LineItemCustomerCommissionMaybe","LineItemCustomerCommissionRefundMaybe","LineItemProviderCommissionMaybe","LineItemProviderCommissionRefundMaybe","LineItemRefundMaybe","LineItemTotalPrice","LineItemUnknownItemsMaybe","css","OrderBreakdownComponent","props","rootClassName","className","userRole","unitType","transaction","booking","intl","dateType","isCustomer","isProvider","lineItems","attributes","hasCommissionLineItem","find","item","hasCustomerCommission","code","hasProviderCommission","reversal","classes","root","feeInfo","defaultProps","isRequired","lineItemUnitType","OrderBreakdown","displayName"],"mappings":"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","sourcesContent":["/**\r\n * This component will show the booking info and calculated total price.\r\n * I.e. dates and other details related to payment decision in receipt format.\r\n */\r\nimport React from 'react';\r\nimport { oneOf, string } from 'prop-types';\r\nimport { FormattedMessage, intlShape, injectIntl } from '../../util/reactIntl';\r\nimport classNames from 'classnames';\r\nimport {\r\n  propTypes,\r\n  LINE_ITEM_CUSTOMER_COMMISSION,\r\n  LINE_ITEM_PROVIDER_COMMISSION,\r\n} from '../../util/types';\r\n\r\nimport LineItemBookingPeriod from './LineItemBookingPeriod';\r\nimport LineItemBasePriceMaybe from './LineItemBasePriceMaybe';\r\nimport LineItemSubTotalMaybe from './LineItemSubTotalMaybe';\r\nimport LineItemShippingFeeMaybe from './LineItemShippingFeeMaybe';\r\nimport LineItemPickupFeeMaybe from './LineItemPickupFeeMaybe';\r\nimport LineItemCustomerCommissionMaybe from './LineItemCustomerCommissionMaybe';\r\nimport LineItemCustomerCommissionRefundMaybe from './LineItemCustomerCommissionRefundMaybe';\r\nimport LineItemProviderCommissionMaybe from './LineItemProviderCommissionMaybe';\r\nimport LineItemProviderCommissionRefundMaybe from './LineItemProviderCommissionRefundMaybe';\r\nimport LineItemRefundMaybe from './LineItemRefundMaybe';\r\nimport LineItemTotalPrice from './LineItemTotalPrice';\r\nimport LineItemUnknownItemsMaybe from './LineItemUnknownItemsMaybe';\r\n\r\nimport css from './OrderBreakdown.module.css';\r\n\r\nexport const OrderBreakdownComponent = props => {\r\n  const {\r\n    rootClassName,\r\n    className,\r\n    userRole,\r\n    unitType,\r\n    transaction,\r\n    booking,\r\n    intl,\r\n    dateType,\r\n  } = props;\r\n\r\n  const isCustomer = userRole === 'customer';\r\n  const isProvider = userRole === 'provider';\r\n  const lineItems = transaction.attributes.lineItems;\r\n\r\n  const hasCommissionLineItem = lineItems.find(item => {\r\n    const hasCustomerCommission = isCustomer && item.code === LINE_ITEM_CUSTOMER_COMMISSION;\r\n    const hasProviderCommission = isProvider && item.code === LINE_ITEM_PROVIDER_COMMISSION;\r\n    return (hasCustomerCommission || hasProviderCommission) && !item.reversal;\r\n  });\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  /**\r\n   * OrderBreakdown contains different line items:\r\n   *\r\n   * LineItemBookingPeriod: prints booking start and booking end types. Prop dateType\r\n   * determines if the date and time or only the date is shown\r\n   *\r\n   * LineItemUnitsMaybe: if he unitType is line-item/unit print the name and\r\n   * quantity of the unit (Not used with FTW-product).\r\n   *\r\n   * LineItemShippingFeeMaybe: prints the shipping fee (combining additional fee of\r\n   * additional items into it).\r\n   *\r\n   * LineItemShippingFeeRefundMaybe: prints the amount of refunded shipping fee\r\n   *\r\n   * LineItemBasePriceMaybe: prints the base price calculation for the listing, e.g.\r\n   * \"$150.00 * 2 nights $300\"\r\n   *\r\n   * LineItemUnitPriceMaybe: prints just the unit price, e.g. \"Price per night $32.00\".\r\n   * This line item is not used by default in the OrderBreakdown.\r\n   *\r\n   * LineItemUnknownItemsMaybe: prints the line items that are unknown. In ideal case there\r\n   * should not be unknown line items. If you are using custom pricing, you should create\r\n   * new custom line items if you need them.\r\n   *\r\n   * LineItemSubTotalMaybe: prints subtotal of line items before possible\r\n   * commission or refunds\r\n   *\r\n   * LineItemRefundMaybe: prints the amount of refund\r\n   *\r\n   * LineItemCustomerCommissionMaybe: prints the amount of customer commission\r\n   * The default transaction process used by FTW doesn't include the customer commission.\r\n   *\r\n   * LineItemCustomerCommissionRefundMaybe: prints the amount of refunded customer commission\r\n   *\r\n   * LineItemProviderCommissionMaybe: prints the amount of provider commission\r\n   *\r\n   * LineItemProviderCommissionRefundMaybe: prints the amount of refunded provider commission\r\n   *\r\n   * LineItemTotalPrice: prints total price of the transaction\r\n   *\r\n   */\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <LineItemBookingPeriod booking={booking} unitType={unitType} dateType={dateType} />\r\n\r\n      <LineItemBasePriceMaybe lineItems={lineItems} unitType={unitType} intl={intl} />\r\n      <LineItemShippingFeeMaybe lineItems={lineItems} intl={intl} />\r\n      <LineItemPickupFeeMaybe lineItems={lineItems} intl={intl} />\r\n      <LineItemUnknownItemsMaybe lineItems={lineItems} isProvider={isProvider} intl={intl} />\r\n\r\n      <LineItemSubTotalMaybe\r\n        lineItems={lineItems}\r\n        unitType={unitType}\r\n        userRole={userRole}\r\n        intl={intl}\r\n      />\r\n      <LineItemRefundMaybe lineItems={lineItems} intl={intl} />\r\n\r\n      <LineItemCustomerCommissionMaybe lineItems={lineItems} isCustomer={isCustomer} intl={intl} />\r\n      <LineItemCustomerCommissionRefundMaybe\r\n        lineItems={lineItems}\r\n        isCustomer={isCustomer}\r\n        intl={intl}\r\n      />\r\n\r\n      <LineItemProviderCommissionMaybe lineItems={lineItems} isProvider={isProvider} intl={intl} />\r\n      <LineItemProviderCommissionRefundMaybe\r\n        lineItems={lineItems}\r\n        isProvider={isProvider}\r\n        intl={intl}\r\n      />\r\n\r\n      <LineItemTotalPrice transaction={transaction} isProvider={isProvider} intl={intl} />\r\n\r\n      {hasCommissionLineItem ? (\r\n        <span className={css.feeInfo}>\r\n          <FormattedMessage id=\"OrderBreakdown.commissionFeeNote\" />\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nOrderBreakdownComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  booking: null,\r\n  dateType: null,\r\n};\r\n\r\nOrderBreakdownComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n\r\n  userRole: oneOf(['customer', 'provider']).isRequired,\r\n  unitType: propTypes.lineItemUnitType.isRequired,\r\n  transaction: propTypes.transaction.isRequired,\r\n  booking: propTypes.booking,\r\n  dateType: propTypes.dateType,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst OrderBreakdown = injectIntl(OrderBreakdownComponent);\r\n\r\nOrderBreakdown.displayName = 'OrderBreakdown';\r\n\r\nexport default OrderBreakdown;\r\n"]},"metadata":{},"sourceType":"module"}