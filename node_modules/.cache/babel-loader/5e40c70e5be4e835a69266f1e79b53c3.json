{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\OrderBreakdown\\\\LineItemRefundMaybe.js\";\nimport React from 'react';\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\nimport Decimal from 'decimal.js';\nimport { formatMoney } from '../../util/currency';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport config from '../../config';\nimport { propTypes, LINE_ITEM_CUSTOMER_COMMISSION, LINE_ITEM_PROVIDER_COMMISSION } from '../../util/types';\nimport css from './OrderBreakdown.module.css';\nconst {\n  Money\n} = sdkTypes;\n/**\r\n * Calculates the total price in sub units for multiple line items.\r\n */\n\nconst lineItemsTotal = lineItems => {\n  const amount = lineItems.reduce((total, item) => {\n    return total.plus(item.lineTotal.amount);\n  }, new Decimal(0));\n  const currency = lineItems[0] ? lineItems[0].lineTotal.currency : config.currency;\n  return new Money(amount, currency);\n};\n/**\r\n * Checks if line item represents commission\r\n */\n\n\nconst isCommission = lineItem => {\n  return lineItem.code === LINE_ITEM_PROVIDER_COMMISSION || lineItem.code === LINE_ITEM_CUSTOMER_COMMISSION;\n};\n/**\r\n * Returns non-commission, reversal line items\r\n */\n\n\nconst nonCommissionReversalLineItems = lineItems => {\n  return lineItems.filter(item => !isCommission(item) && item.reversal);\n};\n\nconst LineItemRefundMaybe = props => {\n  const {\n    lineItems,\n    intl\n  } = props; // all non-commission, reversal line items\n\n  const refundLineItems = nonCommissionReversalLineItems(lineItems);\n  const refund = lineItemsTotal(refundLineItems);\n  const formattedRefund = refundLineItems.length > 0 ? formatMoney(intl, refund) : null;\n  return formattedRefund ? /*#__PURE__*/React.createElement(\"div\", {\n    className: css.lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.itemLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"OrderBreakdown.refund\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: css.itemValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, formattedRefund)) : null;\n};\n\n_c = LineItemRefundMaybe;\nLineItemRefundMaybe.propTypes = {\n  lineItems: propTypes.lineItems.isRequired,\n  intl: intlShape.isRequired\n};\nexport default LineItemRefundMaybe;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemRefundMaybe\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/OrderBreakdown/LineItemRefundMaybe.js"],"names":["React","FormattedMessage","intlShape","Decimal","formatMoney","types","sdkTypes","config","propTypes","LINE_ITEM_CUSTOMER_COMMISSION","LINE_ITEM_PROVIDER_COMMISSION","css","Money","lineItemsTotal","lineItems","amount","reduce","total","item","plus","lineTotal","currency","isCommission","lineItem","code","nonCommissionReversalLineItems","filter","reversal","LineItemRefundMaybe","props","intl","refundLineItems","refund","formattedRefund","length","itemLabel","itemValue","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,sBAA5C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,sBAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACEC,SADF,EAEEC,6BAFF,EAGEC,6BAHF,QAIO,kBAJP;AAMA,OAAOC,GAAP,MAAgB,6BAAhB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYN,QAAlB;AAEA;AACA;AACA;;AACA,MAAMO,cAAc,GAAGC,SAAS,IAAI;AAClC,QAAMC,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC/C,WAAOD,KAAK,CAACE,IAAN,CAAWD,IAAI,CAACE,SAAL,CAAeL,MAA1B,CAAP;AACD,GAFc,EAEZ,IAAIZ,OAAJ,CAAY,CAAZ,CAFY,CAAf;AAGA,QAAMkB,QAAQ,GAAGP,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAaM,SAAb,CAAuBC,QAAtC,GAAiDd,MAAM,CAACc,QAAzE;AACA,SAAO,IAAIT,KAAJ,CAAUG,MAAV,EAAkBM,QAAlB,CAAP;AACD,CAND;AAQA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAGC,QAAQ,IAAI;AAC/B,SACEA,QAAQ,CAACC,IAAT,KAAkBd,6BAAlB,IACAa,QAAQ,CAACC,IAAT,KAAkBf,6BAFpB;AAID,CALD;AAOA;AACA;AACA;;;AACA,MAAMgB,8BAA8B,GAAGX,SAAS,IAAI;AAClD,SAAOA,SAAS,CAACY,MAAV,CAAiBR,IAAI,IAAI,CAACI,YAAY,CAACJ,IAAD,CAAb,IAAuBA,IAAI,CAACS,QAArD,CAAP;AACD,CAFD;;AAIA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAEf,IAAAA,SAAF;AAAagB,IAAAA;AAAb,MAAsBD,KAA5B,CADmC,CAGnC;;AACA,QAAME,eAAe,GAAGN,8BAA8B,CAACX,SAAD,CAAtD;AAEA,QAAMkB,MAAM,GAAGnB,cAAc,CAACkB,eAAD,CAA7B;AAEA,QAAME,eAAe,GAAGF,eAAe,CAACG,MAAhB,GAAyB,CAAzB,GAA6B9B,WAAW,CAAC0B,IAAD,EAAOE,MAAP,CAAxC,GAAyD,IAAjF;AAEA,SAAOC,eAAe,gBACpB;AAAK,IAAA,SAAS,EAAEtB,GAAG,CAACY,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEZ,GAAG,CAACwB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAM,IAAA,SAAS,EAAExB,GAAG,CAACyB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,eAAjC,CAJF,CADoB,GAOlB,IAPJ;AAQD,CAlBD;;KAAML,mB;AAoBNA,mBAAmB,CAACpB,SAApB,GAAgC;AAC9BM,EAAAA,SAAS,EAAEN,SAAS,CAACM,SAAV,CAAoBuB,UADD;AAE9BP,EAAAA,IAAI,EAAE5B,SAAS,CAACmC;AAFc,CAAhC;AAKA,eAAeT,mBAAf","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, intlShape } from '../../util/reactIntl';\r\nimport Decimal from 'decimal.js';\r\nimport { formatMoney } from '../../util/currency';\r\nimport { types as sdkTypes } from '../../util/sdkLoader';\r\nimport config from '../../config';\r\nimport {\r\n  propTypes,\r\n  LINE_ITEM_CUSTOMER_COMMISSION,\r\n  LINE_ITEM_PROVIDER_COMMISSION,\r\n} from '../../util/types';\r\n\r\nimport css from './OrderBreakdown.module.css';\r\n\r\nconst { Money } = sdkTypes;\r\n\r\n/**\r\n * Calculates the total price in sub units for multiple line items.\r\n */\r\nconst lineItemsTotal = lineItems => {\r\n  const amount = lineItems.reduce((total, item) => {\r\n    return total.plus(item.lineTotal.amount);\r\n  }, new Decimal(0));\r\n  const currency = lineItems[0] ? lineItems[0].lineTotal.currency : config.currency;\r\n  return new Money(amount, currency);\r\n};\r\n\r\n/**\r\n * Checks if line item represents commission\r\n */\r\nconst isCommission = lineItem => {\r\n  return (\r\n    lineItem.code === LINE_ITEM_PROVIDER_COMMISSION ||\r\n    lineItem.code === LINE_ITEM_CUSTOMER_COMMISSION\r\n  );\r\n};\r\n\r\n/**\r\n * Returns non-commission, reversal line items\r\n */\r\nconst nonCommissionReversalLineItems = lineItems => {\r\n  return lineItems.filter(item => !isCommission(item) && item.reversal);\r\n};\r\n\r\nconst LineItemRefundMaybe = props => {\r\n  const { lineItems, intl } = props;\r\n\r\n  // all non-commission, reversal line items\r\n  const refundLineItems = nonCommissionReversalLineItems(lineItems);\r\n\r\n  const refund = lineItemsTotal(refundLineItems);\r\n\r\n  const formattedRefund = refundLineItems.length > 0 ? formatMoney(intl, refund) : null;\r\n\r\n  return formattedRefund ? (\r\n    <div className={css.lineItem}>\r\n      <span className={css.itemLabel}>\r\n        <FormattedMessage id=\"OrderBreakdown.refund\" />\r\n      </span>\r\n      <span className={css.itemValue}>{formattedRefund}</span>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nLineItemRefundMaybe.propTypes = {\r\n  lineItems: propTypes.lineItems.isRequired,\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default LineItemRefundMaybe;\r\n"]},"metadata":{},"sourceType":"module"}