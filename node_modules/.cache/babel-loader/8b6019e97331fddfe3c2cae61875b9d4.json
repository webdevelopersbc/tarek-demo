{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\Topbar\\\\TopbarDesktop\\\\TopbarDesktop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { any, bool, func, object, number, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage, intlShape } from '../../../util/reactIntl';\nimport { ACCOUNT_SETTINGS_PAGES } from '../../../routing/routeConfiguration';\nimport { propTypes } from '../../../util/types';\nimport { Avatar, InlineTextButton, Logo, Menu, MenuLabel, MenuContent, MenuItem, NamedLink } from '../../../components';\nimport TopbarSearchForm from '../TopbarSearchForm/TopbarSearchForm';\nimport css from './TopbarDesktop.module.css';\n\nconst TopbarDesktop = props => {\n  _s();\n\n  const {\n    className,\n    appConfig,\n    currentUser,\n    currentPage,\n    rootClassName,\n    currentUserHasListings,\n    notificationCount,\n    intl,\n    isAuthenticated,\n    onLogout,\n    onSearchSubmit,\n    initialSearchFormValues\n  } = props;\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const authenticatedOnClientSide = mounted && isAuthenticated;\n  const isAuthenticatedOrJustHydrated = isAuthenticated || !mounted;\n  const classes = classNames(rootClassName || css.root, className);\n  const search = /*#__PURE__*/React.createElement(TopbarSearchForm, {\n    className: css.searchLink,\n    desktopInputRoot: css.topbarSearchWithLeftPadding,\n    onSubmit: onSearchSubmit,\n    initialValues: initialSearchFormValues,\n    appConfig: appConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n  const notificationDot = notificationCount > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: css.notificationDot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 51\n    }\n  }) : null;\n  const inboxLink = authenticatedOnClientSide ? /*#__PURE__*/React.createElement(NamedLink, {\n    className: css.inboxLink,\n    name: \"InboxPage\",\n    params: {\n      tab: currentUserHasListings ? 'sales' : 'orders'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.inbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), notificationDot)) : null;\n\n  const currentPageClass = page => {\n    const isAccountSettingsPage = page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\n  };\n\n  const profileMenu = authenticatedOnClientSide ? /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MenuLabel, {\n    className: css.profileMenuLabel,\n    isOpenClassName: css.profileMenuIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: css.avatar,\n    user: currentUser,\n    disableProfileLink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MenuContent, {\n    className: css.profileMenuContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"ManageListingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.yourListingsLink, currentPageClass('ManageListingsPage')),\n    name: \"ManageListingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.yourListingsLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"ProfileSettingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.profileSettingsLink, currentPageClass('ProfileSettingsPage')),\n    name: \"ProfileSettingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.profileSettingsLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"AccountSettingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.yourListingsLink, currentPageClass('AccountSettingsPage')),\n    name: \"AccountSettingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.accountSettingsLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InlineTextButton, {\n    rootClassName: css.logoutButton,\n    onClick: onLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.menuItemBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }))))) : null;\n  const signupLink = isAuthenticatedOrJustHydrated ? null : /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"SignupPage\",\n    className: css.signupLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })));\n  const loginLink = isAuthenticatedOrJustHydrated ? null : /*#__PURE__*/React.createElement(NamedLink, {\n    name: \"LoginPage\",\n    className: css.loginLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    className: css.logoLink,\n    name: \"LandingPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    format: \"desktop\",\n    className: css.logo,\n    alt: intl.formatMessage({\n      id: 'TopbarDesktop.logo'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), search, /*#__PURE__*/React.createElement(NamedLink, {\n    className: css.createListingLink,\n    name: \"NewListingPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.createListing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarDesktop.createListing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }))), inboxLink, profileMenu, signupLink, loginLink);\n};\n\n_s(TopbarDesktop, \"LrrVfNW3d1raFE0BNzCTILYmIfo=\");\n\n_c = TopbarDesktop;\nTopbarDesktop.defaultProps = {\n  rootClassName: null,\n  className: null,\n  currentUser: null,\n  currentPage: null,\n  notificationCount: 0,\n  initialSearchFormValues: {},\n  appConfig: null\n};\nTopbarDesktop.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUserHasListings: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  currentPage: string,\n  isAuthenticated: bool.isRequired,\n  onLogout: func.isRequired,\n  notificationCount: number,\n  onSearchSubmit: func.isRequired,\n  initialSearchFormValues: object,\n  intl: intlShape.isRequired,\n  appConfig: object\n};\nexport default TopbarDesktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopbarDesktop\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/Topbar/TopbarDesktop/TopbarDesktop.js"],"names":["React","useState","useEffect","any","bool","func","object","number","string","classNames","FormattedMessage","intlShape","ACCOUNT_SETTINGS_PAGES","propTypes","Avatar","InlineTextButton","Logo","Menu","MenuLabel","MenuContent","MenuItem","NamedLink","TopbarSearchForm","css","TopbarDesktop","props","className","appConfig","currentUser","currentPage","rootClassName","currentUserHasListings","notificationCount","intl","isAuthenticated","onLogout","onSearchSubmit","initialSearchFormValues","mounted","setMounted","authenticatedOnClientSide","isAuthenticatedOrJustHydrated","classes","root","search","searchLink","topbarSearchWithLeftPadding","notificationDot","inboxLink","tab","inbox","currentPageClass","page","isAccountSettingsPage","includes","profileMenu","profileMenuLabel","profileMenuIsOpen","avatar","profileMenuContent","yourListingsLink","menuItemBorder","profileSettingsLink","logoutButton","signupLink","signup","loginLink","login","logoLink","logo","formatMessage","id","createListingLink","createListing","defaultProps","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { any, bool, func, object, number, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, intlShape } from '../../../util/reactIntl';\r\nimport { ACCOUNT_SETTINGS_PAGES } from '../../../routing/routeConfiguration';\r\nimport { propTypes } from '../../../util/types';\r\nimport {\r\n  Avatar,\r\n  InlineTextButton,\r\n  Logo,\r\n  Menu,\r\n  MenuLabel,\r\n  MenuContent,\r\n  MenuItem,\r\n  NamedLink,\r\n} from '../../../components';\r\n\r\nimport TopbarSearchForm from '../TopbarSearchForm/TopbarSearchForm';\r\n\r\nimport css from './TopbarDesktop.module.css';\r\n\r\nconst TopbarDesktop = props => {\r\n  const {\r\n    className,\r\n    appConfig,\r\n    currentUser,\r\n    currentPage,\r\n    rootClassName,\r\n    currentUserHasListings,\r\n    notificationCount,\r\n    intl,\r\n    isAuthenticated,\r\n    onLogout,\r\n    onSearchSubmit,\r\n    initialSearchFormValues,\r\n  } = props;\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  const authenticatedOnClientSide = mounted && isAuthenticated;\r\n  const isAuthenticatedOrJustHydrated = isAuthenticated || !mounted;\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  const search = (\r\n    <TopbarSearchForm\r\n      className={css.searchLink}\r\n      desktopInputRoot={css.topbarSearchWithLeftPadding}\r\n      onSubmit={onSearchSubmit}\r\n      initialValues={initialSearchFormValues}\r\n      appConfig={appConfig}\r\n    />\r\n  );\r\n\r\n  const notificationDot = notificationCount > 0 ? <div className={css.notificationDot} /> : null;\r\n\r\n  const inboxLink = authenticatedOnClientSide ? (\r\n    <NamedLink\r\n      className={css.inboxLink}\r\n      name=\"InboxPage\"\r\n      params={{ tab: currentUserHasListings ? 'sales' : 'orders' }}\r\n    >\r\n      <span className={css.inbox}>\r\n        <FormattedMessage id=\"TopbarDesktop.inbox\" />\r\n        {notificationDot}\r\n      </span>\r\n    </NamedLink>\r\n  ) : null;\r\n\r\n  const currentPageClass = page => {\r\n    const isAccountSettingsPage =\r\n      page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\r\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\r\n  };\r\n\r\n  const profileMenu = authenticatedOnClientSide ? (\r\n    <Menu>\r\n      <MenuLabel className={css.profileMenuLabel} isOpenClassName={css.profileMenuIsOpen}>\r\n        <Avatar className={css.avatar} user={currentUser} disableProfileLink />\r\n      </MenuLabel>\r\n      <MenuContent className={css.profileMenuContent}>\r\n        <MenuItem key=\"ManageListingsPage\">\r\n          <NamedLink\r\n            className={classNames(css.yourListingsLink, currentPageClass('ManageListingsPage'))}\r\n            name=\"ManageListingsPage\"\r\n          >\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.yourListingsLink\" />\r\n          </NamedLink>\r\n        </MenuItem>\r\n        <MenuItem key=\"ProfileSettingsPage\">\r\n          <NamedLink\r\n            className={classNames(css.profileSettingsLink, currentPageClass('ProfileSettingsPage'))}\r\n            name=\"ProfileSettingsPage\"\r\n          >\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.profileSettingsLink\" />\r\n          </NamedLink>\r\n        </MenuItem>\r\n        <MenuItem key=\"AccountSettingsPage\">\r\n          <NamedLink\r\n            className={classNames(css.yourListingsLink, currentPageClass('AccountSettingsPage'))}\r\n            name=\"AccountSettingsPage\"\r\n          >\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.accountSettingsLink\" />\r\n          </NamedLink>\r\n        </MenuItem>\r\n        <MenuItem key=\"logout\">\r\n          <InlineTextButton rootClassName={css.logoutButton} onClick={onLogout}>\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.logout\" />\r\n          </InlineTextButton>\r\n        </MenuItem>\r\n      </MenuContent>\r\n    </Menu>\r\n  ) : null;\r\n\r\n  const signupLink = isAuthenticatedOrJustHydrated ? null : (\r\n    <NamedLink name=\"SignupPage\" className={css.signupLink}>\r\n      <span className={css.signup}>\r\n        <FormattedMessage id=\"TopbarDesktop.signup\" />\r\n      </span>\r\n    </NamedLink>\r\n  );\r\n\r\n  const loginLink = isAuthenticatedOrJustHydrated ? null : (\r\n    <NamedLink name=\"LoginPage\" className={css.loginLink}>\r\n      <span className={css.login}>\r\n        <FormattedMessage id=\"TopbarDesktop.login\" />\r\n      </span>\r\n    </NamedLink>\r\n  );\r\n\r\n  return (\r\n    <nav className={classes}>\r\n      <NamedLink className={css.logoLink} name=\"LandingPage\">\r\n        <Logo\r\n          format=\"desktop\"\r\n          className={css.logo}\r\n          alt={intl.formatMessage({ id: 'TopbarDesktop.logo' })}\r\n        />\r\n      </NamedLink>\r\n      {search}\r\n      <NamedLink className={css.createListingLink} name=\"NewListingPage\">\r\n        <span className={css.createListing}>\r\n          <FormattedMessage id=\"TopbarDesktop.createListing\" />\r\n        </span>\r\n      </NamedLink>\r\n      {inboxLink}\r\n      {profileMenu}\r\n      {signupLink}\r\n      {loginLink}\r\n    </nav>\r\n  );\r\n};\r\n\r\nTopbarDesktop.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  currentUser: null,\r\n  currentPage: null,\r\n  notificationCount: 0,\r\n  initialSearchFormValues: {},\r\n  appConfig: null,\r\n};\r\n\r\nTopbarDesktop.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  currentUserHasListings: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  currentPage: string,\r\n  isAuthenticated: bool.isRequired,\r\n  onLogout: func.isRequired,\r\n  notificationCount: number,\r\n  onSearchSubmit: func.isRequired,\r\n  initialSearchFormValues: object,\r\n  intl: intlShape.isRequired,\r\n  appConfig: object,\r\n};\r\n\r\nexport default TopbarDesktop;\r\n"]},"metadata":{},"sourceType":"module"}