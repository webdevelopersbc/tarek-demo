{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\ResponsiveImage\\\\ResponsiveImage.example.js\";\nimport React from 'react';\nimport ResponsiveImage from './ResponsiveImage';\nimport { types as sdkTypes } from '../../util/sdkLoader';\nimport css from './ResponsiveImageExample.module.css';\nconst {\n  UUID\n} = sdkTypes;\n\nconst ResponsiveImageWrapper = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveImage, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c = ResponsiveImageWrapper;\n\nconst ResponsiveImageWrapperWithAspectRatio = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.aspectWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveImage, Object.assign({}, props, {\n    rootClassName: css.rootForImageWithAspectRatio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }))));\n};\n/* Image without aspect ratio wrapper */\n\n\n_c2 = ResponsiveImageWrapperWithAspectRatio;\nexport const Image2X = {\n  component: ResponsiveImageWrapper,\n  props: {\n    alt: 'img',\n    image: {\n      id: new UUID('empty'),\n      type: 'image',\n      attributes: {\n        variants: {\n          crop: {\n            name: 'crop',\n            width: 200,\n            height: 133,\n            url: 'https://via.placeholder.com/200x133'\n          },\n          crop2x: {\n            name: 'crop2x',\n            width: 400,\n            height: 266,\n            url: 'https://via.placeholder.com/400x266'\n          }\n        }\n      }\n    },\n    variants: ['crop', 'crop2x']\n  },\n  group: 'images'\n};\n/* Image with aspect ratio wrapper */\n\nexport const Image2XAspect = {\n  component: ResponsiveImageWrapperWithAspectRatio,\n  props: {\n    alt: 'img',\n    image: {\n      id: new UUID('empty'),\n      type: 'image',\n      attributes: {\n        variants: {\n          crop: {\n            name: 'crop',\n            width: 200,\n            height: 133,\n            url: 'https://via.placeholder.com/200x133'\n          },\n          crop2x: {\n            name: 'crop2x',\n            width: 400,\n            height: 266,\n            url: 'https://via.placeholder.com/400x266'\n          }\n        }\n      }\n    },\n    variants: ['crop', 'crop2x']\n  },\n  group: 'images'\n};\n/* Image with aspect ratio wrapper and wrong aspect */\n\nexport const Image2XWrongAspect = {\n  component: ResponsiveImageWrapperWithAspectRatio,\n  props: {\n    alt: 'img',\n    image: {\n      id: new UUID('empty'),\n      type: 'image',\n      attributes: {\n        variants: {\n          crop: {\n            name: 'crop',\n            width: 200,\n            height: 133,\n            url: 'https://via.placeholder.com/200x133'\n          },\n          crop2x: {\n            name: 'crop2x',\n            width: 400,\n            height: 266,\n            url: 'https://via.placeholder.com/400x266'\n          }\n        }\n      }\n    },\n    variants: ['crop', 'crop2x']\n  },\n  group: 'images'\n};\nexport const Image2XWrongAspectNoWrapper = {\n  component: ResponsiveImage,\n  props: {\n    alt: 'img',\n    image: {\n      id: new UUID('empty'),\n      type: 'image',\n      attributes: {\n        variants: {\n          crop: {\n            name: 'crop',\n            width: 200,\n            height: 133,\n            url: 'https://via.placeholder.com/200x133'\n          },\n          crop2x: {\n            name: 'crop2x',\n            width: 400,\n            height: 266,\n            url: 'https://via.placeholder.com/400x266'\n          }\n        }\n      }\n    },\n    variants: ['crop', 'crop2x']\n  },\n  group: 'images'\n};\n/* No image without aspect ratio wrapper */\n\nexport const ImageEmpty = {\n  component: ResponsiveImageWrapper,\n  props: {\n    alt: 'img',\n    image: null,\n    variants: ['crop', 'crop2x']\n  },\n  group: 'images'\n};\n/* No image with aspect ratio wrapper */\n\nexport const ImageEmptyWithAspect = {\n  component: ResponsiveImageWrapperWithAspectRatio,\n  props: {\n    alt: 'img',\n    image: null,\n    variants: ['crop', 'crop2x']\n  },\n  group: 'images'\n};\n/* Image without aspect ratio wrapper usign sizes */\n\nconst ResponsiveImageWrapperForSizes = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: css.rootForSizes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: css.aspectWrapper,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveImage, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 7\n  }\n}))));\n\n_c3 = ResponsiveImageWrapperForSizes;\nexport const ImageWithSizes = {\n  component: ResponsiveImageWrapperForSizes,\n  props: {\n    alt: 'img',\n    image: {\n      id: new UUID('empty'),\n      type: 'image',\n      attributes: {\n        variants: {\n          crop: {\n            name: 'crop',\n            width: 200,\n            height: 133,\n            url: 'https://via.placeholder.com/200x133'\n          },\n          crop2x: {\n            name: 'crop2x',\n            width: 400,\n            height: 266,\n            url: 'https://via.placeholder.com/400x266'\n          }\n        }\n      }\n    },\n    variants: ['crop', 'crop2x'],\n    sizes: '(max-width: 600px) 200px, 400px'\n  },\n  group: 'images'\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ResponsiveImageWrapper\");\n$RefreshReg$(_c2, \"ResponsiveImageWrapperWithAspectRatio\");\n$RefreshReg$(_c3, \"ResponsiveImageWrapperForSizes\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/ResponsiveImage/ResponsiveImage.example.js"],"names":["React","ResponsiveImage","types","sdkTypes","css","UUID","ResponsiveImageWrapper","props","root","ResponsiveImageWrapperWithAspectRatio","aspectWrapper","rootForImageWithAspectRatio","Image2X","component","alt","image","id","type","attributes","variants","crop","name","width","height","url","crop2x","group","Image2XAspect","Image2XWrongAspect","Image2XWrongAspectNoWrapper","ImageEmpty","ImageEmptyWithAspect","ResponsiveImageWrapperForSizes","rootForSizes","ImageWithSizes","sizes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ResponsiveImage from './ResponsiveImage';\r\nimport { types as sdkTypes } from '../../util/sdkLoader';\r\n\r\nimport css from './ResponsiveImageExample.module.css';\r\n\r\nconst { UUID } = sdkTypes;\r\n\r\nconst ResponsiveImageWrapper = props => {\r\n  return (\r\n    <div className={css.root}>\r\n      <ResponsiveImage {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResponsiveImageWrapperWithAspectRatio = props => {\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={css.aspectWrapper}>\r\n        <ResponsiveImage {...props} rootClassName={css.rootForImageWithAspectRatio} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/* Image without aspect ratio wrapper */\r\nexport const Image2X = {\r\n  component: ResponsiveImageWrapper,\r\n  props: {\r\n    alt: 'img',\r\n    image: {\r\n      id: new UUID('empty'),\r\n      type: 'image',\r\n      attributes: {\r\n        variants: {\r\n          crop: {\r\n            name: 'crop',\r\n            width: 200,\r\n            height: 133,\r\n            url: 'https://via.placeholder.com/200x133',\r\n          },\r\n          crop2x: {\r\n            name: 'crop2x',\r\n            width: 400,\r\n            height: 266,\r\n            url: 'https://via.placeholder.com/400x266',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    variants: ['crop', 'crop2x'],\r\n  },\r\n  group: 'images',\r\n};\r\n\r\n/* Image with aspect ratio wrapper */\r\nexport const Image2XAspect = {\r\n  component: ResponsiveImageWrapperWithAspectRatio,\r\n  props: {\r\n    alt: 'img',\r\n    image: {\r\n      id: new UUID('empty'),\r\n      type: 'image',\r\n      attributes: {\r\n        variants: {\r\n          crop: {\r\n            name: 'crop',\r\n            width: 200,\r\n            height: 133,\r\n            url: 'https://via.placeholder.com/200x133',\r\n          },\r\n          crop2x: {\r\n            name: 'crop2x',\r\n            width: 400,\r\n            height: 266,\r\n            url: 'https://via.placeholder.com/400x266',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    variants: ['crop', 'crop2x'],\r\n  },\r\n  group: 'images',\r\n};\r\n\r\n/* Image with aspect ratio wrapper and wrong aspect */\r\nexport const Image2XWrongAspect = {\r\n  component: ResponsiveImageWrapperWithAspectRatio,\r\n  props: {\r\n    alt: 'img',\r\n    image: {\r\n      id: new UUID('empty'),\r\n      type: 'image',\r\n      attributes: {\r\n        variants: {\r\n          crop: {\r\n            name: 'crop',\r\n            width: 200,\r\n            height: 133,\r\n            url: 'https://via.placeholder.com/200x133',\r\n          },\r\n          crop2x: {\r\n            name: 'crop2x',\r\n            width: 400,\r\n            height: 266,\r\n            url: 'https://via.placeholder.com/400x266',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    variants: ['crop', 'crop2x'],\r\n  },\r\n  group: 'images',\r\n};\r\n\r\nexport const Image2XWrongAspectNoWrapper = {\r\n  component: ResponsiveImage,\r\n  props: {\r\n    alt: 'img',\r\n    image: {\r\n      id: new UUID('empty'),\r\n      type: 'image',\r\n      attributes: {\r\n        variants: {\r\n          crop: {\r\n            name: 'crop',\r\n            width: 200,\r\n            height: 133,\r\n            url: 'https://via.placeholder.com/200x133',\r\n          },\r\n          crop2x: {\r\n            name: 'crop2x',\r\n            width: 400,\r\n            height: 266,\r\n            url: 'https://via.placeholder.com/400x266',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    variants: ['crop', 'crop2x'],\r\n  },\r\n  group: 'images',\r\n};\r\n\r\n/* No image without aspect ratio wrapper */\r\nexport const ImageEmpty = {\r\n  component: ResponsiveImageWrapper,\r\n  props: {\r\n    alt: 'img',\r\n    image: null,\r\n    variants: ['crop', 'crop2x'],\r\n  },\r\n  group: 'images',\r\n};\r\n\r\n/* No image with aspect ratio wrapper */\r\nexport const ImageEmptyWithAspect = {\r\n  component: ResponsiveImageWrapperWithAspectRatio,\r\n  props: {\r\n    alt: 'img',\r\n    image: null,\r\n    variants: ['crop', 'crop2x'],\r\n  },\r\n  group: 'images',\r\n};\r\n\r\n/* Image without aspect ratio wrapper usign sizes */\r\nconst ResponsiveImageWrapperForSizes = props => (\r\n  <div className={css.rootForSizes}>\r\n    <div className={css.aspectWrapper}>\r\n      <ResponsiveImage {...props} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const ImageWithSizes = {\r\n  component: ResponsiveImageWrapperForSizes,\r\n  props: {\r\n    alt: 'img',\r\n    image: {\r\n      id: new UUID('empty'),\r\n      type: 'image',\r\n      attributes: {\r\n        variants: {\r\n          crop: {\r\n            name: 'crop',\r\n            width: 200,\r\n            height: 133,\r\n            url: 'https://via.placeholder.com/200x133',\r\n          },\r\n          crop2x: {\r\n            name: 'crop2x',\r\n            width: 400,\r\n            height: 266,\r\n            url: 'https://via.placeholder.com/400x266',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    variants: ['crop', 'crop2x'],\r\n    sizes: '(max-width: 600px) 200px, 400px',\r\n  },\r\n  group: 'images',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}