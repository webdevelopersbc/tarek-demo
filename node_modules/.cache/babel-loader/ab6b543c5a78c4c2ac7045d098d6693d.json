{"ast":null,"code":"'use strict';\n\nvar ToInteger = require('es-abstract/2020/ToInteger');\n\nvar ToLength = require('es-abstract/2020/ToLength');\n\nvar ToObject = require('es-abstract/2020/ToObject');\n\nvar SameValueZero = require('es-abstract/2020/SameValueZero');\n\nvar $isNaN = require('es-abstract/helpers/isNaN');\n\nvar $isFinite = require('es-abstract/helpers/isFinite');\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBound = require('call-bind/callBound');\n\nvar isString = require('is-string');\n\nvar $charAt = callBound('String.prototype.charAt');\nvar $indexOf = GetIntrinsic('%Array.prototype.indexOf%'); // TODO: use callBind.apply without breaking IE 8\n\nmodule.exports = function includes(searchElement) {\n  var fromIndex = arguments.length > 1 ? ToInteger(arguments[1]) : 0;\n\n  if ($indexOf && !$isNaN(searchElement) && $isFinite(fromIndex) && typeof searchElement !== 'undefined') {\n    return $indexOf.apply(this, arguments) > -1;\n  }\n\n  var O = ToObject(this);\n  var length = ToLength(O.length);\n\n  if (length === 0) {\n    return false;\n  }\n\n  var k = fromIndex >= 0 ? fromIndex : Math.max(0, length + fromIndex);\n\n  while (k < length) {\n    if (SameValueZero(searchElement, isString(O) ? $charAt(O, k) : O[k])) {\n      return true;\n    }\n\n    k += 1;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/node_modules/array-includes/implementation.js"],"names":["ToInteger","require","ToLength","ToObject","SameValueZero","$isNaN","$isFinite","GetIntrinsic","callBound","isString","$charAt","$indexOf","module","exports","includes","searchElement","fromIndex","arguments","length","apply","O","k","Math","max"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,4BAAD,CAAvB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,gCAAD,CAA3B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,2BAAD,CAApB;;AACA,IAAIK,SAAS,GAAGL,OAAO,CAAC,8BAAD,CAAvB;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIS,OAAO,GAAGF,SAAS,CAAC,yBAAD,CAAvB;AACA,IAAIG,QAAQ,GAAGJ,YAAY,CAAC,2BAAD,CAA3B,C,CAA0D;;AAE1DK,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AACjD,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBlB,SAAS,CAACiB,SAAS,CAAC,CAAD,CAAV,CAAhC,GAAiD,CAAjE;;AACA,MAAIN,QAAQ,IAAI,CAACN,MAAM,CAACU,aAAD,CAAnB,IAAsCT,SAAS,CAACU,SAAD,CAA/C,IAA8D,OAAOD,aAAP,KAAyB,WAA3F,EAAwG;AACvG,WAAOJ,QAAQ,CAACQ,KAAT,CAAe,IAAf,EAAqBF,SAArB,IAAkC,CAAC,CAA1C;AACA;;AAED,MAAIG,CAAC,GAAGjB,QAAQ,CAAC,IAAD,CAAhB;AACA,MAAIe,MAAM,GAAGhB,QAAQ,CAACkB,CAAC,CAACF,MAAH,CAArB;;AACA,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACjB,WAAO,KAAP;AACA;;AACD,MAAIG,CAAC,GAAGL,SAAS,IAAI,CAAb,GAAiBA,SAAjB,GAA6BM,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,MAAM,GAAGF,SAArB,CAArC;;AACA,SAAOK,CAAC,GAAGH,MAAX,EAAmB;AAClB,QAAId,aAAa,CAACW,aAAD,EAAgBN,QAAQ,CAACW,CAAD,CAAR,GAAcV,OAAO,CAACU,CAAD,EAAIC,CAAJ,CAArB,GAA8BD,CAAC,CAACC,CAAD,CAA/C,CAAjB,EAAsE;AACrE,aAAO,IAAP;AACA;;AACDA,IAAAA,CAAC,IAAI,CAAL;AACA;;AACD,SAAO,KAAP;AACA,CAnBD","sourcesContent":["'use strict';\n\nvar ToInteger = require('es-abstract/2020/ToInteger');\nvar ToLength = require('es-abstract/2020/ToLength');\nvar ToObject = require('es-abstract/2020/ToObject');\nvar SameValueZero = require('es-abstract/2020/SameValueZero');\nvar $isNaN = require('es-abstract/helpers/isNaN');\nvar $isFinite = require('es-abstract/helpers/isFinite');\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar isString = require('is-string');\n\nvar $charAt = callBound('String.prototype.charAt');\nvar $indexOf = GetIntrinsic('%Array.prototype.indexOf%'); // TODO: use callBind.apply without breaking IE 8\n\nmodule.exports = function includes(searchElement) {\n\tvar fromIndex = arguments.length > 1 ? ToInteger(arguments[1]) : 0;\n\tif ($indexOf && !$isNaN(searchElement) && $isFinite(fromIndex) && typeof searchElement !== 'undefined') {\n\t\treturn $indexOf.apply(this, arguments) > -1;\n\t}\n\n\tvar O = ToObject(this);\n\tvar length = ToLength(O.length);\n\tif (length === 0) {\n\t\treturn false;\n\t}\n\tvar k = fromIndex >= 0 ? fromIndex : Math.max(0, length + fromIndex);\n\twhile (k < length) {\n\t\tif (SameValueZero(searchElement, isString(O) ? $charAt(O, k) : O[k])) {\n\t\t\treturn true;\n\t\t}\n\t\tk += 1;\n\t}\n\treturn false;\n};\n"]},"metadata":{},"sourceType":"script"}