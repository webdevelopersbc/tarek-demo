{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\SavedCardDetails\\\\SavedCardDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { bool, func, number, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { injectIntl, intlShape } from '../../util/reactIntl';\nimport { IconArrowHead, IconCard, IconClose, IconCheckmark, Button, InlineTextButton, Menu, MenuLabel, MenuItem, MenuContent, Modal } from '../../components';\nimport css from './SavedCardDetails.module.css';\nconst DEFAULT_CARD = 'defaultCard';\nconst REPLACE_CARD = 'replaceCard';\n\nconst SavedCardDetails = props => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [active, setActive] = useState(DEFAULT_CARD);\n  const {\n    rootClassName,\n    className,\n    intl,\n    card,\n    onChange,\n    onDeleteCard,\n    onManageDisableScrolling,\n    deletePaymentMethodInProgress\n  } = props;\n  const {\n    last4Digits,\n    expirationMonth,\n    expirationYear,\n    brand\n  } = card || {};\n  const classes = classNames(rootClassName || css.root, className);\n  const paymentMethodPlaceholderDesktop = intl.formatMessage({\n    id: 'SavedCardDetails.savedPaymentMethodPlaceholderDesktop'\n  }, {\n    last4Digits\n  });\n  const paymentMethodPlaceholderMobile = intl.formatMessage({\n    id: 'SavedCardDetails.savedPaymentMethodPlaceholderMobile'\n  }, {\n    last4Digits\n  });\n  const paymentMethodPlaceholder = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.paymentMethodPlaceholderDesktop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, paymentMethodPlaceholderDesktop), /*#__PURE__*/React.createElement(\"span\", {\n    className: css.paymentMethodPlaceholderMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, paymentMethodPlaceholderMobile));\n  const replaceCardText = intl.formatMessage({\n    id: 'SavedCardDetails.replaceCardText'\n  });\n  const replaceCard = /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconCard, {\n    brand: \"none\",\n    className: css.cardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), \" \", replaceCardText);\n  const expiredCardText = intl.formatMessage({\n    id: 'SavedCardDetails.expiredCardText'\n  }, {\n    last4Digits\n  });\n  const expiredText = /*#__PURE__*/React.createElement(\"div\", {\n    className: css.cardExpiredText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, expiredCardText);\n\n  const isExpired = (expirationMonth, expirationYear) => {\n    const currentTime = new Date();\n    const currentYear = currentTime.getFullYear();\n    const currentMonth = currentTime.getMonth() + 1; //getMonth() method returns the month (from 0 to 11)\n\n    if (expirationYear < currentYear) {\n      return true;\n    } else if (expirationYear === currentYear && expirationMonth < currentMonth) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isCardExpired = expirationMonth && expirationYear && isExpired(expirationMonth, expirationYear);\n  const defaultCard = /*#__PURE__*/React.createElement(\"div\", {\n    className: css.savedPaymentMethod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconCard, {\n    brand: brand,\n    className: css.cardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), paymentMethodPlaceholder, /*#__PURE__*/React.createElement(\"span\", {\n    className: isCardExpired ? css.expirationDateExpired : css.expirationDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, expirationMonth, \"/\", expirationYear.toString().substring(2)));\n\n  const handleClick = item => e => {\n    // Clicking buttons inside a form will call submit\n    e.preventDefault();\n    e.stopPropagation();\n    setActive(item);\n    setMenuOpen(false);\n\n    if (onChange) {\n      onChange(item);\n    }\n  };\n\n  const onToggleActive = isOpen => {\n    setMenuOpen(isOpen);\n  };\n\n  const handleDeleteCard = () => {\n    setIsModalOpen(true);\n  };\n\n  const iconArrowClassName = menuOpen ? css.IconArrowAnimation : null;\n  const replaceCardTitle = intl.formatMessage({\n    id: 'SavedCardDetails.replaceCardTitle'\n  });\n  const removeCardModalTitle = intl.formatMessage({\n    id: 'SavedCardDetails.removeCardModalTitle'\n  });\n  const removeCardModalContent = intl.formatMessage({\n    id: 'SavedCardDetails.removeCardModalContent'\n  }, {\n    last4Digits\n  });\n  const cancel = intl.formatMessage({\n    id: 'SavedCardDetails.cancel'\n  });\n  const removeCard = intl.formatMessage({\n    id: 'SavedCardDetails.removeCard'\n  });\n  const deletePaymentMethod = intl.formatMessage({\n    id: 'SavedCardDetails.deletePaymentMethod'\n  });\n  const showExpired = isCardExpired && active === DEFAULT_CARD;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    className: css.menu,\n    isOpen: menuOpen,\n    onToggleActive: onToggleActive,\n    useArrow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuLabel, {\n    className: css.menuLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: showExpired ? css.menuLabelWrapperExpired : css.menuLabelWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, active === DEFAULT_CARD ? defaultCard : replaceCard, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconArrowHead, {\n    direction: \"down\",\n    size: \"small\",\n    rootClassName: css.iconArrow,\n    className: iconArrowClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(MenuContent, {\n    rootClassName: css.menuContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"first item\",\n    className: css.menuItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconCheckmark, {\n    className: active === DEFAULT_CARD ? css.iconCheckmark : css.iconCheckmarkHidden,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InlineTextButton, {\n    className: css.menuText,\n    onClick: handleClick(DEFAULT_CARD),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, defaultCard)), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"divider\",\n    className: css.menuDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, replaceCardTitle), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"second item\",\n    className: css.menuItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconCheckmark, {\n    className: active === REPLACE_CARD ? css.iconCheckmark : css.iconCheckmarkHidden,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InlineTextButton, {\n    className: css.menuTextReplaceCard,\n    onClick: handleClick(REPLACE_CARD),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, replaceCard)))), showExpired && !menuOpen ? expiredText : null, onDeleteCard && active !== REPLACE_CARD ? /*#__PURE__*/React.createElement(InlineTextButton, {\n    onClick: handleDeleteCard,\n    className: css.savedPaymentMethodDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconClose, {\n    rootClassName: css.closeIcon,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), deletePaymentMethod) : null, onManageDisableScrolling ? /*#__PURE__*/React.createElement(Modal, {\n    id: \"VerifyDeletingPaymentMethod\",\n    isOpen: isModalOpen,\n    onClose: () => {\n      setIsModalOpen(false);\n    },\n    usePortal: true,\n    contentClassName: css.modalContent,\n    onManageDisableScrolling: onManageDisableScrolling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.modalTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, removeCardModalTitle), /*#__PURE__*/React.createElement(\"p\", {\n    className: css.modalMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, removeCardModalContent), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.modalButtonsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setIsModalOpen(false),\n    className: css.cancelCardDelete,\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, cancel), /*#__PURE__*/React.createElement(Button, {\n    onClick: onDeleteCard,\n    inProgress: deletePaymentMethodInProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, removeCard)))) : null);\n};\n\n_s(SavedCardDetails, \"h/kdpYHqlBobdjswUvHw1eAlxmg=\");\n\n_c = SavedCardDetails;\nSavedCardDetails.defaultProps = {\n  rootClassName: null,\n  className: null,\n  card: null,\n  onChange: null,\n  onDeleteCard: null,\n  deletePaymentMethodInProgress: false,\n  onManageDisableScrolling: null\n};\nSavedCardDetails.propTypes = {\n  rootClassName: string,\n  className: string,\n  intl: intlShape.isRequired,\n  card: shape({\n    brand: string.isRequired,\n    expirationMonth: number.isRequired,\n    expirationYear: number.isRequired,\n    last4Digits: string.isRequired\n  }),\n  onChange: func,\n  onDeleteCard: func,\n  onManageDisableScrolling: func,\n  deletePaymentMethodInProgress: bool\n};\nexport default _c2 = injectIntl(SavedCardDetails);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SavedCardDetails\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/SavedCardDetails/SavedCardDetails.js"],"names":["React","useState","bool","func","number","shape","string","classNames","injectIntl","intlShape","IconArrowHead","IconCard","IconClose","IconCheckmark","Button","InlineTextButton","Menu","MenuLabel","MenuItem","MenuContent","Modal","css","DEFAULT_CARD","REPLACE_CARD","SavedCardDetails","props","isModalOpen","setIsModalOpen","menuOpen","setMenuOpen","active","setActive","rootClassName","className","intl","card","onChange","onDeleteCard","onManageDisableScrolling","deletePaymentMethodInProgress","last4Digits","expirationMonth","expirationYear","brand","classes","root","paymentMethodPlaceholderDesktop","formatMessage","id","paymentMethodPlaceholderMobile","paymentMethodPlaceholder","replaceCardText","replaceCard","cardIcon","expiredCardText","expiredText","cardExpiredText","isExpired","currentTime","Date","currentYear","getFullYear","currentMonth","getMonth","isCardExpired","defaultCard","savedPaymentMethod","expirationDateExpired","expirationDate","toString","substring","handleClick","item","e","preventDefault","stopPropagation","onToggleActive","isOpen","handleDeleteCard","iconArrowClassName","IconArrowAnimation","replaceCardTitle","removeCardModalTitle","removeCardModalContent","cancel","removeCard","deletePaymentMethod","showExpired","menu","menuLabel","menuLabelWrapperExpired","menuLabelWrapper","iconArrow","menuContent","menuItem","iconCheckmark","iconCheckmarkHidden","menuText","menuDivider","menuTextReplaceCard","savedPaymentMethodDelete","closeIcon","modalContent","modalTitle","modalMessage","modalButtonsWrapper","cancelCardDelete","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { bool, func, number, shape, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { injectIntl, intlShape } from '../../util/reactIntl';\r\nimport {\r\n  IconArrowHead,\r\n  IconCard,\r\n  IconClose,\r\n  IconCheckmark,\r\n  Button,\r\n  InlineTextButton,\r\n  Menu,\r\n  MenuLabel,\r\n  MenuItem,\r\n  MenuContent,\r\n  Modal,\r\n} from '../../components';\r\nimport css from './SavedCardDetails.module.css';\r\n\r\nconst DEFAULT_CARD = 'defaultCard';\r\nconst REPLACE_CARD = 'replaceCard';\r\n\r\nconst SavedCardDetails = props => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [active, setActive] = useState(DEFAULT_CARD);\r\n\r\n  const {\r\n    rootClassName,\r\n    className,\r\n    intl,\r\n    card,\r\n    onChange,\r\n    onDeleteCard,\r\n    onManageDisableScrolling,\r\n    deletePaymentMethodInProgress,\r\n  } = props;\r\n\r\n  const { last4Digits, expirationMonth, expirationYear, brand } = card || {};\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  const paymentMethodPlaceholderDesktop = intl.formatMessage(\r\n    { id: 'SavedCardDetails.savedPaymentMethodPlaceholderDesktop' },\r\n    { last4Digits }\r\n  );\r\n\r\n  const paymentMethodPlaceholderMobile = intl.formatMessage(\r\n    { id: 'SavedCardDetails.savedPaymentMethodPlaceholderMobile' },\r\n    { last4Digits }\r\n  );\r\n\r\n  const paymentMethodPlaceholder = (\r\n    <>\r\n      <span className={css.paymentMethodPlaceholderDesktop}>{paymentMethodPlaceholderDesktop}</span>\r\n      <span className={css.paymentMethodPlaceholderMobile}>{paymentMethodPlaceholderMobile}</span>\r\n    </>\r\n  );\r\n\r\n  const replaceCardText = intl.formatMessage({\r\n    id: 'SavedCardDetails.replaceCardText',\r\n  });\r\n  const replaceCard = (\r\n    <span>\r\n      <IconCard brand=\"none\" className={css.cardIcon} /> {replaceCardText}\r\n    </span>\r\n  );\r\n\r\n  const expiredCardText = intl.formatMessage(\r\n    { id: 'SavedCardDetails.expiredCardText' },\r\n    { last4Digits }\r\n  );\r\n  const expiredText = <div className={css.cardExpiredText}>{expiredCardText}</div>;\r\n\r\n  const isExpired = (expirationMonth, expirationYear) => {\r\n    const currentTime = new Date();\r\n    const currentYear = currentTime.getFullYear();\r\n    const currentMonth = currentTime.getMonth() + 1; //getMonth() method returns the month (from 0 to 11)\r\n\r\n    if (expirationYear < currentYear) {\r\n      return true;\r\n    } else if (expirationYear === currentYear && expirationMonth < currentMonth) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const isCardExpired =\r\n    expirationMonth && expirationYear && isExpired(expirationMonth, expirationYear);\r\n\r\n  const defaultCard = (\r\n    <div className={css.savedPaymentMethod}>\r\n      <IconCard brand={brand} className={css.cardIcon} />\r\n      {paymentMethodPlaceholder}\r\n      <span className={isCardExpired ? css.expirationDateExpired : css.expirationDate}>\r\n        {expirationMonth}/{expirationYear.toString().substring(2)}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  const handleClick = item => e => {\r\n    // Clicking buttons inside a form will call submit\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    setActive(item);\r\n    setMenuOpen(false);\r\n    if (onChange) {\r\n      onChange(item);\r\n    }\r\n  };\r\n\r\n  const onToggleActive = isOpen => {\r\n    setMenuOpen(isOpen);\r\n  };\r\n\r\n  const handleDeleteCard = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const iconArrowClassName = menuOpen ? css.IconArrowAnimation : null;\r\n\r\n  const replaceCardTitle = intl.formatMessage({\r\n    id: 'SavedCardDetails.replaceCardTitle',\r\n  });\r\n  const removeCardModalTitle = intl.formatMessage({ id: 'SavedCardDetails.removeCardModalTitle' });\r\n  const removeCardModalContent = intl.formatMessage(\r\n    { id: 'SavedCardDetails.removeCardModalContent' },\r\n    { last4Digits }\r\n  );\r\n  const cancel = intl.formatMessage({ id: 'SavedCardDetails.cancel' });\r\n  const removeCard = intl.formatMessage({ id: 'SavedCardDetails.removeCard' });\r\n  const deletePaymentMethod = intl.formatMessage({ id: 'SavedCardDetails.deletePaymentMethod' });\r\n\r\n  const showExpired = isCardExpired && active === DEFAULT_CARD;\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <Menu className={css.menu} isOpen={menuOpen} onToggleActive={onToggleActive} useArrow={false}>\r\n        <MenuLabel className={css.menuLabel}>\r\n          <div className={showExpired ? css.menuLabelWrapperExpired : css.menuLabelWrapper}>\r\n            {active === DEFAULT_CARD ? defaultCard : replaceCard}\r\n            <span>\r\n              <IconArrowHead\r\n                direction=\"down\"\r\n                size=\"small\"\r\n                rootClassName={css.iconArrow}\r\n                className={iconArrowClassName}\r\n              />\r\n            </span>\r\n          </div>\r\n        </MenuLabel>\r\n\r\n        <MenuContent rootClassName={css.menuContent}>\r\n          <MenuItem key=\"first item\" className={css.menuItem}>\r\n            <IconCheckmark\r\n              className={active === DEFAULT_CARD ? css.iconCheckmark : css.iconCheckmarkHidden}\r\n              size=\"small\"\r\n            />\r\n            <InlineTextButton className={css.menuText} onClick={handleClick(DEFAULT_CARD)}>\r\n              {defaultCard}\r\n            </InlineTextButton>\r\n          </MenuItem>\r\n          <MenuItem key=\"divider\" className={css.menuDivider}>\r\n            {replaceCardTitle}\r\n          </MenuItem>\r\n          <MenuItem key=\"second item\" className={css.menuItem}>\r\n            <IconCheckmark\r\n              className={active === REPLACE_CARD ? css.iconCheckmark : css.iconCheckmarkHidden}\r\n              size=\"small\"\r\n            />\r\n            <InlineTextButton\r\n              className={css.menuTextReplaceCard}\r\n              onClick={handleClick(REPLACE_CARD)}\r\n            >\r\n              {replaceCard}\r\n            </InlineTextButton>\r\n          </MenuItem>\r\n        </MenuContent>\r\n      </Menu>\r\n      {showExpired && !menuOpen ? expiredText : null}\r\n\r\n      {onDeleteCard && active !== REPLACE_CARD ? (\r\n        <InlineTextButton onClick={handleDeleteCard} className={css.savedPaymentMethodDelete}>\r\n          <IconClose rootClassName={css.closeIcon} size=\"small\" />\r\n          {deletePaymentMethod}\r\n        </InlineTextButton>\r\n      ) : null}\r\n\r\n      {onManageDisableScrolling ? (\r\n        <Modal\r\n          id=\"VerifyDeletingPaymentMethod\"\r\n          isOpen={isModalOpen}\r\n          onClose={() => {\r\n            setIsModalOpen(false);\r\n          }}\r\n          usePortal\r\n          contentClassName={css.modalContent}\r\n          onManageDisableScrolling={onManageDisableScrolling}\r\n        >\r\n          <div>\r\n            <div className={css.modalTitle}>{removeCardModalTitle}</div>\r\n            <p className={css.modalMessage}>{removeCardModalContent}</p>\r\n            <div className={css.modalButtonsWrapper}>\r\n              <div\r\n                onClick={() => setIsModalOpen(false)}\r\n                className={css.cancelCardDelete}\r\n                tabIndex=\"0\"\r\n              >\r\n                {cancel}\r\n              </div>\r\n              <Button onClick={onDeleteCard} inProgress={deletePaymentMethodInProgress}>\r\n                {removeCard}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nSavedCardDetails.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  card: null,\r\n  onChange: null,\r\n  onDeleteCard: null,\r\n  deletePaymentMethodInProgress: false,\r\n  onManageDisableScrolling: null,\r\n};\r\n\r\nSavedCardDetails.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  intl: intlShape.isRequired,\r\n  card: shape({\r\n    brand: string.isRequired,\r\n    expirationMonth: number.isRequired,\r\n    expirationYear: number.isRequired,\r\n    last4Digits: string.isRequired,\r\n  }),\r\n  onChange: func,\r\n  onDeleteCard: func,\r\n  onManageDisableScrolling: func,\r\n  deletePaymentMethodInProgress: bool,\r\n};\r\n\r\nexport default injectIntl(SavedCardDetails);\r\n"]},"metadata":{},"sourceType":"module"}