{"ast":null,"code":"import { storableError } from '../../util/errors'; // ================ Action types ================ //\n\nexport const RECOVERY_REQUEST = 'app/PasswordRecoveryPage/RECOVERY_REQUEST';\nexport const RECOVERY_SUCCESS = 'app/PasswordRecoveryPage/RECOVERY_SUCCESS';\nexport const RECOVERY_ERROR = 'app/PasswordRecoveryPage/RECOVERY_ERROR';\nexport const RETYPE_EMAIL = 'app/PasswordRecoveryPage/RETYPE_EMAIL';\nexport const CLEAR_RECOVERY_ERROR = 'app/PasswordRecoveryPage/CLEAR_RECOVERY_ERROR'; // ================ Reducer ================ //\n\nconst initialState = {\n  initialEmail: null,\n  submittedEmail: null,\n  recoveryError: null,\n  recoveryInProgress: false,\n  passwordRequested: false\n};\nexport default function reducer(state = initialState, action = {}) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case RECOVERY_REQUEST:\n      return { ...state,\n        submittedEmail: null,\n        recoveryInProgress: true,\n        recoveryError: null\n      };\n\n    case RECOVERY_SUCCESS:\n      return { ...state,\n        submittedEmail: payload.email,\n        initialEmail: payload.email,\n        recoveryInProgress: false,\n        passwordRequested: true\n      };\n\n    case RECOVERY_ERROR:\n      return { ...state,\n        recoveryInProgress: false,\n        recoveryError: payload.error,\n        initialEmail: payload.email\n      };\n\n    case RETYPE_EMAIL:\n      return { ...state,\n        initialEmail: state.submittedEmail,\n        submittedEmail: null,\n        passwordRequested: false\n      };\n\n    case CLEAR_RECOVERY_ERROR:\n      return { ...state,\n        recoveryError: null\n      };\n\n    default:\n      return state;\n  }\n} // ================ Action creators ================ //\n\nexport const passwordRecoveryRequest = () => ({\n  type: RECOVERY_REQUEST\n});\nexport const passwordRecoverySuccess = email => ({\n  type: RECOVERY_SUCCESS,\n  payload: {\n    email\n  }\n});\nexport const passwordRecoveryError = (error, email) => ({\n  type: RECOVERY_ERROR,\n  payload: {\n    error,\n    email\n  },\n  error: true\n});\nexport const retypePasswordRecoveryEmail = () => ({\n  type: RETYPE_EMAIL\n});\nexport const clearPasswordRecoveryError = () => ({\n  type: CLEAR_RECOVERY_ERROR\n}); // ================ Thunks ================ //\n\nexport const recoverPassword = email => (dispatch, getState, sdk) => {\n  dispatch(passwordRecoveryRequest());\n  return sdk.passwordReset.request({\n    email\n  }).then(() => dispatch(passwordRecoverySuccess(email))).catch(e => dispatch(passwordRecoveryError(storableError(e), email)));\n};","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/PasswordRecoveryPage/PasswordRecoveryPage.duck.js"],"names":["storableError","RECOVERY_REQUEST","RECOVERY_SUCCESS","RECOVERY_ERROR","RETYPE_EMAIL","CLEAR_RECOVERY_ERROR","initialState","initialEmail","submittedEmail","recoveryError","recoveryInProgress","passwordRequested","reducer","state","action","type","payload","email","error","passwordRecoveryRequest","passwordRecoverySuccess","passwordRecoveryError","retypePasswordRecoveryEmail","clearPasswordRecoveryError","recoverPassword","dispatch","getState","sdk","passwordReset","request","then","catch","e"],"mappings":"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","sourcesContent":["import { storableError } from '../../util/errors';\r\n\r\n// ================ Action types ================ //\r\n\r\nexport const RECOVERY_REQUEST = 'app/PasswordRecoveryPage/RECOVERY_REQUEST';\r\nexport const RECOVERY_SUCCESS = 'app/PasswordRecoveryPage/RECOVERY_SUCCESS';\r\nexport const RECOVERY_ERROR = 'app/PasswordRecoveryPage/RECOVERY_ERROR';\r\nexport const RETYPE_EMAIL = 'app/PasswordRecoveryPage/RETYPE_EMAIL';\r\nexport const CLEAR_RECOVERY_ERROR = 'app/PasswordRecoveryPage/CLEAR_RECOVERY_ERROR';\r\n\r\n// ================ Reducer ================ //\r\n\r\nconst initialState = {\r\n  initialEmail: null,\r\n  submittedEmail: null,\r\n  recoveryError: null,\r\n  recoveryInProgress: false,\r\n  passwordRequested: false,\r\n};\r\n\r\nexport default function reducer(state = initialState, action = {}) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case RECOVERY_REQUEST:\r\n      return {\r\n        ...state,\r\n        submittedEmail: null,\r\n        recoveryInProgress: true,\r\n        recoveryError: null,\r\n      };\r\n    case RECOVERY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        submittedEmail: payload.email,\r\n        initialEmail: payload.email,\r\n        recoveryInProgress: false,\r\n        passwordRequested: true,\r\n      };\r\n    case RECOVERY_ERROR:\r\n      return {\r\n        ...state,\r\n        recoveryInProgress: false,\r\n        recoveryError: payload.error,\r\n        initialEmail: payload.email,\r\n      };\r\n    case RETYPE_EMAIL:\r\n      return {\r\n        ...state,\r\n        initialEmail: state.submittedEmail,\r\n        submittedEmail: null,\r\n        passwordRequested: false,\r\n      };\r\n    case CLEAR_RECOVERY_ERROR:\r\n      return { ...state, recoveryError: null };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// ================ Action creators ================ //\r\n\r\nexport const passwordRecoveryRequest = () => ({ type: RECOVERY_REQUEST });\r\nexport const passwordRecoverySuccess = email => ({ type: RECOVERY_SUCCESS, payload: { email } });\r\nexport const passwordRecoveryError = (error, email) => ({\r\n  type: RECOVERY_ERROR,\r\n  payload: { error, email },\r\n  error: true,\r\n});\r\nexport const retypePasswordRecoveryEmail = () => ({ type: RETYPE_EMAIL });\r\nexport const clearPasswordRecoveryError = () => ({ type: CLEAR_RECOVERY_ERROR });\r\n\r\n// ================ Thunks ================ //\r\n\r\nexport const recoverPassword = email => (dispatch, getState, sdk) => {\r\n  dispatch(passwordRecoveryRequest());\r\n\r\n  return sdk.passwordReset\r\n    .request({ email })\r\n    .then(() => dispatch(passwordRecoverySuccess(email)))\r\n    .catch(e => dispatch(passwordRecoveryError(storableError(e), email)));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}