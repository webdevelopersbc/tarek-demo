{"ast":null,"code":"/**\r\n * This module defines custom PropTypes shared within the application.\r\n *\r\n * To learn about validating React component props with PropTypes, see:\r\n *\r\n *     https://facebook.github.io/react/docs/typechecking-with-proptypes.html\r\n *\r\n * For component specific PropTypes, it's perfectly ok to inline them\r\n * to the component itself. If the type is shared or external (SDK or\r\n * API), however, it should be in this file for sharing with other\r\n * components.\r\n *\r\n * PropTypes should usually be validated only at the lowest level\r\n * where the props are used, not along the way in parents that pass\r\n * along the props to their children. Those parents should usually\r\n * just validate the presense of the prop key and that the value is\r\n * defined. This way we get the validation errors only in the most\r\n * specific place and avoid duplicate errros.\r\n */\nimport { arrayOf, bool, func, instanceOf, node, number, object, objectOf, oneOf, oneOfType, shape, string } from 'prop-types';\nimport Decimal from 'decimal.js';\nimport { types as sdkTypes } from './sdkLoader';\nimport { TRANSITIONS, TX_TRANSITION_ACTORS } from './transaction';\nconst {\n  UUID,\n  LatLng,\n  LatLngBounds,\n  Money\n} = sdkTypes;\nconst propTypes = {}; // Fixed value\n\npropTypes.value = val => oneOf([val]); // SDK type instances\n\n\npropTypes.uuid = instanceOf(UUID);\npropTypes.latlng = instanceOf(LatLng);\npropTypes.latlngBounds = instanceOf(LatLngBounds);\npropTypes.money = instanceOf(Money); // Configuration for currency formatting\n\npropTypes.currencyConfig = shape({\n  style: string.isRequired,\n  currency: string.isRequired,\n  currencyDisplay: string,\n  useGrouping: bool,\n  minimumFractionDigits: number,\n  maximumFractionDigits: number\n}); // Configuration for a single route\n\npropTypes.route = shape({\n  name: string.isRequired,\n  path: string.isRequired,\n  exact: bool,\n  strict: bool,\n  component: oneOfType([object, func]).isRequired,\n  loadData: func\n}); // Place object from LocationAutocompleteInput\n\npropTypes.place = shape({\n  address: string.isRequired,\n  origin: propTypes.latlng,\n  bounds: propTypes.latlngBounds // optional viewport bounds\n\n}); // Denormalised image object\n\npropTypes.image = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('image').isRequired,\n  attributes: shape({\n    variants: objectOf(shape({\n      width: number.isRequired,\n      height: number.isRequired,\n      url: string.isRequired\n    }))\n  })\n}); // Denormalised user object\n\npropTypes.currentUser = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('currentUser').isRequired,\n  attributes: shape({\n    banned: bool.isRequired,\n    email: string.isRequired,\n    emailVerified: bool.isRequired,\n    profile: shape({\n      firstName: string.isRequired,\n      lastName: string.isRequired,\n      displayName: string.isRequired,\n      abbreviatedName: string.isRequired,\n      bio: string\n    }).isRequired,\n    stripeConnected: bool\n  }),\n  profileImage: propTypes.image\n});\nconst userAttributes = shape({\n  banned: propTypes.value(false).isRequired,\n  deleted: propTypes.value(false).isRequired,\n  profile: shape({\n    displayName: string.isRequired,\n    abbreviatedName: string.isRequired,\n    bio: string\n  })\n}); // Listing queries can include author.\n// Banned and deleted are not relevant then\n// since banned and deleted users can't have listings.\n\nconst authorAttributes = shape({\n  profile: shape({\n    displayName: string.isRequired,\n    abbreviatedName: string.isRequired,\n    bio: string\n  })\n});\nconst deletedUserAttributes = shape({\n  deleted: propTypes.value(true).isRequired\n});\nconst bannedUserAttributes = shape({\n  banned: propTypes.value(true).isRequired\n}); // Denormalised user object\n\npropTypes.user = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('user').isRequired,\n  attributes: oneOfType([userAttributes, authorAttributes, deletedUserAttributes, bannedUserAttributes]).isRequired,\n  profileImage: propTypes.image\n});\nexport const LISTING_STATE_DRAFT = 'draft';\nexport const LISTING_STATE_PENDING_APPROVAL = 'pendingApproval';\nexport const LISTING_STATE_PUBLISHED = 'published';\nexport const LISTING_STATE_CLOSED = 'closed';\nconst LISTING_STATES = [LISTING_STATE_DRAFT, LISTING_STATE_PENDING_APPROVAL, LISTING_STATE_PUBLISHED, LISTING_STATE_CLOSED];\nconst listingAttributes = shape({\n  title: string.isRequired,\n  description: string,\n  geolocation: propTypes.latlng,\n  deleted: propTypes.value(false),\n  state: oneOf(LISTING_STATES),\n  price: propTypes.money,\n  publicData: object\n});\nconst AVAILABILITY_PLAN_DAY = 'availability-plan/day';\nconst AVAILABILITY_PLAN_TIME = 'availability-plan/time';\nexport const DAYS_OF_WEEK = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\nconst availabilityPlan = shape({\n  type: oneOf([AVAILABILITY_PLAN_DAY, AVAILABILITY_PLAN_TIME]).isRequired,\n  timezone: string,\n  entries: arrayOf(shape({\n    dayOfWeek: oneOf(DAYS_OF_WEEK).isRequired,\n    seats: number.isRequired,\n    start: string,\n    end: string\n  }))\n});\npropTypes.availabilityPlan = availabilityPlan;\nconst ownListingAttributes = shape({\n  title: string.isRequired,\n  description: string,\n  geolocation: propTypes.latlng,\n  deleted: propTypes.value(false).isRequired,\n  state: oneOf(LISTING_STATES).isRequired,\n  price: propTypes.money,\n  availabilityPlan: availabilityPlan,\n  publicData: object.isRequired\n});\nconst deletedListingAttributes = shape({\n  deleted: propTypes.value(true).isRequired\n}); // Denormalised listing object\n\npropTypes.listing = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('listing').isRequired,\n  attributes: oneOfType([listingAttributes, deletedListingAttributes]).isRequired,\n  author: propTypes.user,\n  images: arrayOf(propTypes.image)\n}); // Denormalised ownListing object\n\npropTypes.ownListing = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('ownListing').isRequired,\n  attributes: oneOfType([ownListingAttributes, deletedListingAttributes]).isRequired,\n  author: propTypes.currentUser,\n  images: arrayOf(propTypes.image)\n});\nexport const BOOKING_STATE_PENDING = 'pending';\nexport const BOOKING_STATE_ACCEPTED = 'accepted';\nexport const BOOKING_STATE_DECLINED = 'declined';\nexport const BOOKING_STATE_CANCELLED = 'cancelled';\nexport const BOOKING_STATES = [BOOKING_STATE_PENDING, BOOKING_STATE_ACCEPTED, BOOKING_STATE_DECLINED, BOOKING_STATE_CANCELLED]; // Denormalised booking object\n\npropTypes.booking = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('booking').isRequired,\n  attributes: shape({\n    end: instanceOf(Date).isRequired,\n    start: instanceOf(Date).isRequired,\n    displayStart: instanceOf(Date),\n    displayEnd: instanceOf(Date),\n    state: oneOf(BOOKING_STATES)\n  })\n}); // A time slot that covers one day, having a start and end date.\n\nexport const TIME_SLOT_DAY = 'time-slot/day'; // Denormalised time slot object\n\npropTypes.timeSlot = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('timeSlot').isRequired,\n  attributes: shape({\n    type: oneOf([TIME_SLOT_DAY]).isRequired,\n    end: instanceOf(Date).isRequired,\n    start: instanceOf(Date).isRequired\n  })\n}); // Denormalised availability exception object\n\npropTypes.availabilityException = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('availabilityException').isRequired,\n  attributes: shape({\n    end: instanceOf(Date).isRequired,\n    seats: number.isRequired,\n    start: instanceOf(Date).isRequired\n  })\n});\npropTypes.transition = shape({\n  createdAt: instanceOf(Date).isRequired,\n  by: oneOf(TX_TRANSITION_ACTORS).isRequired,\n  transition: oneOf(TRANSITIONS).isRequired\n}); // Possible amount of stars in a review\n\nexport const REVIEW_RATINGS = [1, 2, 3, 4, 5]; // Review types: review of a provider and of a customer\n\nexport const REVIEW_TYPE_OF_PROVIDER = 'ofProvider';\nexport const REVIEW_TYPE_OF_CUSTOMER = 'ofCustomer'; // A review on a user\n\npropTypes.review = shape({\n  id: propTypes.uuid.isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date).isRequired,\n    content: string,\n    rating: oneOf(REVIEW_RATINGS),\n    state: string.isRequired,\n    type: oneOf([REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER]).isRequired\n  }).isRequired,\n  author: propTypes.user,\n  subject: propTypes.user\n}); // A Stripe account entity\n\npropTypes.stripeAccount = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('stripeAccount').isRequired,\n  attributes: shape({\n    stripeAccountId: string.isRequired,\n    stripeAccountData: object\n  })\n});\npropTypes.defaultPaymentMethod = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('stripePaymentMethod').isRequired,\n  attributes: shape({\n    type: propTypes.value('stripe-payment-method/card').isRequired,\n    stripePaymentMethodId: string.isRequired,\n    card: shape({\n      brand: string.isRequired,\n      expirationMonth: number.isRequired,\n      expirationYear: number.isRequired,\n      last4Digits: string.isRequired\n    }).isRequired\n  })\n});\nexport const LINE_ITEM_NIGHT = 'line-item/night';\nexport const LINE_ITEM_DAY = 'line-item/day';\nexport const LINE_ITEM_UNITS = 'line-item/units';\nexport const LINE_ITEM_CUSTOMER_COMMISSION = 'line-item/customer-commission';\nexport const LINE_ITEM_PROVIDER_COMMISSION = 'line-item/provider-commission';\nexport const LINE_ITEM_SHIPPING_FEE = 'line-item/shipping-fee';\nexport const LINE_ITEM_PICKUP_FEE = 'line-item/pickup-fee';\nexport const LINE_ITEMS = [LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS, LINE_ITEM_CUSTOMER_COMMISSION, LINE_ITEM_PROVIDER_COMMISSION, LINE_ITEM_SHIPPING_FEE, LINE_ITEM_PICKUP_FEE];\npropTypes.lineItemUnitType = oneOf([LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS]);\n\nconst requiredLineItemPropType = (props, propName, componentName) => {\n  const prop = props[propName];\n\n  if (!prop || prop === '') {\n    return new Error(`Missing line item code prop from ${componentName}.`);\n  }\n\n  if (!/^line-item\\/.+/.test(prop)) {\n    return new Error(`Invalid line item code value ${prop} passed to ${componentName}.`);\n  }\n};\n\npropTypes.lineItems = arrayOf(shape({\n  code: requiredLineItemPropType,\n  includeFor: arrayOf(oneOf(['customer', 'provider'])).isRequired,\n  quantity: instanceOf(Decimal),\n  unitPrice: propTypes.money.isRequired,\n  lineTotal: propTypes.money.isRequired,\n  reversal: bool.isRequired\n})); // Denormalised transaction object\n\npropTypes.transaction = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('transaction').isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date),\n    lastTransitionedAt: instanceOf(Date).isRequired,\n    lastTransition: oneOf(TRANSITIONS).isRequired,\n    // An enquiry won't need a total sum nor a booking so these are\n    // optional.\n    payinTotal: propTypes.money,\n    payoutTotal: propTypes.money,\n    lineItems: propTypes.lineItems,\n    transitions: arrayOf(propTypes.transition).isRequired\n  }),\n  booking: propTypes.booking,\n  listing: propTypes.listing,\n  customer: propTypes.user,\n  provider: propTypes.user,\n  reviews: arrayOf(propTypes.review)\n}); // Denormalised transaction message\n\npropTypes.message = shape({\n  id: propTypes.uuid.isRequired,\n  type: propTypes.value('message').isRequired,\n  attributes: shape({\n    createdAt: instanceOf(Date).isRequired,\n    content: string.isRequired\n  }).isRequired,\n  sender: propTypes.user\n}); // Pagination information in the response meta\n\npropTypes.pagination = shape({\n  page: number.isRequired,\n  perPage: number.isRequired,\n  totalItems: number.isRequired,\n  totalPages: number.isRequired\n}); // Search filter definition\n\npropTypes.filterConfig = arrayOf(shape({\n  id: string.isRequired,\n  label: node,\n  type: string.isRequired,\n  group: oneOf(['primary', 'secondary']).isRequired,\n  queryParamNames: arrayOf(string).isRequired,\n  config: object\n}).isRequired);\npropTypes.sortConfig = shape({\n  active: bool,\n  queryParamName: oneOf(['sort']).isRequired,\n  relevanceKey: string.isRequired,\n  conflictingFilters: arrayOf(string),\n  options: arrayOf(shape({\n    key: oneOf(['createdAt', '-createdAt', 'price', '-price', 'relevance']).isRequired,\n    label: string.isRequired,\n    longLabel: string\n  }))\n});\nexport const ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND = 'transaction-listing-not-found';\nexport const ERROR_CODE_TRANSACTION_INVALID_TRANSITION = 'transaction-invalid-transition';\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER = 'transaction-already-reviewed-by-customer';\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER = 'transaction-already-reviewed-by-provider';\nexport const ERROR_CODE_TRANSACTION_BOOKING_TIME_NOT_AVAILABLE = 'transaction-booking-time-not-available';\nexport const ERROR_CODE_TRANSACTION_LISTING_INSUFFICIENT_STOCK = 'transaction-listing-insufficient-stock';\nexport const ERROR_CODE_PAYMENT_FAILED = 'transaction-payment-failed';\nexport const ERROR_CODE_CHARGE_ZERO_PAYIN = 'transaction-charge-zero-payin';\nexport const ERROR_CODE_CHARGE_ZERO_PAYOUT = 'transaction-charge-zero-payout';\nexport const ERROR_CODE_EMAIL_TAKEN = 'email-taken';\nexport const ERROR_CODE_EMAIL_NOT_FOUND = 'email-not-found';\nexport const ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS = 'email-too-many-verification-requests';\nexport const ERROR_CODE_UPLOAD_OVER_LIMIT = 'request-upload-over-limit';\nexport const ERROR_CODE_VALIDATION_INVALID_PARAMS = 'validation-invalid-params';\nexport const ERROR_CODE_VALIDATION_INVALID_VALUE = 'validation-invalid-value';\nexport const ERROR_CODE_NOT_FOUND = 'not-found';\nexport const ERROR_CODE_FORBIDDEN = 'forbidden';\nexport const ERROR_CODE_MISSING_STRIPE_ACCOUNT = 'transaction-missing-stripe-account';\nexport const ERROR_CODE_STOCK_OLD_TOTAL_MISMATCH = 'old-total-mismatch';\nconst ERROR_CODES = [ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND, ERROR_CODE_TRANSACTION_INVALID_TRANSITION, ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER, ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER, ERROR_CODE_PAYMENT_FAILED, ERROR_CODE_CHARGE_ZERO_PAYIN, ERROR_CODE_CHARGE_ZERO_PAYOUT, ERROR_CODE_EMAIL_TAKEN, ERROR_CODE_EMAIL_NOT_FOUND, ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS, ERROR_CODE_UPLOAD_OVER_LIMIT, ERROR_CODE_VALIDATION_INVALID_PARAMS, ERROR_CODE_VALIDATION_INVALID_VALUE, ERROR_CODE_NOT_FOUND, ERROR_CODE_FORBIDDEN, ERROR_CODE_MISSING_STRIPE_ACCOUNT, ERROR_CODE_STOCK_OLD_TOTAL_MISMATCH]; // API error\n// TODO this is likely to change soonish\n\npropTypes.apiError = shape({\n  id: propTypes.uuid.isRequired,\n  status: number.isRequired,\n  code: oneOf(ERROR_CODES).isRequired,\n  title: string.isRequired,\n  meta: object\n}); // Storable error prop type. (Error object should not be stored as it is.)\n\npropTypes.error = shape({\n  type: propTypes.value('error').isRequired,\n  name: string.isRequired,\n  message: string,\n  status: number,\n  statusText: string,\n  apiErrors: arrayOf(propTypes.apiError)\n}); // Options for showing just date or date and time on BookingTimeInfo and OrderBreakdown\n\nexport const DATE_TYPE_DATE = 'date';\nexport const DATE_TYPE_DATETIME = 'datetime';\npropTypes.dateType = oneOf([DATE_TYPE_DATE, DATE_TYPE_DATETIME]);\nexport { propTypes };","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/util/types.js"],"names":["arrayOf","bool","func","instanceOf","node","number","object","objectOf","oneOf","oneOfType","shape","string","Decimal","types","sdkTypes","TRANSITIONS","TX_TRANSITION_ACTORS","UUID","LatLng","LatLngBounds","Money","propTypes","value","val","uuid","latlng","latlngBounds","money","currencyConfig","style","isRequired","currency","currencyDisplay","useGrouping","minimumFractionDigits","maximumFractionDigits","route","name","path","exact","strict","component","loadData","place","address","origin","bounds","image","id","type","attributes","variants","width","height","url","currentUser","banned","email","emailVerified","profile","firstName","lastName","displayName","abbreviatedName","bio","stripeConnected","profileImage","userAttributes","deleted","authorAttributes","deletedUserAttributes","bannedUserAttributes","user","LISTING_STATE_DRAFT","LISTING_STATE_PENDING_APPROVAL","LISTING_STATE_PUBLISHED","LISTING_STATE_CLOSED","LISTING_STATES","listingAttributes","title","description","geolocation","state","price","publicData","AVAILABILITY_PLAN_DAY","AVAILABILITY_PLAN_TIME","DAYS_OF_WEEK","availabilityPlan","timezone","entries","dayOfWeek","seats","start","end","ownListingAttributes","deletedListingAttributes","listing","author","images","ownListing","BOOKING_STATE_PENDING","BOOKING_STATE_ACCEPTED","BOOKING_STATE_DECLINED","BOOKING_STATE_CANCELLED","BOOKING_STATES","booking","Date","displayStart","displayEnd","TIME_SLOT_DAY","timeSlot","availabilityException","transition","createdAt","by","REVIEW_RATINGS","REVIEW_TYPE_OF_PROVIDER","REVIEW_TYPE_OF_CUSTOMER","review","content","rating","subject","stripeAccount","stripeAccountId","stripeAccountData","defaultPaymentMethod","stripePaymentMethodId","card","brand","expirationMonth","expirationYear","last4Digits","LINE_ITEM_NIGHT","LINE_ITEM_DAY","LINE_ITEM_UNITS","LINE_ITEM_CUSTOMER_COMMISSION","LINE_ITEM_PROVIDER_COMMISSION","LINE_ITEM_SHIPPING_FEE","LINE_ITEM_PICKUP_FEE","LINE_ITEMS","lineItemUnitType","requiredLineItemPropType","props","propName","componentName","prop","Error","test","lineItems","code","includeFor","quantity","unitPrice","lineTotal","reversal","transaction","lastTransitionedAt","lastTransition","payinTotal","payoutTotal","transitions","customer","provider","reviews","message","sender","pagination","page","perPage","totalItems","totalPages","filterConfig","label","group","queryParamNames","config","sortConfig","active","queryParamName","relevanceKey","conflictingFilters","options","key","longLabel","ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND","ERROR_CODE_TRANSACTION_INVALID_TRANSITION","ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER","ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER","ERROR_CODE_TRANSACTION_BOOKING_TIME_NOT_AVAILABLE","ERROR_CODE_TRANSACTION_LISTING_INSUFFICIENT_STOCK","ERROR_CODE_PAYMENT_FAILED","ERROR_CODE_CHARGE_ZERO_PAYIN","ERROR_CODE_CHARGE_ZERO_PAYOUT","ERROR_CODE_EMAIL_TAKEN","ERROR_CODE_EMAIL_NOT_FOUND","ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS","ERROR_CODE_UPLOAD_OVER_LIMIT","ERROR_CODE_VALIDATION_INVALID_PARAMS","ERROR_CODE_VALIDATION_INVALID_VALUE","ERROR_CODE_NOT_FOUND","ERROR_CODE_FORBIDDEN","ERROR_CODE_MISSING_STRIPE_ACCOUNT","ERROR_CODE_STOCK_OLD_TOTAL_MISMATCH","ERROR_CODES","apiError","status","meta","error","statusText","apiErrors","DATE_TYPE_DATE","DATE_TYPE_DATETIME","dateType"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,OADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,QARF,EASEC,KATF,EAUEC,SAVF,EAWEC,KAXF,EAYEC,MAZF,QAaO,YAbP;AAcA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,aAAlC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,eAAlD;AAEA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,IAAwCN,QAA9C;AAEA,MAAMO,SAAS,GAAG,EAAlB,C,CAEA;;AACAA,SAAS,CAACC,KAAV,GAAkBC,GAAG,IAAIf,KAAK,CAAC,CAACe,GAAD,CAAD,CAA9B,C,CAEA;;;AACAF,SAAS,CAACG,IAAV,GAAiBrB,UAAU,CAACc,IAAD,CAA3B;AACAI,SAAS,CAACI,MAAV,GAAmBtB,UAAU,CAACe,MAAD,CAA7B;AACAG,SAAS,CAACK,YAAV,GAAyBvB,UAAU,CAACgB,YAAD,CAAnC;AACAE,SAAS,CAACM,KAAV,GAAkBxB,UAAU,CAACiB,KAAD,CAA5B,C,CAEA;;AACAC,SAAS,CAACO,cAAV,GAA2BlB,KAAK,CAAC;AAC/BmB,EAAAA,KAAK,EAAElB,MAAM,CAACmB,UADiB;AAE/BC,EAAAA,QAAQ,EAAEpB,MAAM,CAACmB,UAFc;AAG/BE,EAAAA,eAAe,EAAErB,MAHc;AAI/BsB,EAAAA,WAAW,EAAEhC,IAJkB;AAK/BiC,EAAAA,qBAAqB,EAAE7B,MALQ;AAM/B8B,EAAAA,qBAAqB,EAAE9B;AANQ,CAAD,CAAhC,C,CASA;;AACAgB,SAAS,CAACe,KAAV,GAAkB1B,KAAK,CAAC;AACtB2B,EAAAA,IAAI,EAAE1B,MAAM,CAACmB,UADS;AAEtBQ,EAAAA,IAAI,EAAE3B,MAAM,CAACmB,UAFS;AAGtBS,EAAAA,KAAK,EAAEtC,IAHe;AAItBuC,EAAAA,MAAM,EAAEvC,IAJc;AAKtBwC,EAAAA,SAAS,EAAEhC,SAAS,CAAC,CAACH,MAAD,EAASJ,IAAT,CAAD,CAAT,CAA0B4B,UALf;AAMtBY,EAAAA,QAAQ,EAAExC;AANY,CAAD,CAAvB,C,CASA;;AACAmB,SAAS,CAACsB,KAAV,GAAkBjC,KAAK,CAAC;AACtBkC,EAAAA,OAAO,EAAEjC,MAAM,CAACmB,UADM;AAEtBe,EAAAA,MAAM,EAAExB,SAAS,CAACI,MAFI;AAGtBqB,EAAAA,MAAM,EAAEzB,SAAS,CAACK,YAHI,CAGU;;AAHV,CAAD,CAAvB,C,CAMA;;AACAL,SAAS,CAAC0B,KAAV,GAAkBrC,KAAK,CAAC;AACtBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADG;AAEtBmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,OAAhB,EAAyBQ,UAFT;AAGtBoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChByC,IAAAA,QAAQ,EAAE5C,QAAQ,CAChBG,KAAK,CAAC;AACJ0C,MAAAA,KAAK,EAAE/C,MAAM,CAACyB,UADV;AAEJuB,MAAAA,MAAM,EAAEhD,MAAM,CAACyB,UAFX;AAGJwB,MAAAA,GAAG,EAAE3C,MAAM,CAACmB;AAHR,KAAD,CADW;AADF,GAAD;AAHK,CAAD,CAAvB,C,CAcA;;AACAT,SAAS,CAACkC,WAAV,GAAwB7C,KAAK,CAAC;AAC5BsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADS;AAE5BmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,aAAhB,EAA+BQ,UAFT;AAG5BoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChB8C,IAAAA,MAAM,EAAEvD,IAAI,CAAC6B,UADG;AAEhB2B,IAAAA,KAAK,EAAE9C,MAAM,CAACmB,UAFE;AAGhB4B,IAAAA,aAAa,EAAEzD,IAAI,CAAC6B,UAHJ;AAIhB6B,IAAAA,OAAO,EAAEjD,KAAK,CAAC;AACbkD,MAAAA,SAAS,EAAEjD,MAAM,CAACmB,UADL;AAEb+B,MAAAA,QAAQ,EAAElD,MAAM,CAACmB,UAFJ;AAGbgC,MAAAA,WAAW,EAAEnD,MAAM,CAACmB,UAHP;AAIbiC,MAAAA,eAAe,EAAEpD,MAAM,CAACmB,UAJX;AAKbkC,MAAAA,GAAG,EAAErD;AALQ,KAAD,CAAL,CAMNmB,UAVa;AAWhBmC,IAAAA,eAAe,EAAEhE;AAXD,GAAD,CAHW;AAgB5BiE,EAAAA,YAAY,EAAE7C,SAAS,CAAC0B;AAhBI,CAAD,CAA7B;AAmBA,MAAMoB,cAAc,GAAGzD,KAAK,CAAC;AAC3B8C,EAAAA,MAAM,EAAEnC,SAAS,CAACC,KAAV,CAAgB,KAAhB,EAAuBQ,UADJ;AAE3BsC,EAAAA,OAAO,EAAE/C,SAAS,CAACC,KAAV,CAAgB,KAAhB,EAAuBQ,UAFL;AAG3B6B,EAAAA,OAAO,EAAEjD,KAAK,CAAC;AACboD,IAAAA,WAAW,EAAEnD,MAAM,CAACmB,UADP;AAEbiC,IAAAA,eAAe,EAAEpD,MAAM,CAACmB,UAFX;AAGbkC,IAAAA,GAAG,EAAErD;AAHQ,GAAD;AAHa,CAAD,CAA5B,C,CAUA;AACA;AACA;;AACA,MAAM0D,gBAAgB,GAAG3D,KAAK,CAAC;AAC7BiD,EAAAA,OAAO,EAAEjD,KAAK,CAAC;AACboD,IAAAA,WAAW,EAAEnD,MAAM,CAACmB,UADP;AAEbiC,IAAAA,eAAe,EAAEpD,MAAM,CAACmB,UAFX;AAGbkC,IAAAA,GAAG,EAAErD;AAHQ,GAAD;AADe,CAAD,CAA9B;AAQA,MAAM2D,qBAAqB,GAAG5D,KAAK,CAAC;AAClC0D,EAAAA,OAAO,EAAE/C,SAAS,CAACC,KAAV,CAAgB,IAAhB,EAAsBQ;AADG,CAAD,CAAnC;AAIA,MAAMyC,oBAAoB,GAAG7D,KAAK,CAAC;AACjC8C,EAAAA,MAAM,EAAEnC,SAAS,CAACC,KAAV,CAAgB,IAAhB,EAAsBQ;AADG,CAAD,CAAlC,C,CAIA;;AACAT,SAAS,CAACmD,IAAV,GAAiB9D,KAAK,CAAC;AACrBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADE;AAErBmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,MAAhB,EAAwBQ,UAFT;AAGrBoB,EAAAA,UAAU,EAAEzC,SAAS,CAAC,CACpB0D,cADoB,EAEpBE,gBAFoB,EAGpBC,qBAHoB,EAIpBC,oBAJoB,CAAD,CAAT,CAKTzC,UARkB;AASrBoC,EAAAA,YAAY,EAAE7C,SAAS,CAAC0B;AATH,CAAD,CAAtB;AAYA,OAAO,MAAM0B,mBAAmB,GAAG,OAA5B;AACP,OAAO,MAAMC,8BAA8B,GAAG,iBAAvC;AACP,OAAO,MAAMC,uBAAuB,GAAG,WAAhC;AACP,OAAO,MAAMC,oBAAoB,GAAG,QAA7B;AAEP,MAAMC,cAAc,GAAG,CACrBJ,mBADqB,EAErBC,8BAFqB,EAGrBC,uBAHqB,EAIrBC,oBAJqB,CAAvB;AAOA,MAAME,iBAAiB,GAAGpE,KAAK,CAAC;AAC9BqE,EAAAA,KAAK,EAAEpE,MAAM,CAACmB,UADgB;AAE9BkD,EAAAA,WAAW,EAAErE,MAFiB;AAG9BsE,EAAAA,WAAW,EAAE5D,SAAS,CAACI,MAHO;AAI9B2C,EAAAA,OAAO,EAAE/C,SAAS,CAACC,KAAV,CAAgB,KAAhB,CAJqB;AAK9B4D,EAAAA,KAAK,EAAE1E,KAAK,CAACqE,cAAD,CALkB;AAM9BM,EAAAA,KAAK,EAAE9D,SAAS,CAACM,KANa;AAO9ByD,EAAAA,UAAU,EAAE9E;AAPkB,CAAD,CAA/B;AAUA,MAAM+E,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AACA,OAAO,MAAMC,YAAY,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAArB;AAEP,MAAMC,gBAAgB,GAAG9E,KAAK,CAAC;AAC7BuC,EAAAA,IAAI,EAAEzC,KAAK,CAAC,CAAC6E,qBAAD,EAAwBC,sBAAxB,CAAD,CAAL,CAAuDxD,UADhC;AAE7B2D,EAAAA,QAAQ,EAAE9E,MAFmB;AAG7B+E,EAAAA,OAAO,EAAE1F,OAAO,CACdU,KAAK,CAAC;AACJiF,IAAAA,SAAS,EAAEnF,KAAK,CAAC+E,YAAD,CAAL,CAAoBzD,UAD3B;AAEJ8D,IAAAA,KAAK,EAAEvF,MAAM,CAACyB,UAFV;AAGJ+D,IAAAA,KAAK,EAAElF,MAHH;AAIJmF,IAAAA,GAAG,EAAEnF;AAJD,GAAD,CADS;AAHa,CAAD,CAA9B;AAaAU,SAAS,CAACmE,gBAAV,GAA6BA,gBAA7B;AAEA,MAAMO,oBAAoB,GAAGrF,KAAK,CAAC;AACjCqE,EAAAA,KAAK,EAAEpE,MAAM,CAACmB,UADmB;AAEjCkD,EAAAA,WAAW,EAAErE,MAFoB;AAGjCsE,EAAAA,WAAW,EAAE5D,SAAS,CAACI,MAHU;AAIjC2C,EAAAA,OAAO,EAAE/C,SAAS,CAACC,KAAV,CAAgB,KAAhB,EAAuBQ,UAJC;AAKjCoD,EAAAA,KAAK,EAAE1E,KAAK,CAACqE,cAAD,CAAL,CAAsB/C,UALI;AAMjCqD,EAAAA,KAAK,EAAE9D,SAAS,CAACM,KANgB;AAOjC6D,EAAAA,gBAAgB,EAAEA,gBAPe;AAQjCJ,EAAAA,UAAU,EAAE9E,MAAM,CAACwB;AARc,CAAD,CAAlC;AAWA,MAAMkE,wBAAwB,GAAGtF,KAAK,CAAC;AACrC0D,EAAAA,OAAO,EAAE/C,SAAS,CAACC,KAAV,CAAgB,IAAhB,EAAsBQ;AADM,CAAD,CAAtC,C,CAIA;;AACAT,SAAS,CAAC4E,OAAV,GAAoBvF,KAAK,CAAC;AACxBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADK;AAExBmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,SAAhB,EAA2BQ,UAFT;AAGxBoB,EAAAA,UAAU,EAAEzC,SAAS,CAAC,CAACqE,iBAAD,EAAoBkB,wBAApB,CAAD,CAAT,CAAyDlE,UAH7C;AAIxBoE,EAAAA,MAAM,EAAE7E,SAAS,CAACmD,IAJM;AAKxB2B,EAAAA,MAAM,EAAEnG,OAAO,CAACqB,SAAS,CAAC0B,KAAX;AALS,CAAD,CAAzB,C,CAQA;;AACA1B,SAAS,CAAC+E,UAAV,GAAuB1F,KAAK,CAAC;AAC3BsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADQ;AAE3BmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,YAAhB,EAA8BQ,UAFT;AAG3BoB,EAAAA,UAAU,EAAEzC,SAAS,CAAC,CAACsF,oBAAD,EAAuBC,wBAAvB,CAAD,CAAT,CAA4DlE,UAH7C;AAI3BoE,EAAAA,MAAM,EAAE7E,SAAS,CAACkC,WAJS;AAK3B4C,EAAAA,MAAM,EAAEnG,OAAO,CAACqB,SAAS,CAAC0B,KAAX;AALY,CAAD,CAA5B;AAQA,OAAO,MAAMsD,qBAAqB,GAAG,SAA9B;AACP,OAAO,MAAMC,sBAAsB,GAAG,UAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,UAA/B;AACP,OAAO,MAAMC,uBAAuB,GAAG,WAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,CAC5BJ,qBAD4B,EAE5BC,sBAF4B,EAG5BC,sBAH4B,EAI5BC,uBAJ4B,CAAvB,C,CAOP;;AACAnF,SAAS,CAACqF,OAAV,GAAoBhG,KAAK,CAAC;AACxBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADK;AAExBmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,SAAhB,EAA2BQ,UAFT;AAGxBoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBoF,IAAAA,GAAG,EAAE3F,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UADN;AAEhB+D,IAAAA,KAAK,EAAE1F,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UAFR;AAGhB8E,IAAAA,YAAY,EAAEzG,UAAU,CAACwG,IAAD,CAHR;AAIhBE,IAAAA,UAAU,EAAE1G,UAAU,CAACwG,IAAD,CAJN;AAKhBzB,IAAAA,KAAK,EAAE1E,KAAK,CAACiG,cAAD;AALI,GAAD;AAHO,CAAD,CAAzB,C,CAYA;;AACA,OAAO,MAAMK,aAAa,GAAG,eAAtB,C,CAEP;;AACAzF,SAAS,CAAC0F,QAAV,GAAqBrG,KAAK,CAAC;AACzBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADM;AAEzBmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,UAAhB,EAA4BQ,UAFT;AAGzBoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBuC,IAAAA,IAAI,EAAEzC,KAAK,CAAC,CAACsG,aAAD,CAAD,CAAL,CAAuBhF,UADb;AAEhBgE,IAAAA,GAAG,EAAE3F,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UAFN;AAGhB+D,IAAAA,KAAK,EAAE1F,UAAU,CAACwG,IAAD,CAAV,CAAiB7E;AAHR,GAAD;AAHQ,CAAD,CAA1B,C,CAUA;;AACAT,SAAS,CAAC2F,qBAAV,GAAkCtG,KAAK,CAAC;AACtCsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADmB;AAEtCmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,uBAAhB,EAAyCQ,UAFT;AAGtCoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBoF,IAAAA,GAAG,EAAE3F,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UADN;AAEhB8D,IAAAA,KAAK,EAAEvF,MAAM,CAACyB,UAFE;AAGhB+D,IAAAA,KAAK,EAAE1F,UAAU,CAACwG,IAAD,CAAV,CAAiB7E;AAHR,GAAD;AAHqB,CAAD,CAAvC;AAUAT,SAAS,CAAC4F,UAAV,GAAuBvG,KAAK,CAAC;AAC3BwG,EAAAA,SAAS,EAAE/G,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UADD;AAE3BqF,EAAAA,EAAE,EAAE3G,KAAK,CAACQ,oBAAD,CAAL,CAA4Bc,UAFL;AAG3BmF,EAAAA,UAAU,EAAEzG,KAAK,CAACO,WAAD,CAAL,CAAmBe;AAHJ,CAAD,CAA5B,C,CAMA;;AACA,OAAO,MAAMsF,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAvB,C,CAEP;;AACA,OAAO,MAAMC,uBAAuB,GAAG,YAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,YAAhC,C,CAEP;;AACAjG,SAAS,CAACkG,MAAV,GAAmB7G,KAAK,CAAC;AACvBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADI;AAEvBoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBwG,IAAAA,SAAS,EAAE/G,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UADZ;AAEhB0F,IAAAA,OAAO,EAAE7G,MAFO;AAGhB8G,IAAAA,MAAM,EAAEjH,KAAK,CAAC4G,cAAD,CAHG;AAIhBlC,IAAAA,KAAK,EAAEvE,MAAM,CAACmB,UAJE;AAKhBmB,IAAAA,IAAI,EAAEzC,KAAK,CAAC,CAAC6G,uBAAD,EAA0BC,uBAA1B,CAAD,CAAL,CAA0DxF;AALhD,GAAD,CAAL,CAMTA,UARoB;AASvBoE,EAAAA,MAAM,EAAE7E,SAAS,CAACmD,IATK;AAUvBkD,EAAAA,OAAO,EAAErG,SAAS,CAACmD;AAVI,CAAD,CAAxB,C,CAaA;;AACAnD,SAAS,CAACsG,aAAV,GAA0BjH,KAAK,CAAC;AAC9BsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADW;AAE9BmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,eAAhB,EAAiCQ,UAFT;AAG9BoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBkH,IAAAA,eAAe,EAAEjH,MAAM,CAACmB,UADR;AAEhB+F,IAAAA,iBAAiB,EAAEvH;AAFH,GAAD;AAHa,CAAD,CAA/B;AASAe,SAAS,CAACyG,oBAAV,GAAiCpH,KAAK,CAAC;AACrCsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADkB;AAErCmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,qBAAhB,EAAuCQ,UAFR;AAGrCoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBuC,IAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,4BAAhB,EAA8CQ,UADpC;AAEhBiG,IAAAA,qBAAqB,EAAEpH,MAAM,CAACmB,UAFd;AAGhBkG,IAAAA,IAAI,EAAEtH,KAAK,CAAC;AACVuH,MAAAA,KAAK,EAAEtH,MAAM,CAACmB,UADJ;AAEVoG,MAAAA,eAAe,EAAE7H,MAAM,CAACyB,UAFd;AAGVqG,MAAAA,cAAc,EAAE9H,MAAM,CAACyB,UAHb;AAIVsG,MAAAA,WAAW,EAAEzH,MAAM,CAACmB;AAJV,KAAD,CAAL,CAKHA;AARa,GAAD;AAHoB,CAAD,CAAtC;AAeA,OAAO,MAAMuG,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,6BAA6B,GAAG,+BAAtC;AACP,OAAO,MAAMC,6BAA6B,GAAG,+BAAtC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,UAAU,GAAG,CACxBP,eADwB,EAExBC,aAFwB,EAGxBC,eAHwB,EAIxBC,6BAJwB,EAKxBC,6BALwB,EAMxBC,sBANwB,EAOxBC,oBAPwB,CAAnB;AAUPtH,SAAS,CAACwH,gBAAV,GAA6BrI,KAAK,CAAC,CAAC6H,eAAD,EAAkBC,aAAlB,EAAiCC,eAAjC,CAAD,CAAlC;;AAEA,MAAMO,wBAAwB,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,KAAoC;AACnE,QAAMC,IAAI,GAAGH,KAAK,CAACC,QAAD,CAAlB;;AAEA,MAAI,CAACE,IAAD,IAASA,IAAI,KAAK,EAAtB,EAA0B;AACxB,WAAO,IAAIC,KAAJ,CAAW,oCAAmCF,aAAc,GAA5D,CAAP;AACD;;AACD,MAAI,CAAC,iBAAiBG,IAAjB,CAAsBF,IAAtB,CAAL,EAAkC;AAChC,WAAO,IAAIC,KAAJ,CAAW,gCAA+BD,IAAK,cAAaD,aAAc,GAA1E,CAAP;AACD;AACF,CATD;;AAWA5H,SAAS,CAACgI,SAAV,GAAsBrJ,OAAO,CAC3BU,KAAK,CAAC;AACJ4I,EAAAA,IAAI,EAAER,wBADF;AAEJS,EAAAA,UAAU,EAAEvJ,OAAO,CAACQ,KAAK,CAAC,CAAC,UAAD,EAAa,UAAb,CAAD,CAAN,CAAP,CAAyCsB,UAFjD;AAGJ0H,EAAAA,QAAQ,EAAErJ,UAAU,CAACS,OAAD,CAHhB;AAIJ6I,EAAAA,SAAS,EAAEpI,SAAS,CAACM,KAAV,CAAgBG,UAJvB;AAKJ4H,EAAAA,SAAS,EAAErI,SAAS,CAACM,KAAV,CAAgBG,UALvB;AAMJ6H,EAAAA,QAAQ,EAAE1J,IAAI,CAAC6B;AANX,CAAD,CADsB,CAA7B,C,CAWA;;AACAT,SAAS,CAACuI,WAAV,GAAwBlJ,KAAK,CAAC;AAC5BsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADS;AAE5BmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,aAAhB,EAA+BQ,UAFT;AAG5BoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBwG,IAAAA,SAAS,EAAE/G,UAAU,CAACwG,IAAD,CADL;AAEhBkD,IAAAA,kBAAkB,EAAE1J,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UAFrB;AAGhBgI,IAAAA,cAAc,EAAEtJ,KAAK,CAACO,WAAD,CAAL,CAAmBe,UAHnB;AAKhB;AACA;AACAiI,IAAAA,UAAU,EAAE1I,SAAS,CAACM,KAPN;AAQhBqI,IAAAA,WAAW,EAAE3I,SAAS,CAACM,KARP;AAUhB0H,IAAAA,SAAS,EAAEhI,SAAS,CAACgI,SAVL;AAWhBY,IAAAA,WAAW,EAAEjK,OAAO,CAACqB,SAAS,CAAC4F,UAAX,CAAP,CAA8BnF;AAX3B,GAAD,CAHW;AAgB5B4E,EAAAA,OAAO,EAAErF,SAAS,CAACqF,OAhBS;AAiB5BT,EAAAA,OAAO,EAAE5E,SAAS,CAAC4E,OAjBS;AAkB5BiE,EAAAA,QAAQ,EAAE7I,SAAS,CAACmD,IAlBQ;AAmB5B2F,EAAAA,QAAQ,EAAE9I,SAAS,CAACmD,IAnBQ;AAoB5B4F,EAAAA,OAAO,EAAEpK,OAAO,CAACqB,SAAS,CAACkG,MAAX;AApBY,CAAD,CAA7B,C,CAuBA;;AACAlG,SAAS,CAACgJ,OAAV,GAAoB3J,KAAK,CAAC;AACxBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADK;AAExBmB,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,SAAhB,EAA2BQ,UAFT;AAGxBoB,EAAAA,UAAU,EAAExC,KAAK,CAAC;AAChBwG,IAAAA,SAAS,EAAE/G,UAAU,CAACwG,IAAD,CAAV,CAAiB7E,UADZ;AAEhB0F,IAAAA,OAAO,EAAE7G,MAAM,CAACmB;AAFA,GAAD,CAAL,CAGTA,UANqB;AAOxBwI,EAAAA,MAAM,EAAEjJ,SAAS,CAACmD;AAPM,CAAD,CAAzB,C,CAUA;;AACAnD,SAAS,CAACkJ,UAAV,GAAuB7J,KAAK,CAAC;AAC3B8J,EAAAA,IAAI,EAAEnK,MAAM,CAACyB,UADc;AAE3B2I,EAAAA,OAAO,EAAEpK,MAAM,CAACyB,UAFW;AAG3B4I,EAAAA,UAAU,EAAErK,MAAM,CAACyB,UAHQ;AAI3B6I,EAAAA,UAAU,EAAEtK,MAAM,CAACyB;AAJQ,CAAD,CAA5B,C,CAOA;;AACAT,SAAS,CAACuJ,YAAV,GAAyB5K,OAAO,CAC9BU,KAAK,CAAC;AACJsC,EAAAA,EAAE,EAAErC,MAAM,CAACmB,UADP;AAEJ+I,EAAAA,KAAK,EAAEzK,IAFH;AAGJ6C,EAAAA,IAAI,EAAEtC,MAAM,CAACmB,UAHT;AAIJgJ,EAAAA,KAAK,EAAEtK,KAAK,CAAC,CAAC,SAAD,EAAY,WAAZ,CAAD,CAAL,CAAgCsB,UAJnC;AAKJiJ,EAAAA,eAAe,EAAE/K,OAAO,CAACW,MAAD,CAAP,CAAgBmB,UAL7B;AAMJkJ,EAAAA,MAAM,EAAE1K;AANJ,CAAD,CAAL,CAOGwB,UAR2B,CAAhC;AAWAT,SAAS,CAAC4J,UAAV,GAAuBvK,KAAK,CAAC;AAC3BwK,EAAAA,MAAM,EAAEjL,IADmB;AAE3BkL,EAAAA,cAAc,EAAE3K,KAAK,CAAC,CAAC,MAAD,CAAD,CAAL,CAAgBsB,UAFL;AAG3BsJ,EAAAA,YAAY,EAAEzK,MAAM,CAACmB,UAHM;AAI3BuJ,EAAAA,kBAAkB,EAAErL,OAAO,CAACW,MAAD,CAJA;AAK3B2K,EAAAA,OAAO,EAAEtL,OAAO,CACdU,KAAK,CAAC;AACJ6K,IAAAA,GAAG,EAAE/K,KAAK,CAAC,CAAC,WAAD,EAAc,YAAd,EAA4B,OAA5B,EAAqC,QAArC,EAA+C,WAA/C,CAAD,CAAL,CAAmEsB,UADpE;AAEJ+I,IAAAA,KAAK,EAAElK,MAAM,CAACmB,UAFV;AAGJ0J,IAAAA,SAAS,EAAE7K;AAHP,GAAD,CADS;AALW,CAAD,CAA5B;AAcA,OAAO,MAAM8K,wCAAwC,GAAG,+BAAjD;AACP,OAAO,MAAMC,yCAAyC,GAAG,gCAAlD;AACP,OAAO,MAAMC,mDAAmD,GAC9D,0CADK;AAEP,OAAO,MAAMC,mDAAmD,GAC9D,0CADK;AAEP,OAAO,MAAMC,iDAAiD,GAC5D,wCADK;AAEP,OAAO,MAAMC,iDAAiD,GAC5D,wCADK;AAEP,OAAO,MAAMC,yBAAyB,GAAG,4BAAlC;AACP,OAAO,MAAMC,4BAA4B,GAAG,+BAArC;AACP,OAAO,MAAMC,6BAA6B,GAAG,gCAAtC;AACP,OAAO,MAAMC,sBAAsB,GAAG,aAA/B;AACP,OAAO,MAAMC,0BAA0B,GAAG,iBAAnC;AACP,OAAO,MAAMC,yCAAyC,GAAG,sCAAlD;AACP,OAAO,MAAMC,4BAA4B,GAAG,2BAArC;AACP,OAAO,MAAMC,oCAAoC,GAAG,2BAA7C;AACP,OAAO,MAAMC,mCAAmC,GAAG,0BAA5C;AACP,OAAO,MAAMC,oBAAoB,GAAG,WAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,WAA7B;AACP,OAAO,MAAMC,iCAAiC,GAAG,oCAA1C;AACP,OAAO,MAAMC,mCAAmC,GAAG,oBAA5C;AAEP,MAAMC,WAAW,GAAG,CAClBnB,wCADkB,EAElBC,yCAFkB,EAGlBC,mDAHkB,EAIlBC,mDAJkB,EAKlBG,yBALkB,EAMlBC,4BANkB,EAOlBC,6BAPkB,EAQlBC,sBARkB,EASlBC,0BATkB,EAUlBC,yCAVkB,EAWlBC,4BAXkB,EAYlBC,oCAZkB,EAalBC,mCAbkB,EAclBC,oBAdkB,EAelBC,oBAfkB,EAgBlBC,iCAhBkB,EAiBlBC,mCAjBkB,CAApB,C,CAoBA;AACA;;AACAtL,SAAS,CAACwL,QAAV,GAAqBnM,KAAK,CAAC;AACzBsC,EAAAA,EAAE,EAAE3B,SAAS,CAACG,IAAV,CAAeM,UADM;AAEzBgL,EAAAA,MAAM,EAAEzM,MAAM,CAACyB,UAFU;AAGzBwH,EAAAA,IAAI,EAAE9I,KAAK,CAACoM,WAAD,CAAL,CAAmB9K,UAHA;AAIzBiD,EAAAA,KAAK,EAAEpE,MAAM,CAACmB,UAJW;AAKzBiL,EAAAA,IAAI,EAAEzM;AALmB,CAAD,CAA1B,C,CAQA;;AACAe,SAAS,CAAC2L,KAAV,GAAkBtM,KAAK,CAAC;AACtBuC,EAAAA,IAAI,EAAE5B,SAAS,CAACC,KAAV,CAAgB,OAAhB,EAAyBQ,UADT;AAEtBO,EAAAA,IAAI,EAAE1B,MAAM,CAACmB,UAFS;AAGtBuI,EAAAA,OAAO,EAAE1J,MAHa;AAItBmM,EAAAA,MAAM,EAAEzM,MAJc;AAKtB4M,EAAAA,UAAU,EAAEtM,MALU;AAMtBuM,EAAAA,SAAS,EAAElN,OAAO,CAACqB,SAAS,CAACwL,QAAX;AANI,CAAD,CAAvB,C,CASA;;AACA,OAAO,MAAMM,cAAc,GAAG,MAAvB;AACP,OAAO,MAAMC,kBAAkB,GAAG,UAA3B;AAEP/L,SAAS,CAACgM,QAAV,GAAqB7M,KAAK,CAAC,CAAC2M,cAAD,EAAiBC,kBAAjB,CAAD,CAA1B;AAEA,SAAS/L,SAAT","sourcesContent":["/**\r\n * This module defines custom PropTypes shared within the application.\r\n *\r\n * To learn about validating React component props with PropTypes, see:\r\n *\r\n *     https://facebook.github.io/react/docs/typechecking-with-proptypes.html\r\n *\r\n * For component specific PropTypes, it's perfectly ok to inline them\r\n * to the component itself. If the type is shared or external (SDK or\r\n * API), however, it should be in this file for sharing with other\r\n * components.\r\n *\r\n * PropTypes should usually be validated only at the lowest level\r\n * where the props are used, not along the way in parents that pass\r\n * along the props to their children. Those parents should usually\r\n * just validate the presense of the prop key and that the value is\r\n * defined. This way we get the validation errors only in the most\r\n * specific place and avoid duplicate errros.\r\n */\r\nimport {\r\n  arrayOf,\r\n  bool,\r\n  func,\r\n  instanceOf,\r\n  node,\r\n  number,\r\n  object,\r\n  objectOf,\r\n  oneOf,\r\n  oneOfType,\r\n  shape,\r\n  string,\r\n} from 'prop-types';\r\nimport Decimal from 'decimal.js';\r\nimport { types as sdkTypes } from './sdkLoader';\r\nimport { TRANSITIONS, TX_TRANSITION_ACTORS } from './transaction';\r\n\r\nconst { UUID, LatLng, LatLngBounds, Money } = sdkTypes;\r\n\r\nconst propTypes = {};\r\n\r\n// Fixed value\r\npropTypes.value = val => oneOf([val]);\r\n\r\n// SDK type instances\r\npropTypes.uuid = instanceOf(UUID);\r\npropTypes.latlng = instanceOf(LatLng);\r\npropTypes.latlngBounds = instanceOf(LatLngBounds);\r\npropTypes.money = instanceOf(Money);\r\n\r\n// Configuration for currency formatting\r\npropTypes.currencyConfig = shape({\r\n  style: string.isRequired,\r\n  currency: string.isRequired,\r\n  currencyDisplay: string,\r\n  useGrouping: bool,\r\n  minimumFractionDigits: number,\r\n  maximumFractionDigits: number,\r\n});\r\n\r\n// Configuration for a single route\r\npropTypes.route = shape({\r\n  name: string.isRequired,\r\n  path: string.isRequired,\r\n  exact: bool,\r\n  strict: bool,\r\n  component: oneOfType([object, func]).isRequired,\r\n  loadData: func,\r\n});\r\n\r\n// Place object from LocationAutocompleteInput\r\npropTypes.place = shape({\r\n  address: string.isRequired,\r\n  origin: propTypes.latlng,\r\n  bounds: propTypes.latlngBounds, // optional viewport bounds\r\n});\r\n\r\n// Denormalised image object\r\npropTypes.image = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('image').isRequired,\r\n  attributes: shape({\r\n    variants: objectOf(\r\n      shape({\r\n        width: number.isRequired,\r\n        height: number.isRequired,\r\n        url: string.isRequired,\r\n      })\r\n    ),\r\n  }),\r\n});\r\n\r\n// Denormalised user object\r\npropTypes.currentUser = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('currentUser').isRequired,\r\n  attributes: shape({\r\n    banned: bool.isRequired,\r\n    email: string.isRequired,\r\n    emailVerified: bool.isRequired,\r\n    profile: shape({\r\n      firstName: string.isRequired,\r\n      lastName: string.isRequired,\r\n      displayName: string.isRequired,\r\n      abbreviatedName: string.isRequired,\r\n      bio: string,\r\n    }).isRequired,\r\n    stripeConnected: bool,\r\n  }),\r\n  profileImage: propTypes.image,\r\n});\r\n\r\nconst userAttributes = shape({\r\n  banned: propTypes.value(false).isRequired,\r\n  deleted: propTypes.value(false).isRequired,\r\n  profile: shape({\r\n    displayName: string.isRequired,\r\n    abbreviatedName: string.isRequired,\r\n    bio: string,\r\n  }),\r\n});\r\n\r\n// Listing queries can include author.\r\n// Banned and deleted are not relevant then\r\n// since banned and deleted users can't have listings.\r\nconst authorAttributes = shape({\r\n  profile: shape({\r\n    displayName: string.isRequired,\r\n    abbreviatedName: string.isRequired,\r\n    bio: string,\r\n  }),\r\n});\r\n\r\nconst deletedUserAttributes = shape({\r\n  deleted: propTypes.value(true).isRequired,\r\n});\r\n\r\nconst bannedUserAttributes = shape({\r\n  banned: propTypes.value(true).isRequired,\r\n});\r\n\r\n// Denormalised user object\r\npropTypes.user = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('user').isRequired,\r\n  attributes: oneOfType([\r\n    userAttributes,\r\n    authorAttributes,\r\n    deletedUserAttributes,\r\n    bannedUserAttributes,\r\n  ]).isRequired,\r\n  profileImage: propTypes.image,\r\n});\r\n\r\nexport const LISTING_STATE_DRAFT = 'draft';\r\nexport const LISTING_STATE_PENDING_APPROVAL = 'pendingApproval';\r\nexport const LISTING_STATE_PUBLISHED = 'published';\r\nexport const LISTING_STATE_CLOSED = 'closed';\r\n\r\nconst LISTING_STATES = [\r\n  LISTING_STATE_DRAFT,\r\n  LISTING_STATE_PENDING_APPROVAL,\r\n  LISTING_STATE_PUBLISHED,\r\n  LISTING_STATE_CLOSED,\r\n];\r\n\r\nconst listingAttributes = shape({\r\n  title: string.isRequired,\r\n  description: string,\r\n  geolocation: propTypes.latlng,\r\n  deleted: propTypes.value(false),\r\n  state: oneOf(LISTING_STATES),\r\n  price: propTypes.money,\r\n  publicData: object,\r\n});\r\n\r\nconst AVAILABILITY_PLAN_DAY = 'availability-plan/day';\r\nconst AVAILABILITY_PLAN_TIME = 'availability-plan/time';\r\nexport const DAYS_OF_WEEK = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\r\n\r\nconst availabilityPlan = shape({\r\n  type: oneOf([AVAILABILITY_PLAN_DAY, AVAILABILITY_PLAN_TIME]).isRequired,\r\n  timezone: string,\r\n  entries: arrayOf(\r\n    shape({\r\n      dayOfWeek: oneOf(DAYS_OF_WEEK).isRequired,\r\n      seats: number.isRequired,\r\n      start: string,\r\n      end: string,\r\n    })\r\n  ),\r\n});\r\n\r\npropTypes.availabilityPlan = availabilityPlan;\r\n\r\nconst ownListingAttributes = shape({\r\n  title: string.isRequired,\r\n  description: string,\r\n  geolocation: propTypes.latlng,\r\n  deleted: propTypes.value(false).isRequired,\r\n  state: oneOf(LISTING_STATES).isRequired,\r\n  price: propTypes.money,\r\n  availabilityPlan: availabilityPlan,\r\n  publicData: object.isRequired,\r\n});\r\n\r\nconst deletedListingAttributes = shape({\r\n  deleted: propTypes.value(true).isRequired,\r\n});\r\n\r\n// Denormalised listing object\r\npropTypes.listing = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('listing').isRequired,\r\n  attributes: oneOfType([listingAttributes, deletedListingAttributes]).isRequired,\r\n  author: propTypes.user,\r\n  images: arrayOf(propTypes.image),\r\n});\r\n\r\n// Denormalised ownListing object\r\npropTypes.ownListing = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('ownListing').isRequired,\r\n  attributes: oneOfType([ownListingAttributes, deletedListingAttributes]).isRequired,\r\n  author: propTypes.currentUser,\r\n  images: arrayOf(propTypes.image),\r\n});\r\n\r\nexport const BOOKING_STATE_PENDING = 'pending';\r\nexport const BOOKING_STATE_ACCEPTED = 'accepted';\r\nexport const BOOKING_STATE_DECLINED = 'declined';\r\nexport const BOOKING_STATE_CANCELLED = 'cancelled';\r\nexport const BOOKING_STATES = [\r\n  BOOKING_STATE_PENDING,\r\n  BOOKING_STATE_ACCEPTED,\r\n  BOOKING_STATE_DECLINED,\r\n  BOOKING_STATE_CANCELLED,\r\n];\r\n\r\n// Denormalised booking object\r\npropTypes.booking = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('booking').isRequired,\r\n  attributes: shape({\r\n    end: instanceOf(Date).isRequired,\r\n    start: instanceOf(Date).isRequired,\r\n    displayStart: instanceOf(Date),\r\n    displayEnd: instanceOf(Date),\r\n    state: oneOf(BOOKING_STATES),\r\n  }),\r\n});\r\n\r\n// A time slot that covers one day, having a start and end date.\r\nexport const TIME_SLOT_DAY = 'time-slot/day';\r\n\r\n// Denormalised time slot object\r\npropTypes.timeSlot = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('timeSlot').isRequired,\r\n  attributes: shape({\r\n    type: oneOf([TIME_SLOT_DAY]).isRequired,\r\n    end: instanceOf(Date).isRequired,\r\n    start: instanceOf(Date).isRequired,\r\n  }),\r\n});\r\n\r\n// Denormalised availability exception object\r\npropTypes.availabilityException = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('availabilityException').isRequired,\r\n  attributes: shape({\r\n    end: instanceOf(Date).isRequired,\r\n    seats: number.isRequired,\r\n    start: instanceOf(Date).isRequired,\r\n  }),\r\n});\r\n\r\npropTypes.transition = shape({\r\n  createdAt: instanceOf(Date).isRequired,\r\n  by: oneOf(TX_TRANSITION_ACTORS).isRequired,\r\n  transition: oneOf(TRANSITIONS).isRequired,\r\n});\r\n\r\n// Possible amount of stars in a review\r\nexport const REVIEW_RATINGS = [1, 2, 3, 4, 5];\r\n\r\n// Review types: review of a provider and of a customer\r\nexport const REVIEW_TYPE_OF_PROVIDER = 'ofProvider';\r\nexport const REVIEW_TYPE_OF_CUSTOMER = 'ofCustomer';\r\n\r\n// A review on a user\r\npropTypes.review = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  attributes: shape({\r\n    createdAt: instanceOf(Date).isRequired,\r\n    content: string,\r\n    rating: oneOf(REVIEW_RATINGS),\r\n    state: string.isRequired,\r\n    type: oneOf([REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER]).isRequired,\r\n  }).isRequired,\r\n  author: propTypes.user,\r\n  subject: propTypes.user,\r\n});\r\n\r\n// A Stripe account entity\r\npropTypes.stripeAccount = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('stripeAccount').isRequired,\r\n  attributes: shape({\r\n    stripeAccountId: string.isRequired,\r\n    stripeAccountData: object,\r\n  }),\r\n});\r\n\r\npropTypes.defaultPaymentMethod = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('stripePaymentMethod').isRequired,\r\n  attributes: shape({\r\n    type: propTypes.value('stripe-payment-method/card').isRequired,\r\n    stripePaymentMethodId: string.isRequired,\r\n    card: shape({\r\n      brand: string.isRequired,\r\n      expirationMonth: number.isRequired,\r\n      expirationYear: number.isRequired,\r\n      last4Digits: string.isRequired,\r\n    }).isRequired,\r\n  }),\r\n});\r\n\r\nexport const LINE_ITEM_NIGHT = 'line-item/night';\r\nexport const LINE_ITEM_DAY = 'line-item/day';\r\nexport const LINE_ITEM_UNITS = 'line-item/units';\r\nexport const LINE_ITEM_CUSTOMER_COMMISSION = 'line-item/customer-commission';\r\nexport const LINE_ITEM_PROVIDER_COMMISSION = 'line-item/provider-commission';\r\nexport const LINE_ITEM_SHIPPING_FEE = 'line-item/shipping-fee';\r\nexport const LINE_ITEM_PICKUP_FEE = 'line-item/pickup-fee';\r\n\r\nexport const LINE_ITEMS = [\r\n  LINE_ITEM_NIGHT,\r\n  LINE_ITEM_DAY,\r\n  LINE_ITEM_UNITS,\r\n  LINE_ITEM_CUSTOMER_COMMISSION,\r\n  LINE_ITEM_PROVIDER_COMMISSION,\r\n  LINE_ITEM_SHIPPING_FEE,\r\n  LINE_ITEM_PICKUP_FEE,\r\n];\r\n\r\npropTypes.lineItemUnitType = oneOf([LINE_ITEM_NIGHT, LINE_ITEM_DAY, LINE_ITEM_UNITS]);\r\n\r\nconst requiredLineItemPropType = (props, propName, componentName) => {\r\n  const prop = props[propName];\r\n\r\n  if (!prop || prop === '') {\r\n    return new Error(`Missing line item code prop from ${componentName}.`);\r\n  }\r\n  if (!/^line-item\\/.+/.test(prop)) {\r\n    return new Error(`Invalid line item code value ${prop} passed to ${componentName}.`);\r\n  }\r\n};\r\n\r\npropTypes.lineItems = arrayOf(\r\n  shape({\r\n    code: requiredLineItemPropType,\r\n    includeFor: arrayOf(oneOf(['customer', 'provider'])).isRequired,\r\n    quantity: instanceOf(Decimal),\r\n    unitPrice: propTypes.money.isRequired,\r\n    lineTotal: propTypes.money.isRequired,\r\n    reversal: bool.isRequired,\r\n  })\r\n);\r\n\r\n// Denormalised transaction object\r\npropTypes.transaction = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('transaction').isRequired,\r\n  attributes: shape({\r\n    createdAt: instanceOf(Date),\r\n    lastTransitionedAt: instanceOf(Date).isRequired,\r\n    lastTransition: oneOf(TRANSITIONS).isRequired,\r\n\r\n    // An enquiry won't need a total sum nor a booking so these are\r\n    // optional.\r\n    payinTotal: propTypes.money,\r\n    payoutTotal: propTypes.money,\r\n\r\n    lineItems: propTypes.lineItems,\r\n    transitions: arrayOf(propTypes.transition).isRequired,\r\n  }),\r\n  booking: propTypes.booking,\r\n  listing: propTypes.listing,\r\n  customer: propTypes.user,\r\n  provider: propTypes.user,\r\n  reviews: arrayOf(propTypes.review),\r\n});\r\n\r\n// Denormalised transaction message\r\npropTypes.message = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  type: propTypes.value('message').isRequired,\r\n  attributes: shape({\r\n    createdAt: instanceOf(Date).isRequired,\r\n    content: string.isRequired,\r\n  }).isRequired,\r\n  sender: propTypes.user,\r\n});\r\n\r\n// Pagination information in the response meta\r\npropTypes.pagination = shape({\r\n  page: number.isRequired,\r\n  perPage: number.isRequired,\r\n  totalItems: number.isRequired,\r\n  totalPages: number.isRequired,\r\n});\r\n\r\n// Search filter definition\r\npropTypes.filterConfig = arrayOf(\r\n  shape({\r\n    id: string.isRequired,\r\n    label: node,\r\n    type: string.isRequired,\r\n    group: oneOf(['primary', 'secondary']).isRequired,\r\n    queryParamNames: arrayOf(string).isRequired,\r\n    config: object,\r\n  }).isRequired\r\n);\r\n\r\npropTypes.sortConfig = shape({\r\n  active: bool,\r\n  queryParamName: oneOf(['sort']).isRequired,\r\n  relevanceKey: string.isRequired,\r\n  conflictingFilters: arrayOf(string),\r\n  options: arrayOf(\r\n    shape({\r\n      key: oneOf(['createdAt', '-createdAt', 'price', '-price', 'relevance']).isRequired,\r\n      label: string.isRequired,\r\n      longLabel: string,\r\n    })\r\n  ),\r\n});\r\n\r\nexport const ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND = 'transaction-listing-not-found';\r\nexport const ERROR_CODE_TRANSACTION_INVALID_TRANSITION = 'transaction-invalid-transition';\r\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER =\r\n  'transaction-already-reviewed-by-customer';\r\nexport const ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER =\r\n  'transaction-already-reviewed-by-provider';\r\nexport const ERROR_CODE_TRANSACTION_BOOKING_TIME_NOT_AVAILABLE =\r\n  'transaction-booking-time-not-available';\r\nexport const ERROR_CODE_TRANSACTION_LISTING_INSUFFICIENT_STOCK =\r\n  'transaction-listing-insufficient-stock';\r\nexport const ERROR_CODE_PAYMENT_FAILED = 'transaction-payment-failed';\r\nexport const ERROR_CODE_CHARGE_ZERO_PAYIN = 'transaction-charge-zero-payin';\r\nexport const ERROR_CODE_CHARGE_ZERO_PAYOUT = 'transaction-charge-zero-payout';\r\nexport const ERROR_CODE_EMAIL_TAKEN = 'email-taken';\r\nexport const ERROR_CODE_EMAIL_NOT_FOUND = 'email-not-found';\r\nexport const ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS = 'email-too-many-verification-requests';\r\nexport const ERROR_CODE_UPLOAD_OVER_LIMIT = 'request-upload-over-limit';\r\nexport const ERROR_CODE_VALIDATION_INVALID_PARAMS = 'validation-invalid-params';\r\nexport const ERROR_CODE_VALIDATION_INVALID_VALUE = 'validation-invalid-value';\r\nexport const ERROR_CODE_NOT_FOUND = 'not-found';\r\nexport const ERROR_CODE_FORBIDDEN = 'forbidden';\r\nexport const ERROR_CODE_MISSING_STRIPE_ACCOUNT = 'transaction-missing-stripe-account';\r\nexport const ERROR_CODE_STOCK_OLD_TOTAL_MISMATCH = 'old-total-mismatch';\r\n\r\nconst ERROR_CODES = [\r\n  ERROR_CODE_TRANSACTION_LISTING_NOT_FOUND,\r\n  ERROR_CODE_TRANSACTION_INVALID_TRANSITION,\r\n  ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_CUSTOMER,\r\n  ERROR_CODE_TRANSACTION_ALREADY_REVIEWED_BY_PROVIDER,\r\n  ERROR_CODE_PAYMENT_FAILED,\r\n  ERROR_CODE_CHARGE_ZERO_PAYIN,\r\n  ERROR_CODE_CHARGE_ZERO_PAYOUT,\r\n  ERROR_CODE_EMAIL_TAKEN,\r\n  ERROR_CODE_EMAIL_NOT_FOUND,\r\n  ERROR_CODE_TOO_MANY_VERIFICATION_REQUESTS,\r\n  ERROR_CODE_UPLOAD_OVER_LIMIT,\r\n  ERROR_CODE_VALIDATION_INVALID_PARAMS,\r\n  ERROR_CODE_VALIDATION_INVALID_VALUE,\r\n  ERROR_CODE_NOT_FOUND,\r\n  ERROR_CODE_FORBIDDEN,\r\n  ERROR_CODE_MISSING_STRIPE_ACCOUNT,\r\n  ERROR_CODE_STOCK_OLD_TOTAL_MISMATCH,\r\n];\r\n\r\n// API error\r\n// TODO this is likely to change soonish\r\npropTypes.apiError = shape({\r\n  id: propTypes.uuid.isRequired,\r\n  status: number.isRequired,\r\n  code: oneOf(ERROR_CODES).isRequired,\r\n  title: string.isRequired,\r\n  meta: object,\r\n});\r\n\r\n// Storable error prop type. (Error object should not be stored as it is.)\r\npropTypes.error = shape({\r\n  type: propTypes.value('error').isRequired,\r\n  name: string.isRequired,\r\n  message: string,\r\n  status: number,\r\n  statusText: string,\r\n  apiErrors: arrayOf(propTypes.apiError),\r\n});\r\n\r\n// Options for showing just date or date and time on BookingTimeInfo and OrderBreakdown\r\nexport const DATE_TYPE_DATE = 'date';\r\nexport const DATE_TYPE_DATETIME = 'datetime';\r\n\r\npropTypes.dateType = oneOf([DATE_TYPE_DATE, DATE_TYPE_DATETIME]);\r\n\r\nexport { propTypes };\r\n"]},"metadata":{},"sourceType":"module"}