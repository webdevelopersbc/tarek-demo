{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldDateInput\\\\DateInput.js\";\n\n/**\r\n * DateInput wraps SingleDatePicker from React-dates and gives a list of all default props we use.\r\n * Styles for SingleDatePicker can be found from 'public/reactDates.css'.\r\n *\r\n * N.B. *isOutsideRange* in defaultProps is defining what dates are available to booking.\r\n */\nimport React, { Component } from 'react';\nimport { bool, func, instanceOf, shape, string, arrayOf } from 'prop-types';\nimport { SingleDatePicker, isInclusivelyAfterDay, isInclusivelyBeforeDay, isSameDay } from 'react-dates';\nimport { intlShape, injectIntl } from '../../util/reactIntl';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport config from '../../config';\nimport { propTypes, TIME_SLOT_DAY } from '../../util/types';\nimport { timeOfDayFromTimeZoneToLocal } from '../../util/dates';\nimport { ensureTimeSlot } from '../../util/data';\nimport NextMonthIcon from './NextMonthIcon';\nimport PreviousMonthIcon from './PreviousMonthIcon';\nimport css from './DateInput.module.css';\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const ANCHOR_LEFT = 'left'; // Possible configuration options of React-dates\n\nconst defaultProps = {\n  initialDate: null,\n  // Possible initial date passed for the component\n  value: null,\n  // Value should keep track of selected date.\n  // input related props\n  id: 'dateInput',\n  placeholder: null,\n  // Handled inside component\n  disabled: false,\n  required: false,\n  readOnly: false,\n  screenReaderInputMessage: null,\n  // Handled inside component\n  showClearDate: false,\n  customCloseIcon: null,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  noBorder: true,\n  block: false,\n  small: false,\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  appendToBody: false,\n  disableScroll: false,\n  initialVisibleMonth: null,\n  firstDayOfWeek: config.i18n.firstDayOfWeek,\n  numberOfMonths: 1,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDate: false,\n  renderCalendarInfo: null,\n  hideKeyboardShortcutsPanel: true,\n  daySize: 38,\n  isRTL: false,\n  // navigation related props\n  navPrev: /*#__PURE__*/React.createElement(PreviousMonthIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }),\n  navNext: /*#__PURE__*/React.createElement(NextMonthIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }),\n\n  onPrevMonthClick() {},\n\n  onNextMonthClick() {},\n\n  onClose() {},\n\n  transitionDuration: 200,\n  // milliseconds between next month changes etc.\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  // If undefined, renders react-dates/lib/components/CalendarDay\n  // day presentation and interaction related props\n  renderDayContents: day => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"renderedDay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    }, day.format('D'));\n  },\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  // outside range -><- today ... today+available days -1 -><- outside range\n  isOutsideRange: day => {\n    const endOfRange = config.dayCountAvailableForBooking - 1;\n    return !isInclusivelyAfterDay(day, moment()) || !isInclusivelyBeforeDay(day, moment().add(endOfRange, 'days'));\n  },\n  isDayHighlighted: () => {},\n  // Internationalization props\n  // Multilocale support can be achieved with displayFormat like moment.localeData.longDateFormat('L')\n  // https://momentjs.com/\n  displayFormat: 'ddd, MMM D',\n  monthFormat: 'MMMM YYYY',\n  weekDayFormat: 'dd',\n  phrases: {\n    closeDatePicker: null,\n    // Handled inside component\n    clearDate: null // Handled inside component\n\n  }\n}; // Checks if time slot (propTypes.timeSlot) start time equals a day (moment)\n\nconst timeSlotEqualsDay = (timeSlot, day) => {\n  // Time slots describe available dates by providing a start and\n  // an end date which is the following day. In the single date picker\n  // the start date is used to represent available dates.\n  // In day-based booking process, timeSlots come in server's time zone.\n  const apiTimeZone = 'Etc/UTC';\n  const localStartDate = timeOfDayFromTimeZoneToLocal(timeSlot.attributes.start, apiTimeZone);\n  const isDay = ensureTimeSlot(timeSlot).attributes.type === TIME_SLOT_DAY;\n  return isDay && isSameDay(day, moment(localStartDate));\n};\n\nclass DateInputComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focused: false\n    };\n    this.onDateChange = this.onDateChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  onDateChange(date) {\n    const selectedDate = date instanceof moment ? date.toDate() : null;\n    this.props.onChange({\n      date: selectedDate\n    });\n  }\n\n  onFocusChange(values) {\n    const focused = values.focused; // SingleDatePicker requires 'onFocusChange' function and 'focused' boolean\n    // but Fields of React-Form deals with onFocus & onBlur instead\n\n    this.setState({\n      focused\n    });\n\n    if (focused) {\n      this.props.onFocus();\n    } else {\n      this.props.onBlur();\n    }\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      className,\n      initialDate,\n      intl,\n      name,\n      placeholderText,\n      onBlur,\n      onChange,\n      onFocus,\n      phrases,\n      screenReaderInputMessage,\n      useMobileMargins,\n      value,\n      children,\n      render,\n      timeSlots,\n      ...datePickerProps\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const initialMoment = initialDate ? moment(initialDate) : null;\n    const date = value && value.date instanceof Date ? moment(value.date) : initialMoment;\n    const isDayBlocked = timeSlots ? day => !timeSlots.find(timeSlot => timeSlotEqualsDay(timeSlot, day)) : () => false;\n    const placeholder = placeholderText || intl.formatMessage({\n      id: 'FieldDateInput.placeholder'\n    });\n    const screenReaderInputText = screenReaderInputMessage || intl.formatMessage({\n      id: 'FieldDateInput.screenReaderInputMessage'\n    });\n    const closeDatePickerText = phrases.closeDatePicker ? phrases.closeDatePicker : intl.formatMessage({\n      id: 'FieldDateInput.closeDatePicker'\n    });\n    const clearDateText = phrases.clearDate ? phrases.clearDate : intl.formatMessage({\n      id: 'FieldDateInput.clearDate'\n    });\n    const classes = classNames(css.inputRoot, className, {\n      [css.withMobileMargins]: useMobileMargins\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SingleDatePicker, Object.assign({}, datePickerProps, {\n      focused: this.state.focused,\n      onFocusChange: this.onFocusChange,\n      date: date,\n      onDateChange: this.onDateChange,\n      placeholder: placeholder,\n      screenReaderInputMessage: screenReaderInputText,\n      phrases: {\n        closeDatePicker: closeDatePickerText,\n        clearDate: clearDateText\n      },\n      isDayBlocked: isDayBlocked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nDateInputComponent.defaultProps = {\n  className: null,\n  useMobileMargins: false,\n  ...defaultProps,\n  timeSlots: null\n};\nDateInputComponent.propTypes = {\n  className: string,\n  id: string,\n  focused: bool,\n  initialDate: instanceOf(Date),\n  intl: intlShape.isRequired,\n  name: string.isRequired,\n  onChange: func.isRequired,\n  onBlur: func.isRequired,\n  onFocus: func.isRequired,\n  phrases: shape({\n    closeDatePicker: string,\n    clearDate: string\n  }),\n  useMobileMargins: bool,\n  placeholderText: string,\n  screenReaderInputMessage: string,\n  value: shape({\n    date: instanceOf(Date)\n  }),\n  timeSlots: arrayOf(propTypes.timeSlot)\n};\nexport default _c = injectIntl(DateInputComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldDateInput/DateInput.js"],"names":["React","Component","bool","func","instanceOf","shape","string","arrayOf","SingleDatePicker","isInclusivelyAfterDay","isInclusivelyBeforeDay","isSameDay","intlShape","injectIntl","classNames","moment","config","propTypes","TIME_SLOT_DAY","timeOfDayFromTimeZoneToLocal","ensureTimeSlot","NextMonthIcon","PreviousMonthIcon","css","HORIZONTAL_ORIENTATION","ANCHOR_LEFT","defaultProps","initialDate","value","id","placeholder","disabled","required","readOnly","screenReaderInputMessage","showClearDate","customCloseIcon","showDefaultInputIcon","customInputIcon","noBorder","block","small","renderMonthText","orientation","anchorDirection","horizontalMargin","withPortal","withFullScreenPortal","appendToBody","disableScroll","initialVisibleMonth","firstDayOfWeek","i18n","numberOfMonths","keepOpenOnDateSelect","reopenPickerOnClearDate","renderCalendarInfo","hideKeyboardShortcutsPanel","daySize","isRTL","navPrev","navNext","onPrevMonthClick","onNextMonthClick","onClose","transitionDuration","renderCalendarDay","undefined","renderDayContents","day","format","enableOutsideDays","isDayBlocked","isOutsideRange","endOfRange","dayCountAvailableForBooking","add","isDayHighlighted","displayFormat","monthFormat","weekDayFormat","phrases","closeDatePicker","clearDate","timeSlotEqualsDay","timeSlot","apiTimeZone","localStartDate","attributes","start","isDay","type","DateInputComponent","constructor","props","state","focused","onDateChange","bind","onFocusChange","date","selectedDate","toDate","onChange","values","setState","onFocus","onBlur","render","className","intl","name","placeholderText","useMobileMargins","children","timeSlots","datePickerProps","initialMoment","Date","find","formatMessage","screenReaderInputText","closeDatePickerText","clearDateText","classes","inputRoot","withMobileMargins","isRequired"],"mappings":"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","sourcesContent":["/**\r\n * DateInput wraps SingleDatePicker from React-dates and gives a list of all default props we use.\r\n * Styles for SingleDatePicker can be found from 'public/reactDates.css'.\r\n *\r\n * N.B. *isOutsideRange* in defaultProps is defining what dates are available to booking.\r\n */\r\nimport React, { Component } from 'react';\r\nimport { bool, func, instanceOf, shape, string, arrayOf } from 'prop-types';\r\nimport {\r\n  SingleDatePicker,\r\n  isInclusivelyAfterDay,\r\n  isInclusivelyBeforeDay,\r\n  isSameDay,\r\n} from 'react-dates';\r\nimport { intlShape, injectIntl } from '../../util/reactIntl';\r\nimport classNames from 'classnames';\r\nimport moment from 'moment';\r\nimport config from '../../config';\r\nimport { propTypes, TIME_SLOT_DAY } from '../../util/types';\r\nimport { timeOfDayFromTimeZoneToLocal } from '../../util/dates';\r\nimport { ensureTimeSlot } from '../../util/data';\r\n\r\nimport NextMonthIcon from './NextMonthIcon';\r\nimport PreviousMonthIcon from './PreviousMonthIcon';\r\nimport css from './DateInput.module.css';\r\n\r\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\r\nexport const ANCHOR_LEFT = 'left';\r\n\r\n// Possible configuration options of React-dates\r\nconst defaultProps = {\r\n  initialDate: null, // Possible initial date passed for the component\r\n  value: null, // Value should keep track of selected date.\r\n\r\n  // input related props\r\n  id: 'dateInput',\r\n  placeholder: null, // Handled inside component\r\n  disabled: false,\r\n  required: false,\r\n  readOnly: false,\r\n  screenReaderInputMessage: null, // Handled inside component\r\n  showClearDate: false,\r\n  customCloseIcon: null,\r\n  showDefaultInputIcon: false,\r\n  customInputIcon: null,\r\n  noBorder: true,\r\n  block: false,\r\n  small: false,\r\n\r\n  // calendar presentation and interaction related props\r\n  renderMonthText: null,\r\n  orientation: HORIZONTAL_ORIENTATION,\r\n  anchorDirection: ANCHOR_LEFT,\r\n  horizontalMargin: 0,\r\n  withPortal: false,\r\n  withFullScreenPortal: false,\r\n  appendToBody: false,\r\n  disableScroll: false,\r\n  initialVisibleMonth: null,\r\n  firstDayOfWeek: config.i18n.firstDayOfWeek,\r\n  numberOfMonths: 1,\r\n  keepOpenOnDateSelect: false,\r\n  reopenPickerOnClearDate: false,\r\n  renderCalendarInfo: null,\r\n  hideKeyboardShortcutsPanel: true,\r\n  daySize: 38,\r\n  isRTL: false,\r\n\r\n  // navigation related props\r\n  navPrev: <PreviousMonthIcon />,\r\n  navNext: <NextMonthIcon />,\r\n  onPrevMonthClick() {},\r\n  onNextMonthClick() {},\r\n  onClose() {},\r\n  transitionDuration: 200, // milliseconds between next month changes etc.\r\n\r\n  // day presentation and interaction related props\r\n  renderCalendarDay: undefined, // If undefined, renders react-dates/lib/components/CalendarDay\r\n  // day presentation and interaction related props\r\n  renderDayContents: day => {\r\n    return <span className=\"renderedDay\">{day.format('D')}</span>;\r\n  },\r\n  enableOutsideDays: false,\r\n  isDayBlocked: () => false,\r\n\r\n  // outside range -><- today ... today+available days -1 -><- outside range\r\n  isOutsideRange: day => {\r\n    const endOfRange = config.dayCountAvailableForBooking - 1;\r\n    return (\r\n      !isInclusivelyAfterDay(day, moment()) ||\r\n      !isInclusivelyBeforeDay(day, moment().add(endOfRange, 'days'))\r\n    );\r\n  },\r\n  isDayHighlighted: () => {},\r\n\r\n  // Internationalization props\r\n  // Multilocale support can be achieved with displayFormat like moment.localeData.longDateFormat('L')\r\n  // https://momentjs.com/\r\n  displayFormat: 'ddd, MMM D',\r\n  monthFormat: 'MMMM YYYY',\r\n  weekDayFormat: 'dd',\r\n  phrases: {\r\n    closeDatePicker: null, // Handled inside component\r\n    clearDate: null, // Handled inside component\r\n  },\r\n};\r\n\r\n// Checks if time slot (propTypes.timeSlot) start time equals a day (moment)\r\nconst timeSlotEqualsDay = (timeSlot, day) => {\r\n  // Time slots describe available dates by providing a start and\r\n  // an end date which is the following day. In the single date picker\r\n  // the start date is used to represent available dates.\r\n\r\n  // In day-based booking process, timeSlots come in server's time zone.\r\n  const apiTimeZone = 'Etc/UTC';\r\n  const localStartDate = timeOfDayFromTimeZoneToLocal(timeSlot.attributes.start, apiTimeZone);\r\n\r\n  const isDay = ensureTimeSlot(timeSlot).attributes.type === TIME_SLOT_DAY;\r\n  return isDay && isSameDay(day, moment(localStartDate));\r\n};\r\n\r\nclass DateInputComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      focused: false,\r\n    };\r\n\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n    this.onFocusChange = this.onFocusChange.bind(this);\r\n  }\r\n\r\n  onDateChange(date) {\r\n    const selectedDate = date instanceof moment ? date.toDate() : null;\r\n    this.props.onChange({ date: selectedDate });\r\n  }\r\n\r\n  onFocusChange(values) {\r\n    const focused = values.focused;\r\n    // SingleDatePicker requires 'onFocusChange' function and 'focused' boolean\r\n    // but Fields of React-Form deals with onFocus & onBlur instead\r\n    this.setState({ focused });\r\n\r\n    if (focused) {\r\n      this.props.onFocus();\r\n    } else {\r\n      this.props.onBlur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    /* eslint-disable no-unused-vars */\r\n    const {\r\n      className,\r\n      initialDate,\r\n      intl,\r\n      name,\r\n      placeholderText,\r\n      onBlur,\r\n      onChange,\r\n      onFocus,\r\n      phrases,\r\n      screenReaderInputMessage,\r\n      useMobileMargins,\r\n      value,\r\n      children,\r\n      render,\r\n      timeSlots,\r\n      ...datePickerProps\r\n    } = this.props;\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    const initialMoment = initialDate ? moment(initialDate) : null;\r\n\r\n    const date = value && value.date instanceof Date ? moment(value.date) : initialMoment;\r\n\r\n    const isDayBlocked = timeSlots\r\n      ? day => !timeSlots.find(timeSlot => timeSlotEqualsDay(timeSlot, day))\r\n      : () => false;\r\n\r\n    const placeholder = placeholderText || intl.formatMessage({ id: 'FieldDateInput.placeholder' });\r\n\r\n    const screenReaderInputText =\r\n      screenReaderInputMessage ||\r\n      intl.formatMessage({ id: 'FieldDateInput.screenReaderInputMessage' });\r\n\r\n    const closeDatePickerText = phrases.closeDatePicker\r\n      ? phrases.closeDatePicker\r\n      : intl.formatMessage({ id: 'FieldDateInput.closeDatePicker' });\r\n\r\n    const clearDateText = phrases.clearDate\r\n      ? phrases.clearDate\r\n      : intl.formatMessage({ id: 'FieldDateInput.clearDate' });\r\n\r\n    const classes = classNames(css.inputRoot, className, {\r\n      [css.withMobileMargins]: useMobileMargins,\r\n    });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <SingleDatePicker\r\n          {...datePickerProps}\r\n          focused={this.state.focused}\r\n          onFocusChange={this.onFocusChange}\r\n          date={date}\r\n          onDateChange={this.onDateChange}\r\n          placeholder={placeholder}\r\n          screenReaderInputMessage={screenReaderInputText}\r\n          phrases={{ closeDatePicker: closeDatePickerText, clearDate: clearDateText }}\r\n          isDayBlocked={isDayBlocked}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDateInputComponent.defaultProps = {\r\n  className: null,\r\n  useMobileMargins: false,\r\n  ...defaultProps,\r\n  timeSlots: null,\r\n};\r\n\r\nDateInputComponent.propTypes = {\r\n  className: string,\r\n  id: string,\r\n  focused: bool,\r\n  initialDate: instanceOf(Date),\r\n  intl: intlShape.isRequired,\r\n  name: string.isRequired,\r\n\r\n  onChange: func.isRequired,\r\n  onBlur: func.isRequired,\r\n  onFocus: func.isRequired,\r\n  phrases: shape({\r\n    closeDatePicker: string,\r\n    clearDate: string,\r\n  }),\r\n  useMobileMargins: bool,\r\n  placeholderText: string,\r\n  screenReaderInputMessage: string,\r\n  value: shape({\r\n    date: instanceOf(Date),\r\n  }),\r\n  timeSlots: arrayOf(propTypes.timeSlot),\r\n};\r\n\r\nexport default injectIntl(DateInputComponent);\r\n"]},"metadata":{},"sourceType":"module"}