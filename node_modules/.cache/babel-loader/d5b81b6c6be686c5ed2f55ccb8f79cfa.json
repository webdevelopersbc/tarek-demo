{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\SearchPage\\\\SearchMapInfoCard\\\\SearchMapInfoCard.js\";\nimport React, { Component } from 'react';\nimport { arrayOf, bool, func, string } from 'prop-types';\nimport { compose } from 'redux';\nimport classNames from 'classnames';\nimport config from '../../../config';\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\nimport { propTypes } from '../../../util/types';\nimport { formatMoney } from '../../../util/currency';\nimport { ensureListing } from '../../../util/data';\nimport { AspectRatioWrapper, ResponsiveImage } from '../../../components';\nimport css from './SearchMapInfoCard.module.css'; // ListingCard is the listing info without overlayview or carousel controls\n\nconst ListingCard = props => {\n  var _firstImage$attribute;\n\n  const {\n    className,\n    clickHandler,\n    intl,\n    isInCarousel,\n    listing,\n    urlToListing\n  } = props;\n  const {\n    title,\n    price\n  } = listing.attributes;\n  const formattedPrice = price && price.currency === config.currency ? formatMoney(intl, price) : price.currency;\n  const firstImage = listing.images && listing.images.length > 0 ? listing.images[0] : null;\n  const {\n    aspectWidth = 1,\n    aspectHeight = 1,\n    variantPrefix = 'listing-card'\n  } = config.listing;\n  const variants = firstImage ? Object.keys(firstImage === null || firstImage === void 0 ? void 0 : (_firstImage$attribute = firstImage.attributes) === null || _firstImage$attribute === void 0 ? void 0 : _firstImage$attribute.variants).filter(k => k.startsWith(variantPrefix)) : []; // listing card anchor needs sometimes inherited border radius.\n\n  const classes = classNames(css.anchor, css.borderRadiusInheritTop, {\n    [css.borderRadiusInheritBottom]: !isInCarousel\n  }, className);\n  return /*#__PURE__*/React.createElement(\"a\", {\n    alt: title,\n    className: classes,\n    href: urlToListing,\n    onClick: e => {\n      e.preventDefault(); // Use clickHandler from props to call internal router\n\n      clickHandler(listing);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(css.card, css.borderRadiusInheritTop, {\n      [css.borderRadiusInheritBottom]: !isInCarousel\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AspectRatioWrapper, {\n    className: css.aspectRatioWrapper,\n    width: aspectWidth,\n    height: aspectHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveImage, {\n    rootClassName: classNames(css.rootForImage, css.borderRadiusInheritTop),\n    alt: title,\n    noImageMessage: intl.formatMessage({\n      id: 'SearchMapInfoCard.noImage'\n    }),\n    image: firstImage,\n    variants: variants,\n    sizes: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(css.info, {\n      [css.borderRadiusInheritBottom]: !isInCarousel\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, formattedPrice), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, title))));\n};\n\n_c = ListingCard;\nListingCard.defaultProps = {\n  className: null\n};\nListingCard.propTypes = {\n  className: string,\n  listing: propTypes.listing.isRequired,\n  clickHandler: func.isRequired,\n  intl: intlShape.isRequired,\n  isInCarousel: bool.isRequired\n};\n\nclass SearchMapInfoCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentListingIndex: 0\n    };\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      intl,\n      listings,\n      createURLToListing,\n      onListingInfoCardClicked\n    } = this.props;\n    const currentListing = ensureListing(listings[this.state.currentListingIndex]);\n    const hasCarousel = listings.length > 1;\n    const pagination = hasCarousel ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(css.paginationInfo, css.borderRadiusInheritBottom),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: css.paginationPrev,\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState(prevState => ({\n          currentListingIndex: (prevState.currentListingIndex + listings.length - 1) % listings.length\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.paginationPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, `${this.state.currentListingIndex + 1}/${listings.length}`), /*#__PURE__*/React.createElement(\"button\", {\n      className: css.paginationNext,\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState(prevState => ({\n          currentListingIndex: (prevState.currentListingIndex + listings.length + 1) % listings.length\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    })) : null;\n    const classes = classNames(rootClassName || css.root, className);\n    const caretClass = classNames(css.caret, {\n      [css.caretWithCarousel]: hasCarousel\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.caretShadow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListingCard, {\n      clickHandler: onListingInfoCardClicked,\n      urlToListing: createURLToListing(currentListing),\n      listing: currentListing,\n      intl: intl,\n      isInCarousel: hasCarousel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), pagination, /*#__PURE__*/React.createElement(\"div\", {\n      className: caretClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSearchMapInfoCard.defaultProps = {\n  className: null,\n  rootClassName: null\n};\nSearchMapInfoCard.propTypes = {\n  className: string,\n  rootClassName: string,\n  listings: arrayOf(propTypes.listing).isRequired,\n  onListingInfoCardClicked: func.isRequired,\n  createURLToListing: func.isRequired,\n  // from injectIntl\n  intl: intlShape.isRequired\n};\nexport default compose(injectIntl)(SearchMapInfoCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListingCard\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/SearchPage/SearchMapInfoCard/SearchMapInfoCard.js"],"names":["React","Component","arrayOf","bool","func","string","compose","classNames","config","injectIntl","intlShape","propTypes","formatMoney","ensureListing","AspectRatioWrapper","ResponsiveImage","css","ListingCard","props","className","clickHandler","intl","isInCarousel","listing","urlToListing","title","price","attributes","formattedPrice","currency","firstImage","images","length","aspectWidth","aspectHeight","variantPrefix","variants","Object","keys","filter","k","startsWith","classes","anchor","borderRadiusInheritTop","borderRadiusInheritBottom","e","preventDefault","card","aspectRatioWrapper","rootForImage","formatMessage","id","info","name","defaultProps","isRequired","SearchMapInfoCard","constructor","state","currentListingIndex","render","rootClassName","listings","createURLToListing","onListingInfoCardClicked","currentListing","hasCarousel","pagination","paginationInfo","paginationPrev","stopPropagation","setState","prevState","paginationPage","paginationNext","root","caretClass","caret","caretWithCarousel","caretShadow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { arrayOf, bool, func, string } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classNames from 'classnames';\r\n\r\nimport config from '../../../config';\r\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport { propTypes } from '../../../util/types';\r\nimport { formatMoney } from '../../../util/currency';\r\nimport { ensureListing } from '../../../util/data';\r\n\r\nimport { AspectRatioWrapper, ResponsiveImage } from '../../../components';\r\n\r\nimport css from './SearchMapInfoCard.module.css';\r\n\r\n// ListingCard is the listing info without overlayview or carousel controls\r\nconst ListingCard = props => {\r\n  const { className, clickHandler, intl, isInCarousel, listing, urlToListing } = props;\r\n\r\n  const { title, price } = listing.attributes;\r\n  const formattedPrice =\r\n    price && price.currency === config.currency ? formatMoney(intl, price) : price.currency;\r\n  const firstImage = listing.images && listing.images.length > 0 ? listing.images[0] : null;\r\n\r\n  const { aspectWidth = 1, aspectHeight = 1, variantPrefix = 'listing-card' } = config.listing;\r\n  const variants = firstImage\r\n    ? Object.keys(firstImage?.attributes?.variants).filter(k => k.startsWith(variantPrefix))\r\n    : [];\r\n\r\n  // listing card anchor needs sometimes inherited border radius.\r\n  const classes = classNames(\r\n    css.anchor,\r\n    css.borderRadiusInheritTop,\r\n    { [css.borderRadiusInheritBottom]: !isInCarousel },\r\n    className\r\n  );\r\n\r\n  return (\r\n    <a\r\n      alt={title}\r\n      className={classes}\r\n      href={urlToListing}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        // Use clickHandler from props to call internal router\r\n        clickHandler(listing);\r\n      }}\r\n    >\r\n      <div\r\n        className={classNames(css.card, css.borderRadiusInheritTop, {\r\n          [css.borderRadiusInheritBottom]: !isInCarousel,\r\n        })}\r\n      >\r\n        <AspectRatioWrapper\r\n          className={css.aspectRatioWrapper}\r\n          width={aspectWidth}\r\n          height={aspectHeight}\r\n        >\r\n          <ResponsiveImage\r\n            rootClassName={classNames(css.rootForImage, css.borderRadiusInheritTop)}\r\n            alt={title}\r\n            noImageMessage={intl.formatMessage({ id: 'SearchMapInfoCard.noImage' })}\r\n            image={firstImage}\r\n            variants={variants}\r\n            sizes=\"250px\"\r\n          />\r\n        </AspectRatioWrapper>\r\n        <div className={classNames(css.info, { [css.borderRadiusInheritBottom]: !isInCarousel })}>\r\n          <div className={css.price}>{formattedPrice}</div>\r\n          <div className={css.name}>{title}</div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nListingCard.defaultProps = {\r\n  className: null,\r\n};\r\n\r\nListingCard.propTypes = {\r\n  className: string,\r\n  listing: propTypes.listing.isRequired,\r\n  clickHandler: func.isRequired,\r\n  intl: intlShape.isRequired,\r\n  isInCarousel: bool.isRequired,\r\n};\r\n\r\nclass SearchMapInfoCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { currentListingIndex: 0 };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      rootClassName,\r\n      intl,\r\n      listings,\r\n      createURLToListing,\r\n      onListingInfoCardClicked,\r\n    } = this.props;\r\n    const currentListing = ensureListing(listings[this.state.currentListingIndex]);\r\n    const hasCarousel = listings.length > 1;\r\n    const pagination = hasCarousel ? (\r\n      <div className={classNames(css.paginationInfo, css.borderRadiusInheritBottom)}>\r\n        <button\r\n          className={css.paginationPrev}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.setState(prevState => ({\r\n              currentListingIndex:\r\n                (prevState.currentListingIndex + listings.length - 1) % listings.length,\r\n            }));\r\n          }}\r\n        />\r\n        <div className={css.paginationPage}>\r\n          {`${this.state.currentListingIndex + 1}/${listings.length}`}\r\n        </div>\r\n        <button\r\n          className={css.paginationNext}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.setState(prevState => ({\r\n              currentListingIndex:\r\n                (prevState.currentListingIndex + listings.length + 1) % listings.length,\r\n            }));\r\n          }}\r\n        />\r\n      </div>\r\n    ) : null;\r\n\r\n    const classes = classNames(rootClassName || css.root, className);\r\n    const caretClass = classNames(css.caret, { [css.caretWithCarousel]: hasCarousel });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className={css.caretShadow} />\r\n        <ListingCard\r\n          clickHandler={onListingInfoCardClicked}\r\n          urlToListing={createURLToListing(currentListing)}\r\n          listing={currentListing}\r\n          intl={intl}\r\n          isInCarousel={hasCarousel}\r\n        />\r\n        {pagination}\r\n        <div className={caretClass} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchMapInfoCard.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nSearchMapInfoCard.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  listings: arrayOf(propTypes.listing).isRequired,\r\n  onListingInfoCardClicked: func.isRequired,\r\n  createURLToListing: func.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default compose(injectIntl)(SearchMapInfoCard);\r\n"]},"metadata":{},"sourceType":"module"}