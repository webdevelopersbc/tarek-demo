{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\TransactionPage\\\\TransactionPanel\\\\TransactionPanel.js\";\nimport React, { Component } from 'react';\nimport { array, arrayOf, bool, func, number, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport config from '../../../config';\nimport { TRANSITION_REQUEST_PAYMENT_AFTER_ENQUIRY, txHasBeenReceived, txIsCanceled, txIsDelivered, txIsDisputed, txIsEnquired, txIsPaymentExpired, txIsPaymentPending, txIsPurchased, txIsReceived, txIsCompleted, txIsInFirstReviewBy } from '../../../util/transaction';\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\nimport { LINE_ITEM_NIGHT, LINE_ITEM_DAY, propTypes } from '../../../util/types';\nimport { ensureListing, ensureTransaction, ensureUser, userDisplayNameAsString } from '../../../util/data';\nimport { isMobileSafari } from '../../../util/userAgent';\nimport { formatMoney } from '../../../util/currency';\nimport { AvatarLarge, OrderPanel, NamedLink, UserDisplayName } from '../../../components';\nimport SendMessageForm from '../SendMessageForm/SendMessageForm'; // These are internal components that make this file more readable.\n\nimport BreakdownMaybe from './BreakdownMaybe';\nimport DetailCardHeadingsMaybe from './DetailCardHeadingsMaybe';\nimport DetailCardImage from './DetailCardImage';\nimport DeliveryInfoMaybe from './DeliveryInfoMaybe';\nimport FeedSection from './FeedSection';\nimport ActionButtonsMaybe from './ActionButtonsMaybe';\nimport DiminishedActionButtonMaybe from './DiminishedActionButtonMaybe';\nimport PanelHeading, { HEADING_ENQUIRED, HEADING_PAYMENT_PENDING, HEADING_PAYMENT_EXPIRED, HEADING_CANCELED, HEADING_PURCHASED, HEADING_DELIVERED, HEADING_DISPUTED, HEADING_RECEIVED } from './PanelHeading';\nimport css from './TransactionPanel.module.css'; // Helper function to get display names for different roles\n\nconst displayNames = (currentUser, currentProvider, currentCustomer, intl) => {\n  const authorDisplayName = /*#__PURE__*/React.createElement(UserDisplayName, {\n    user: currentProvider,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  });\n  const customerDisplayName = /*#__PURE__*/React.createElement(UserDisplayName, {\n    user: currentCustomer,\n    intl: intl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  });\n  let otherUserDisplayName = '';\n  let otherUserDisplayNameString = '';\n  const currentUserIsCustomer = currentUser.id && currentCustomer.id && currentUser.id.uuid === currentCustomer.id.uuid;\n  const currentUserIsProvider = currentUser.id && currentProvider.id && currentUser.id.uuid === currentProvider.id.uuid;\n\n  if (currentUserIsCustomer) {\n    otherUserDisplayName = authorDisplayName;\n    otherUserDisplayNameString = userDisplayNameAsString(currentProvider, '');\n  } else if (currentUserIsProvider) {\n    otherUserDisplayName = customerDisplayName;\n    otherUserDisplayNameString = userDisplayNameAsString(currentCustomer, '');\n  }\n\n  return {\n    authorDisplayName,\n    customerDisplayName,\n    otherUserDisplayName,\n    otherUserDisplayNameString\n  };\n};\n\nexport class TransactionPanelComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sendMessageFormFocused: false\n    };\n    this.isMobSaf = false;\n    this.sendMessageFormName = 'TransactionPanel.SendMessageForm';\n    this.onSendMessageFormFocus = this.onSendMessageFormFocus.bind(this);\n    this.onSendMessageFormBlur = this.onSendMessageFormBlur.bind(this);\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\n    this.scrollToMessage = this.scrollToMessage.bind(this);\n  }\n\n  componentDidMount() {\n    this.isMobSaf = isMobileSafari();\n  }\n\n  onSendMessageFormFocus() {\n    this.setState({\n      sendMessageFormFocused: true\n    });\n\n    if (this.isMobSaf) {\n      // Scroll to bottom\n      window.scroll({\n        top: document.body.scrollHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  onSendMessageFormBlur() {\n    this.setState({\n      sendMessageFormFocused: false\n    });\n  }\n\n  onMessageSubmit(values, form) {\n    const message = values.message ? values.message.trim() : null;\n    const {\n      transaction,\n      onSendMessage\n    } = this.props;\n    const ensuredTransaction = ensureTransaction(transaction);\n\n    if (!message) {\n      return;\n    }\n\n    onSendMessage(ensuredTransaction.id, message).then(messageId => {\n      form.reset();\n      this.scrollToMessage(messageId);\n    }).catch(e => {// Ignore, Redux handles the error\n    });\n  }\n\n  scrollToMessage(messageId) {\n    const selector = `#msg-${messageId.uuid}`;\n    const el = document.querySelector(selector);\n\n    if (el) {\n      el.scrollIntoView({\n        block: 'start',\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  render() {\n    const {\n      rootClassName,\n      className,\n      currentUser,\n      transaction,\n      totalMessagePages,\n      oldestMessagePageFetched,\n      messages,\n      initialMessageFailed,\n      savePaymentMethodFailed,\n      fetchMessagesInProgress,\n      fetchMessagesError,\n      sendMessageInProgress,\n      sendMessageError,\n      onManageDisableScrolling,\n      onOpenDisputeModal,\n      onOpenReviewModal,\n      onShowMoreMessages,\n      transactionRole,\n      intl,\n      markReceivedProps,\n      markReceivedFromPurchasedProps,\n      markDeliveredProps,\n      leaveReviewProps,\n      onSubmitOrderRequest,\n      timeSlots,\n      fetchTimeSlotsError,\n      nextTransitions,\n      onFetchTransactionLineItems,\n      lineItems,\n      fetchLineItemsInProgress,\n      fetchLineItemsError\n    } = this.props;\n    const currentTransaction = ensureTransaction(transaction);\n    const currentListing = ensureListing(currentTransaction.listing);\n    const currentProvider = ensureUser(currentTransaction.provider);\n    const currentCustomer = ensureUser(currentTransaction.customer);\n    const isCustomer = transactionRole === 'customer';\n    const isProvider = transactionRole === 'provider';\n    const listingLoaded = !!currentListing.id;\n    const listingDeleted = listingLoaded && currentListing.attributes.deleted;\n    const iscustomerLoaded = !!currentCustomer.id;\n    const isCustomerBanned = iscustomerLoaded && currentCustomer.attributes.banned;\n    const isCustomerDeleted = iscustomerLoaded && currentCustomer.attributes.deleted;\n    const isProviderLoaded = !!currentProvider.id;\n    const isProviderBanned = isProviderLoaded && currentProvider.attributes.banned;\n    const isProviderDeleted = isProviderLoaded && currentProvider.attributes.deleted;\n\n    const stateDataFn = tx => {\n      if (txIsEnquired(tx)) {\n        const transitions = Array.isArray(nextTransitions) ? nextTransitions.map(transition => {\n          return transition.attributes.name;\n        }) : [];\n        const hasCorrectNextTransition = transitions.length > 0 && transitions.includes(TRANSITION_REQUEST_PAYMENT_AFTER_ENQUIRY);\n        return {\n          headingState: HEADING_ENQUIRED,\n          showOrderPanel: isCustomer && !isProviderBanned && hasCorrectNextTransition\n        };\n      } else if (txIsPaymentPending(tx)) {\n        return {\n          headingState: HEADING_PAYMENT_PENDING,\n          showDetailCardHeadings: isCustomer\n        };\n      } else if (txIsPaymentExpired(tx)) {\n        return {\n          headingState: HEADING_PAYMENT_EXPIRED,\n          showDetailCardHeadings: isCustomer\n        };\n      } else if (txIsPurchased(tx)) {\n        return {\n          headingState: HEADING_PURCHASED,\n          showDetailCardHeadings: isCustomer,\n          showActionButtons: true,\n          primaryButtonProps: isCustomer ? markReceivedFromPurchasedProps : markDeliveredProps\n        };\n      } else if (txIsCanceled(tx)) {\n        return {\n          headingState: HEADING_CANCELED,\n          showDetailCardHeadings: isCustomer\n        };\n      } else if (txIsDelivered(tx)) {\n        const primaryButtonPropsMaybe = isCustomer ? {\n          primaryButtonProps: markReceivedProps\n        } : {};\n        return {\n          headingState: HEADING_DELIVERED,\n          showDetailCardHeadings: isCustomer,\n          showActionButtons: isCustomer,\n          ...primaryButtonPropsMaybe,\n          showDispute: isCustomer\n        };\n      } else if (txIsDisputed(tx)) {\n        return {\n          headingState: HEADING_DISPUTED,\n          showDetailCardHeadings: isCustomer\n        };\n      } else if (txIsReceived(tx) || txIsCompleted(tx) || txIsInFirstReviewBy(tx, !isCustomer)) {\n        return {\n          headingState: HEADING_RECEIVED,\n          showDetailCardHeadings: isCustomer,\n          showActionButtons: true,\n          primaryButtonProps: leaveReviewProps\n        };\n      } else if (txHasBeenReceived(tx)) {\n        return {\n          headingState: HEADING_RECEIVED,\n          showDetailCardHeadings: isCustomer\n        };\n      } else {\n        return {\n          headingState: 'unknown'\n        };\n      }\n    };\n\n    const stateData = stateDataFn(currentTransaction);\n    const deletedListingTitle = intl.formatMessage({\n      id: 'TransactionPanel.deletedListingTitle'\n    });\n    const {\n      authorDisplayName,\n      customerDisplayName,\n      otherUserDisplayNameString\n    } = displayNames(currentUser, currentProvider, currentCustomer, intl);\n    const {\n      publicData,\n      geolocation\n    } = currentListing.attributes;\n    const location = publicData && publicData.location ? publicData.location : {};\n    const listingTitle = currentListing.attributes.deleted ? deletedListingTitle : currentListing.attributes.title;\n    const unitType = config.lineItemUnitType;\n    const isNightly = unitType === LINE_ITEM_NIGHT;\n    const isDaily = unitType === LINE_ITEM_DAY;\n    const unitTranslationKey = isNightly ? 'TransactionPanel.perNight' : isDaily ? 'TransactionPanel.perDay' : 'TransactionPanel.perUnit';\n    const price = currentListing.attributes.price;\n    const bookingSubTitle = price ? `${formatMoney(intl, price)} ${intl.formatMessage({\n      id: unitTranslationKey\n    })}` : '';\n    const firstImage = currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\n    const actionButtons = /*#__PURE__*/React.createElement(ActionButtonsMaybe, {\n      showButtons: stateData.showActionButtons,\n      primaryButtonProps: stateData === null || stateData === void 0 ? void 0 : stateData.primaryButtonProps,\n      secondaryButtonProps: stateData === null || stateData === void 0 ? void 0 : stateData.secondaryButtonProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    });\n    const showSendMessageForm = !isCustomerBanned && !isCustomerDeleted && !isProviderBanned && !isProviderDeleted;\n    const sendMessagePlaceholder = intl.formatMessage({\n      id: 'TransactionPanel.sendMessagePlaceholder'\n    }, {\n      name: otherUserDisplayNameString\n    });\n    const sendingMessageNotAllowed = intl.formatMessage({\n      id: 'TransactionPanel.sendingMessageNotAllowed'\n    });\n    const paymentMethodsPageLink = /*#__PURE__*/React.createElement(NamedLink, {\n      name: \"PaymentMethodsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TransactionPanel.paymentMethodsPageLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }));\n    const classes = classNames(rootClassName || css.root, className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.txInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DetailCardImage, {\n      rootClassName: css.imageWrapperMobile,\n      avatarWrapperClassName: css.avatarWrapperMobile,\n      listingTitle: listingTitle,\n      image: firstImage,\n      provider: currentProvider,\n      isCustomer: isCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }), isProvider ? /*#__PURE__*/React.createElement(\"div\", {\n      className: css.avatarWrapperProviderDesktop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AvatarLarge, {\n      user: currentCustomer,\n      className: css.avatarDesktop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    })) : null, /*#__PURE__*/React.createElement(PanelHeading, {\n      panelHeadingState: stateData.headingState,\n      transactionRole: transactionRole,\n      providerName: authorDisplayName,\n      customerName: customerDisplayName,\n      isCustomerBanned: isCustomerBanned,\n      listingId: currentListing.id && currentListing.id.uuid,\n      listingTitle: listingTitle,\n      listingDeleted: listingDeleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.orderDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.orderDetailsMobileSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BreakdownMaybe, {\n      transaction: currentTransaction,\n      transactionRole: transactionRole,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DiminishedActionButtonMaybe, {\n      showDispute: stateData.showDispute,\n      onOpenDisputeModal: onOpenDisputeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    })), savePaymentMethodFailed ? /*#__PURE__*/React.createElement(\"p\", {\n      className: css.genericError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TransactionPanel.savePaymentMethodFailed\",\n      values: {\n        paymentMethodsPageLink\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    })) : null, /*#__PURE__*/React.createElement(DeliveryInfoMaybe, {\n      className: css.deliveryInfoSection,\n      transaction: currentTransaction,\n      listing: currentListing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FeedSection, {\n      rootClassName: css.feedContainer,\n      currentTransaction: currentTransaction,\n      currentUser: currentUser,\n      fetchMessagesError: fetchMessagesError,\n      fetchMessagesInProgress: fetchMessagesInProgress,\n      initialMessageFailed: initialMessageFailed,\n      messages: messages,\n      oldestMessagePageFetched: oldestMessagePageFetched,\n      onOpenReviewModal: onOpenReviewModal,\n      onShowMoreMessages: () => onShowMoreMessages(currentTransaction.id),\n      totalMessagePages: totalMessagePages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }), showSendMessageForm ? /*#__PURE__*/React.createElement(SendMessageForm, {\n      formId: this.sendMessageFormName,\n      rootClassName: css.sendMessageForm,\n      messagePlaceholder: sendMessagePlaceholder,\n      inProgress: sendMessageInProgress,\n      sendMessageError: sendMessageError,\n      onFocus: this.onSendMessageFormFocus,\n      onBlur: this.onSendMessageFormBlur,\n      onSubmit: this.onMessageSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: css.sendingMessageNotAllowed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, sendingMessageNotAllowed), stateData.showActionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n      className: css.mobileActionButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, actionButtons) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.asideDesktop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.stickySection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.detailCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DetailCardImage, {\n      avatarWrapperClassName: css.avatarWrapperDesktop,\n      listingTitle: listingTitle,\n      image: firstImage,\n      provider: currentProvider,\n      isCustomer: isCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DetailCardHeadingsMaybe, {\n      showDetailCardHeadings: stateData.showDetailCardHeadings,\n      listingTitle: listingTitle,\n      subTitle: bookingSubTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }), stateData.showOrderPanel ? /*#__PURE__*/React.createElement(OrderPanel, {\n      className: css.orderPanel,\n      titleClassName: css.orderTitle,\n      isOwnListing: false,\n      unitType: unitType,\n      listing: currentListing,\n      title: listingTitle,\n      author: currentProvider,\n      onSubmit: onSubmitOrderRequest,\n      onManageDisableScrolling: onManageDisableScrolling,\n      timeSlots: timeSlots,\n      fetchTimeSlotsError: fetchTimeSlotsError,\n      onFetchTransactionLineItems: onFetchTransactionLineItems,\n      lineItems: lineItems,\n      fetchLineItemsInProgress: fetchLineItemsInProgress,\n      fetchLineItemsError: fetchLineItemsError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(BreakdownMaybe, {\n      className: css.breakdownContainer,\n      transaction: currentTransaction,\n      transactionRole: transactionRole,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }), stateData.showActionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n      className: css.desktopActionButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, actionButtons) : null), /*#__PURE__*/React.createElement(DiminishedActionButtonMaybe, {\n      showDispute: stateData.showDispute,\n      onOpenDisputeModal: onOpenDisputeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\nTransactionPanelComponent.defaultProps = {\n  rootClassName: null,\n  className: null,\n  currentUser: null,\n  fetchMessagesError: null,\n  initialMessageFailed: false,\n  savePaymentMethodFailed: false,\n  sendMessageError: null,\n  sendReviewError: null,\n  timeSlots: null,\n  fetchTimeSlotsError: null,\n  nextTransitions: null,\n  lineItems: null,\n  fetchLineItemsError: null\n};\nconst actionButtonShape = shape({\n  inProgress: bool.isRequired,\n  error: propTypes.error,\n  onTransition: func.isRequired,\n  buttonText: string.isRequired,\n  errorText: string.isRequired\n});\nTransactionPanelComponent.propTypes = {\n  rootClassName: string,\n  className: string,\n  currentUser: propTypes.currentUser,\n  transaction: propTypes.transaction.isRequired,\n  totalMessagePages: number.isRequired,\n  oldestMessagePageFetched: number.isRequired,\n  messages: arrayOf(propTypes.message).isRequired,\n  initialMessageFailed: bool,\n  savePaymentMethodFailed: bool,\n  fetchMessagesInProgress: bool.isRequired,\n  fetchMessagesError: propTypes.error,\n  sendMessageInProgress: bool.isRequired,\n  sendMessageError: propTypes.error,\n  onManageDisableScrolling: func.isRequired,\n  onOpenDisputeModal: func.isRequired,\n  onOpenReviewModal: func.isRequired,\n  onShowMoreMessages: func.isRequired,\n  onSendMessage: func.isRequired,\n  onSubmitOrderRequest: func.isRequired,\n  timeSlots: arrayOf(propTypes.timeSlot),\n  fetchTimeSlotsError: propTypes.error,\n  nextTransitions: array,\n  // Tx process transition related props\n  markReceivedProps: actionButtonShape.isRequired,\n  markReceivedFromPurchasedProps: actionButtonShape.isRequired,\n  markDeliveredProps: actionButtonShape.isRequired,\n  leaveReviewProps: actionButtonShape.isRequired,\n  // line items\n  onFetchTransactionLineItems: func.isRequired,\n  lineItems: array,\n  fetchLineItemsInProgress: bool.isRequired,\n  fetchLineItemsError: propTypes.error,\n  // from injectIntl\n  intl: intlShape\n};\nconst TransactionPanel = injectIntl(TransactionPanelComponent);\n_c = TransactionPanel;\nexport default TransactionPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPanel\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/TransactionPage/TransactionPanel/TransactionPanel.js"],"names":["React","Component","array","arrayOf","bool","func","number","shape","string","classNames","config","TRANSITION_REQUEST_PAYMENT_AFTER_ENQUIRY","txHasBeenReceived","txIsCanceled","txIsDelivered","txIsDisputed","txIsEnquired","txIsPaymentExpired","txIsPaymentPending","txIsPurchased","txIsReceived","txIsCompleted","txIsInFirstReviewBy","FormattedMessage","injectIntl","intlShape","LINE_ITEM_NIGHT","LINE_ITEM_DAY","propTypes","ensureListing","ensureTransaction","ensureUser","userDisplayNameAsString","isMobileSafari","formatMoney","AvatarLarge","OrderPanel","NamedLink","UserDisplayName","SendMessageForm","BreakdownMaybe","DetailCardHeadingsMaybe","DetailCardImage","DeliveryInfoMaybe","FeedSection","ActionButtonsMaybe","DiminishedActionButtonMaybe","PanelHeading","HEADING_ENQUIRED","HEADING_PAYMENT_PENDING","HEADING_PAYMENT_EXPIRED","HEADING_CANCELED","HEADING_PURCHASED","HEADING_DELIVERED","HEADING_DISPUTED","HEADING_RECEIVED","css","displayNames","currentUser","currentProvider","currentCustomer","intl","authorDisplayName","customerDisplayName","otherUserDisplayName","otherUserDisplayNameString","currentUserIsCustomer","id","uuid","currentUserIsProvider","TransactionPanelComponent","constructor","props","state","sendMessageFormFocused","isMobSaf","sendMessageFormName","onSendMessageFormFocus","bind","onSendMessageFormBlur","onMessageSubmit","scrollToMessage","componentDidMount","setState","window","scroll","top","document","body","scrollHeight","left","behavior","values","form","message","trim","transaction","onSendMessage","ensuredTransaction","then","messageId","reset","catch","e","selector","el","querySelector","scrollIntoView","block","render","rootClassName","className","totalMessagePages","oldestMessagePageFetched","messages","initialMessageFailed","savePaymentMethodFailed","fetchMessagesInProgress","fetchMessagesError","sendMessageInProgress","sendMessageError","onManageDisableScrolling","onOpenDisputeModal","onOpenReviewModal","onShowMoreMessages","transactionRole","markReceivedProps","markReceivedFromPurchasedProps","markDeliveredProps","leaveReviewProps","onSubmitOrderRequest","timeSlots","fetchTimeSlotsError","nextTransitions","onFetchTransactionLineItems","lineItems","fetchLineItemsInProgress","fetchLineItemsError","currentTransaction","currentListing","listing","provider","customer","isCustomer","isProvider","listingLoaded","listingDeleted","attributes","deleted","iscustomerLoaded","isCustomerBanned","banned","isCustomerDeleted","isProviderLoaded","isProviderBanned","isProviderDeleted","stateDataFn","tx","transitions","Array","isArray","map","transition","name","hasCorrectNextTransition","length","includes","headingState","showOrderPanel","showDetailCardHeadings","showActionButtons","primaryButtonProps","primaryButtonPropsMaybe","showDispute","stateData","deletedListingTitle","formatMessage","publicData","geolocation","location","listingTitle","title","unitType","lineItemUnitType","isNightly","isDaily","unitTranslationKey","price","bookingSubTitle","firstImage","images","actionButtons","secondaryButtonProps","showSendMessageForm","sendMessagePlaceholder","sendingMessageNotAllowed","paymentMethodsPageLink","classes","root","container","txInfo","imageWrapperMobile","avatarWrapperMobile","avatarWrapperProviderDesktop","avatarDesktop","orderDetails","orderDetailsMobileSection","genericError","deliveryInfoSection","feedContainer","sendMessageForm","mobileActionButtons","asideDesktop","stickySection","detailCard","avatarWrapperDesktop","orderPanel","orderTitle","breakdownContainer","desktopActionButtons","defaultProps","sendReviewError","actionButtonShape","inProgress","isRequired","error","onTransition","buttonText","errorText","timeSlot","TransactionPanel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,MAApD,QAAkE,YAAlE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SACEC,wCADF,EAEEC,iBAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,kBAPF,EAQEC,kBARF,EASEC,aATF,EAUEC,YAVF,EAWEC,aAXF,EAYEC,mBAZF,QAaO,2BAbP;AAcA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAwD,yBAAxD;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,qBAA1D;AACA,SACEC,aADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,uBAJF,QAKO,oBALP;AAMA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,eAA7C,QAAoE,qBAApE;AAEA,OAAOC,eAAP,MAA4B,oCAA5B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AACA,OAAOC,YAAP,IACEC,gBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,gBAJF,EAKEC,iBALF,EAMEC,iBANF,EAOEC,gBAPF,EAQEC,gBARF,QASO,gBATP;AAWA,OAAOC,GAAP,MAAgB,+BAAhB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAACC,WAAD,EAAcC,eAAd,EAA+BC,eAA/B,EAAgDC,IAAhD,KAAyD;AAC5E,QAAMC,iBAAiB,gBAAG,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEH,eAAvB;AAAwC,IAAA,IAAI,EAAEE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B;AACA,QAAME,mBAAmB,gBAAG,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEH,eAAvB;AAAwC,IAAA,IAAI,EAAEC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B;AAEA,MAAIG,oBAAoB,GAAG,EAA3B;AACA,MAAIC,0BAA0B,GAAG,EAAjC;AACA,QAAMC,qBAAqB,GACzBR,WAAW,CAACS,EAAZ,IAAkBP,eAAe,CAACO,EAAlC,IAAwCT,WAAW,CAACS,EAAZ,CAAeC,IAAf,KAAwBR,eAAe,CAACO,EAAhB,CAAmBC,IADrF;AAEA,QAAMC,qBAAqB,GACzBX,WAAW,CAACS,EAAZ,IAAkBR,eAAe,CAACQ,EAAlC,IAAwCT,WAAW,CAACS,EAAZ,CAAeC,IAAf,KAAwBT,eAAe,CAACQ,EAAhB,CAAmBC,IADrF;;AAGA,MAAIF,qBAAJ,EAA2B;AACzBF,IAAAA,oBAAoB,GAAGF,iBAAvB;AACAG,IAAAA,0BAA0B,GAAGjC,uBAAuB,CAAC2B,eAAD,EAAkB,EAAlB,CAApD;AACD,GAHD,MAGO,IAAIU,qBAAJ,EAA2B;AAChCL,IAAAA,oBAAoB,GAAGD,mBAAvB;AACAE,IAAAA,0BAA0B,GAAGjC,uBAAuB,CAAC4B,eAAD,EAAkB,EAAlB,CAApD;AACD;;AAED,SAAO;AACLE,IAAAA,iBADK;AAELC,IAAAA,mBAFK;AAGLC,IAAAA,oBAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAzBD;;AA2BA,OAAO,MAAMK,yBAAN,SAAwCrE,SAAxC,CAAkD;AACvDsE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,sBAAsB,EAAE;AADb,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,mBAAL,GAA2B,kCAA3B;AAEA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,QAAL,GAAgB1C,cAAc,EAA9B;AACD;;AAED4C,EAAAA,sBAAsB,GAAG;AACvB,SAAKM,QAAL,CAAc;AAAET,MAAAA,sBAAsB,EAAE;AAA1B,KAAd;;AACA,QAAI,KAAKC,QAAT,EAAmB;AACjB;AACAS,MAAAA,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,GAAG,EAAEC,QAAQ,CAACC,IAAT,CAAcC,YAArB;AAAmCC,QAAAA,IAAI,EAAE,CAAzC;AAA4CC,QAAAA,QAAQ,EAAE;AAAtD,OAAd;AACD;AACF;;AAEDZ,EAAAA,qBAAqB,GAAG;AACtB,SAAKI,QAAL,CAAc;AAAET,MAAAA,sBAAsB,EAAE;AAA1B,KAAd;AACD;;AAEDM,EAAAA,eAAe,CAACY,MAAD,EAASC,IAAT,EAAe;AAC5B,UAAMC,OAAO,GAAGF,MAAM,CAACE,OAAP,GAAiBF,MAAM,CAACE,OAAP,CAAeC,IAAf,EAAjB,GAAyC,IAAzD;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAiC,KAAKzB,KAA5C;AACA,UAAM0B,kBAAkB,GAAGpE,iBAAiB,CAACkE,WAAD,CAA5C;;AAEA,QAAI,CAACF,OAAL,EAAc;AACZ;AACD;;AACDG,IAAAA,aAAa,CAACC,kBAAkB,CAAC/B,EAApB,EAAwB2B,OAAxB,CAAb,CACGK,IADH,CACQC,SAAS,IAAI;AACjBP,MAAAA,IAAI,CAACQ,KAAL;AACA,WAAKpB,eAAL,CAAqBmB,SAArB;AACD,KAJH,EAKGE,KALH,CAKSC,CAAC,IAAI,CACV;AACD,KAPH;AAQD;;AAEDtB,EAAAA,eAAe,CAACmB,SAAD,EAAY;AACzB,UAAMI,QAAQ,GAAI,QAAOJ,SAAS,CAAChC,IAAK,EAAxC;AACA,UAAMqC,EAAE,GAAGlB,QAAQ,CAACmB,aAAT,CAAuBF,QAAvB,CAAX;;AACA,QAAIC,EAAJ,EAAQ;AACNA,MAAAA,EAAE,CAACE,cAAH,CAAkB;AAChBC,QAAAA,KAAK,EAAE,OADS;AAEhBjB,QAAAA,QAAQ,EAAE;AAFM,OAAlB;AAID;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,aADI;AAEJC,MAAAA,SAFI;AAGJrD,MAAAA,WAHI;AAIJsC,MAAAA,WAJI;AAKJgB,MAAAA,iBALI;AAMJC,MAAAA,wBANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,oBARI;AASJC,MAAAA,uBATI;AAUJC,MAAAA,uBAVI;AAWJC,MAAAA,kBAXI;AAYJC,MAAAA,qBAZI;AAaJC,MAAAA,gBAbI;AAcJC,MAAAA,wBAdI;AAeJC,MAAAA,kBAfI;AAgBJC,MAAAA,iBAhBI;AAiBJC,MAAAA,kBAjBI;AAkBJC,MAAAA,eAlBI;AAmBJhE,MAAAA,IAnBI;AAoBJiE,MAAAA,iBApBI;AAqBJC,MAAAA,8BArBI;AAsBJC,MAAAA,kBAtBI;AAuBJC,MAAAA,gBAvBI;AAwBJC,MAAAA,oBAxBI;AAyBJC,MAAAA,SAzBI;AA0BJC,MAAAA,mBA1BI;AA2BJC,MAAAA,eA3BI;AA4BJC,MAAAA,2BA5BI;AA6BJC,MAAAA,SA7BI;AA8BJC,MAAAA,wBA9BI;AA+BJC,MAAAA;AA/BI,QAgCF,KAAKjE,KAhCT;AAkCA,UAAMkE,kBAAkB,GAAG5G,iBAAiB,CAACkE,WAAD,CAA5C;AACA,UAAM2C,cAAc,GAAG9G,aAAa,CAAC6G,kBAAkB,CAACE,OAApB,CAApC;AACA,UAAMjF,eAAe,GAAG5B,UAAU,CAAC2G,kBAAkB,CAACG,QAApB,CAAlC;AACA,UAAMjF,eAAe,GAAG7B,UAAU,CAAC2G,kBAAkB,CAACI,QAApB,CAAlC;AACA,UAAMC,UAAU,GAAGlB,eAAe,KAAK,UAAvC;AACA,UAAMmB,UAAU,GAAGnB,eAAe,KAAK,UAAvC;AAEA,UAAMoB,aAAa,GAAG,CAAC,CAACN,cAAc,CAACxE,EAAvC;AACA,UAAM+E,cAAc,GAAGD,aAAa,IAAIN,cAAc,CAACQ,UAAf,CAA0BC,OAAlE;AACA,UAAMC,gBAAgB,GAAG,CAAC,CAACzF,eAAe,CAACO,EAA3C;AACA,UAAMmF,gBAAgB,GAAGD,gBAAgB,IAAIzF,eAAe,CAACuF,UAAhB,CAA2BI,MAAxE;AACA,UAAMC,iBAAiB,GAAGH,gBAAgB,IAAIzF,eAAe,CAACuF,UAAhB,CAA2BC,OAAzE;AACA,UAAMK,gBAAgB,GAAG,CAAC,CAAC9F,eAAe,CAACQ,EAA3C;AACA,UAAMuF,gBAAgB,GAAGD,gBAAgB,IAAI9F,eAAe,CAACwF,UAAhB,CAA2BI,MAAxE;AACA,UAAMI,iBAAiB,GAAGF,gBAAgB,IAAI9F,eAAe,CAACwF,UAAhB,CAA2BC,OAAzE;;AAEA,UAAMQ,WAAW,GAAGC,EAAE,IAAI;AACxB,UAAI7I,YAAY,CAAC6I,EAAD,CAAhB,EAAsB;AACpB,cAAMC,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAc3B,eAAd,IAChBA,eAAe,CAAC4B,GAAhB,CAAoBC,UAAU,IAAI;AAChC,iBAAOA,UAAU,CAACf,UAAX,CAAsBgB,IAA7B;AACD,SAFD,CADgB,GAIhB,EAJJ;AAKA,cAAMC,wBAAwB,GAC5BN,WAAW,CAACO,MAAZ,GAAqB,CAArB,IAA0BP,WAAW,CAACQ,QAAZ,CAAqB3J,wCAArB,CAD5B;AAEA,eAAO;AACL4J,UAAAA,YAAY,EAAEvH,gBADT;AAELwH,UAAAA,cAAc,EAAEzB,UAAU,IAAI,CAACW,gBAAf,IAAmCU;AAF9C,SAAP;AAID,OAZD,MAYO,IAAIlJ,kBAAkB,CAAC2I,EAAD,CAAtB,EAA4B;AACjC,eAAO;AACLU,UAAAA,YAAY,EAAEtH,uBADT;AAELwH,UAAAA,sBAAsB,EAAE1B;AAFnB,SAAP;AAID,OALM,MAKA,IAAI9H,kBAAkB,CAAC4I,EAAD,CAAtB,EAA4B;AACjC,eAAO;AACLU,UAAAA,YAAY,EAAErH,uBADT;AAELuH,UAAAA,sBAAsB,EAAE1B;AAFnB,SAAP;AAID,OALM,MAKA,IAAI5H,aAAa,CAAC0I,EAAD,CAAjB,EAAuB;AAC5B,eAAO;AACLU,UAAAA,YAAY,EAAEnH,iBADT;AAELqH,UAAAA,sBAAsB,EAAE1B,UAFnB;AAGL2B,UAAAA,iBAAiB,EAAE,IAHd;AAILC,UAAAA,kBAAkB,EAAE5B,UAAU,GAAGhB,8BAAH,GAAoCC;AAJ7D,SAAP;AAMD,OAPM,MAOA,IAAInH,YAAY,CAACgJ,EAAD,CAAhB,EAAsB;AAC3B,eAAO;AACLU,UAAAA,YAAY,EAAEpH,gBADT;AAELsH,UAAAA,sBAAsB,EAAE1B;AAFnB,SAAP;AAID,OALM,MAKA,IAAIjI,aAAa,CAAC+I,EAAD,CAAjB,EAAuB;AAC5B,cAAMe,uBAAuB,GAAG7B,UAAU,GAAG;AAAE4B,UAAAA,kBAAkB,EAAE7C;AAAtB,SAAH,GAA+C,EAAzF;AACA,eAAO;AACLyC,UAAAA,YAAY,EAAElH,iBADT;AAELoH,UAAAA,sBAAsB,EAAE1B,UAFnB;AAGL2B,UAAAA,iBAAiB,EAAE3B,UAHd;AAIL,aAAG6B,uBAJE;AAKLC,UAAAA,WAAW,EAAE9B;AALR,SAAP;AAOD,OATM,MASA,IAAIhI,YAAY,CAAC8I,EAAD,CAAhB,EAAsB;AAC3B,eAAO;AACLU,UAAAA,YAAY,EAAEjH,gBADT;AAELmH,UAAAA,sBAAsB,EAAE1B;AAFnB,SAAP;AAID,OALM,MAKA,IAAI3H,YAAY,CAACyI,EAAD,CAAZ,IAAoBxI,aAAa,CAACwI,EAAD,CAAjC,IAAyCvI,mBAAmB,CAACuI,EAAD,EAAK,CAACd,UAAN,CAAhE,EAAmF;AACxF,eAAO;AACLwB,UAAAA,YAAY,EAAEhH,gBADT;AAELkH,UAAAA,sBAAsB,EAAE1B,UAFnB;AAGL2B,UAAAA,iBAAiB,EAAE,IAHd;AAILC,UAAAA,kBAAkB,EAAE1C;AAJf,SAAP;AAMD,OAPM,MAOA,IAAIrH,iBAAiB,CAACiJ,EAAD,CAArB,EAA2B;AAChC,eAAO;AACLU,UAAAA,YAAY,EAAEhH,gBADT;AAELkH,UAAAA,sBAAsB,EAAE1B;AAFnB,SAAP;AAID,OALM,MAKA;AACL,eAAO;AAAEwB,UAAAA,YAAY,EAAE;AAAhB,SAAP;AACD;AACF,KAhED;;AAiEA,UAAMO,SAAS,GAAGlB,WAAW,CAAClB,kBAAD,CAA7B;AAEA,UAAMqC,mBAAmB,GAAGlH,IAAI,CAACmH,aAAL,CAAmB;AAC7C7G,MAAAA,EAAE,EAAE;AADyC,KAAnB,CAA5B;AAIA,UAAM;AAAEL,MAAAA,iBAAF;AAAqBC,MAAAA,mBAArB;AAA0CE,MAAAA;AAA1C,QAAyER,YAAY,CACzFC,WADyF,EAEzFC,eAFyF,EAGzFC,eAHyF,EAIzFC,IAJyF,CAA3F;AAOA,UAAM;AAAEoH,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8BvC,cAAc,CAACQ,UAAnD;AACA,UAAMgC,QAAQ,GAAGF,UAAU,IAAIA,UAAU,CAACE,QAAzB,GAAoCF,UAAU,CAACE,QAA/C,GAA0D,EAA3E;AACA,UAAMC,YAAY,GAAGzC,cAAc,CAACQ,UAAf,CAA0BC,OAA1B,GACjB2B,mBADiB,GAEjBpC,cAAc,CAACQ,UAAf,CAA0BkC,KAF9B;AAIA,UAAMC,QAAQ,GAAG5K,MAAM,CAAC6K,gBAAxB;AACA,UAAMC,SAAS,GAAGF,QAAQ,KAAK5J,eAA/B;AACA,UAAM+J,OAAO,GAAGH,QAAQ,KAAK3J,aAA7B;AAEA,UAAM+J,kBAAkB,GAAGF,SAAS,GAChC,2BADgC,GAEhCC,OAAO,GACP,yBADO,GAEP,0BAJJ;AAMA,UAAME,KAAK,GAAGhD,cAAc,CAACQ,UAAf,CAA0BwC,KAAxC;AACA,UAAMC,eAAe,GAAGD,KAAK,GACxB,GAAEzJ,WAAW,CAAC2B,IAAD,EAAO8H,KAAP,CAAc,IAAG9H,IAAI,CAACmH,aAAL,CAAmB;AAAE7G,MAAAA,EAAE,EAAEuH;AAAN,KAAnB,CAA+C,EADrD,GAEzB,EAFJ;AAIA,UAAMG,UAAU,GACdlD,cAAc,CAACmD,MAAf,IAAyBnD,cAAc,CAACmD,MAAf,CAAsBzB,MAAtB,GAA+B,CAAxD,GAA4D1B,cAAc,CAACmD,MAAf,CAAsB,CAAtB,CAA5D,GAAuF,IADzF;AAGA,UAAMC,aAAa,gBACjB,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAEjB,SAAS,CAACJ,iBADzB;AAEE,MAAA,kBAAkB,EAAEI,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEH,kBAFjC;AAGE,MAAA,oBAAoB,EAAEG,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEkB,oBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQA,UAAMC,mBAAmB,GACvB,CAAC3C,gBAAD,IAAqB,CAACE,iBAAtB,IAA2C,CAACE,gBAA5C,IAAgE,CAACC,iBADnE;AAGA,UAAMuC,sBAAsB,GAAGrI,IAAI,CAACmH,aAAL,CAC7B;AAAE7G,MAAAA,EAAE,EAAE;AAAN,KAD6B,EAE7B;AAAEgG,MAAAA,IAAI,EAAElG;AAAR,KAF6B,CAA/B;AAKA,UAAMkI,wBAAwB,GAAGtI,IAAI,CAACmH,aAAL,CAAmB;AAClD7G,MAAAA,EAAE,EAAE;AAD8C,KAAnB,CAAjC;AAIA,UAAMiI,sBAAsB,gBAC1B,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,yCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMA,UAAMC,OAAO,GAAG5L,UAAU,CAACqG,aAAa,IAAItD,GAAG,CAAC8I,IAAtB,EAA4BvF,SAA5B,CAA1B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEsF,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE7I,GAAG,CAAC+I,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE/I,GAAG,CAACgJ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,aAAa,EAAEhJ,GAAG,CAACiJ,kBADrB;AAEE,MAAA,sBAAsB,EAAEjJ,GAAG,CAACkJ,mBAF9B;AAGE,MAAA,YAAY,EAAEtB,YAHhB;AAIE,MAAA,KAAK,EAAES,UAJT;AAKE,MAAA,QAAQ,EAAElI,eALZ;AAME,MAAA,UAAU,EAAEoF,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASGC,UAAU,gBACT;AAAK,MAAA,SAAS,EAAExF,GAAG,CAACmJ,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE/I,eAAnB;AAAoC,MAAA,SAAS,EAAEJ,GAAG,CAACoJ,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADS,GAIP,IAbN,eAeE,oBAAC,YAAD;AACE,MAAA,iBAAiB,EAAE9B,SAAS,CAACP,YAD/B;AAEE,MAAA,eAAe,EAAE1C,eAFnB;AAGE,MAAA,YAAY,EAAE/D,iBAHhB;AAIE,MAAA,YAAY,EAAEC,mBAJhB;AAKE,MAAA,gBAAgB,EAAEuF,gBALpB;AAME,MAAA,SAAS,EAAEX,cAAc,CAACxE,EAAf,IAAqBwE,cAAc,CAACxE,EAAf,CAAkBC,IANpD;AAOE,MAAA,YAAY,EAAEgH,YAPhB;AAQE,MAAA,cAAc,EAAElC,cARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eA0BE;AAAK,MAAA,SAAS,EAAE1F,GAAG,CAACqJ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAErJ,GAAG,CAACsJ,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,WAAW,EAAEpE,kBADf;AAEE,MAAA,eAAe,EAAEb,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,2BAAD;AACE,MAAA,WAAW,EAAEiD,SAAS,CAACD,WADzB;AAEE,MAAA,kBAAkB,EAAEnD,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,EAYGN,uBAAuB,gBACtB;AAAG,MAAA,SAAS,EAAE5D,GAAG,CAACuJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,0CADL;AAEE,MAAA,MAAM,EAAE;AAAEX,QAAAA;AAAF,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADsB,GAOpB,IAnBN,eAoBE,oBAAC,iBAAD;AACE,MAAA,SAAS,EAAE5I,GAAG,CAACwJ,mBADjB;AAEE,MAAA,WAAW,EAAEtE,kBAFf;AAGE,MAAA,OAAO,EAAEC,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CA1BF,eAqDE,oBAAC,WAAD;AACE,MAAA,aAAa,EAAEnF,GAAG,CAACyJ,aADrB;AAEE,MAAA,kBAAkB,EAAEvE,kBAFtB;AAGE,MAAA,WAAW,EAAEhF,WAHf;AAIE,MAAA,kBAAkB,EAAE4D,kBAJtB;AAKE,MAAA,uBAAuB,EAAED,uBAL3B;AAME,MAAA,oBAAoB,EAAEF,oBANxB;AAOE,MAAA,QAAQ,EAAED,QAPZ;AAQE,MAAA,wBAAwB,EAAED,wBAR5B;AASE,MAAA,iBAAiB,EAAEU,iBATrB;AAUE,MAAA,kBAAkB,EAAE,MAAMC,kBAAkB,CAACc,kBAAkB,CAACvE,EAApB,CAV9C;AAWE,MAAA,iBAAiB,EAAE6C,iBAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArDF,EAkEGiF,mBAAmB,gBAClB,oBAAC,eAAD;AACE,MAAA,MAAM,EAAE,KAAKrH,mBADf;AAEE,MAAA,aAAa,EAAEpB,GAAG,CAAC0J,eAFrB;AAGE,MAAA,kBAAkB,EAAEhB,sBAHtB;AAIE,MAAA,UAAU,EAAE3E,qBAJd;AAKE,MAAA,gBAAgB,EAAEC,gBALpB;AAME,MAAA,OAAO,EAAE,KAAK3C,sBANhB;AAOE,MAAA,MAAM,EAAE,KAAKE,qBAPf;AAQE,MAAA,QAAQ,EAAE,KAAKC,eARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,gBAYlB;AAAK,MAAA,SAAS,EAAExB,GAAG,CAAC2I,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CA,wBAA/C,CA9EJ,EAiFGrB,SAAS,CAACJ,iBAAV,gBACC;AAAK,MAAA,SAAS,EAAElH,GAAG,CAAC2J,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CpB,aAA1C,CADD,GAEG,IAnFN,CADF,eAuFE;AAAK,MAAA,SAAS,EAAEvI,GAAG,CAAC4J,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE5J,GAAG,CAAC6J,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE7J,GAAG,CAAC8J,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,sBAAsB,EAAE9J,GAAG,CAAC+J,oBAD9B;AAEE,MAAA,YAAY,EAAEnC,YAFhB;AAGE,MAAA,KAAK,EAAES,UAHT;AAIE,MAAA,QAAQ,EAAElI,eAJZ;AAKE,MAAA,UAAU,EAAEoF,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,uBAAD;AACE,MAAA,sBAAsB,EAAE+B,SAAS,CAACL,sBADpC;AAEE,MAAA,YAAY,EAAEW,YAFhB;AAGE,MAAA,QAAQ,EAAEQ,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAcGd,SAAS,CAACN,cAAV,gBACC,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEhH,GAAG,CAACgK,UADjB;AAEE,MAAA,cAAc,EAAEhK,GAAG,CAACiK,UAFtB;AAGE,MAAA,YAAY,EAAE,KAHhB;AAIE,MAAA,QAAQ,EAAEnC,QAJZ;AAKE,MAAA,OAAO,EAAE3C,cALX;AAME,MAAA,KAAK,EAAEyC,YANT;AAOE,MAAA,MAAM,EAAEzH,eAPV;AAQE,MAAA,QAAQ,EAAEuE,oBARZ;AASE,MAAA,wBAAwB,EAAET,wBAT5B;AAUE,MAAA,SAAS,EAAEU,SAVb;AAWE,MAAA,mBAAmB,EAAEC,mBAXvB;AAYE,MAAA,2BAA2B,EAAEE,2BAZ/B;AAaE,MAAA,SAAS,EAAEC,SAbb;AAcE,MAAA,wBAAwB,EAAEC,wBAd5B;AAeE,MAAA,mBAAmB,EAAEC,mBAfvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAkBG,IAhCN,eAiCE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAEjF,GAAG,CAACkK,kBADjB;AAEE,MAAA,WAAW,EAAEhF,kBAFf;AAGE,MAAA,eAAe,EAAEb,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAuCGiD,SAAS,CAACJ,iBAAV,gBACC;AAAK,MAAA,SAAS,EAAElH,GAAG,CAACmK,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C5B,aAA3C,CADD,GAEG,IAzCN,CADF,eA4CE,oBAAC,2BAAD;AACE,MAAA,WAAW,EAAEjB,SAAS,CAACD,WADzB;AAEE,MAAA,kBAAkB,EAAEnD,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,CADF,CAvFF,CADF,CADF;AA+ID;;AAhYsD;AAmYzDpD,yBAAyB,CAACsJ,YAA1B,GAAyC;AACvC9G,EAAAA,aAAa,EAAE,IADwB;AAEvCC,EAAAA,SAAS,EAAE,IAF4B;AAGvCrD,EAAAA,WAAW,EAAE,IAH0B;AAIvC4D,EAAAA,kBAAkB,EAAE,IAJmB;AAKvCH,EAAAA,oBAAoB,EAAE,KALiB;AAMvCC,EAAAA,uBAAuB,EAAE,KANc;AAOvCI,EAAAA,gBAAgB,EAAE,IAPqB;AAQvCqG,EAAAA,eAAe,EAAE,IARsB;AASvC1F,EAAAA,SAAS,EAAE,IAT4B;AAUvCC,EAAAA,mBAAmB,EAAE,IAVkB;AAWvCC,EAAAA,eAAe,EAAE,IAXsB;AAYvCE,EAAAA,SAAS,EAAE,IAZ4B;AAavCE,EAAAA,mBAAmB,EAAE;AAbkB,CAAzC;AAgBA,MAAMqF,iBAAiB,GAAGvN,KAAK,CAAC;AAC9BwN,EAAAA,UAAU,EAAE3N,IAAI,CAAC4N,UADa;AAE9BC,EAAAA,KAAK,EAAErM,SAAS,CAACqM,KAFa;AAG9BC,EAAAA,YAAY,EAAE7N,IAAI,CAAC2N,UAHW;AAI9BG,EAAAA,UAAU,EAAE3N,MAAM,CAACwN,UAJW;AAK9BI,EAAAA,SAAS,EAAE5N,MAAM,CAACwN;AALY,CAAD,CAA/B;AAQA1J,yBAAyB,CAAC1C,SAA1B,GAAsC;AACpCkF,EAAAA,aAAa,EAAEtG,MADqB;AAEpCuG,EAAAA,SAAS,EAAEvG,MAFyB;AAIpCkD,EAAAA,WAAW,EAAE9B,SAAS,CAAC8B,WAJa;AAKpCsC,EAAAA,WAAW,EAAEpE,SAAS,CAACoE,WAAV,CAAsBgI,UALC;AAMpChH,EAAAA,iBAAiB,EAAE1G,MAAM,CAAC0N,UANU;AAOpC/G,EAAAA,wBAAwB,EAAE3G,MAAM,CAAC0N,UAPG;AAQpC9G,EAAAA,QAAQ,EAAE/G,OAAO,CAACyB,SAAS,CAACkE,OAAX,CAAP,CAA2BkI,UARD;AASpC7G,EAAAA,oBAAoB,EAAE/G,IATc;AAUpCgH,EAAAA,uBAAuB,EAAEhH,IAVW;AAWpCiH,EAAAA,uBAAuB,EAAEjH,IAAI,CAAC4N,UAXM;AAYpC1G,EAAAA,kBAAkB,EAAE1F,SAAS,CAACqM,KAZM;AAapC1G,EAAAA,qBAAqB,EAAEnH,IAAI,CAAC4N,UAbQ;AAcpCxG,EAAAA,gBAAgB,EAAE5F,SAAS,CAACqM,KAdQ;AAepCxG,EAAAA,wBAAwB,EAAEpH,IAAI,CAAC2N,UAfK;AAgBpCtG,EAAAA,kBAAkB,EAAErH,IAAI,CAAC2N,UAhBW;AAiBpCrG,EAAAA,iBAAiB,EAAEtH,IAAI,CAAC2N,UAjBY;AAkBpCpG,EAAAA,kBAAkB,EAAEvH,IAAI,CAAC2N,UAlBW;AAmBpC/H,EAAAA,aAAa,EAAE5F,IAAI,CAAC2N,UAnBgB;AAoBpC9F,EAAAA,oBAAoB,EAAE7H,IAAI,CAAC2N,UApBS;AAqBpC7F,EAAAA,SAAS,EAAEhI,OAAO,CAACyB,SAAS,CAACyM,QAAX,CArBkB;AAsBpCjG,EAAAA,mBAAmB,EAAExG,SAAS,CAACqM,KAtBK;AAuBpC5F,EAAAA,eAAe,EAAEnI,KAvBmB;AAyBpC;AACA4H,EAAAA,iBAAiB,EAAEgG,iBAAiB,CAACE,UA1BD;AA2BpCjG,EAAAA,8BAA8B,EAAE+F,iBAAiB,CAACE,UA3Bd;AA4BpChG,EAAAA,kBAAkB,EAAE8F,iBAAiB,CAACE,UA5BF;AA6BpC/F,EAAAA,gBAAgB,EAAE6F,iBAAiB,CAACE,UA7BA;AA+BpC;AACA1F,EAAAA,2BAA2B,EAAEjI,IAAI,CAAC2N,UAhCE;AAiCpCzF,EAAAA,SAAS,EAAErI,KAjCyB;AAkCpCsI,EAAAA,wBAAwB,EAAEpI,IAAI,CAAC4N,UAlCK;AAmCpCvF,EAAAA,mBAAmB,EAAE7G,SAAS,CAACqM,KAnCK;AAqCpC;AACApK,EAAAA,IAAI,EAAEpC;AAtC8B,CAAtC;AAyCA,MAAM6M,gBAAgB,GAAG9M,UAAU,CAAC8C,yBAAD,CAAnC;KAAMgK,gB;AAEN,eAAeA,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { array, arrayOf, bool, func, number, shape, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport config from '../../../config';\r\nimport {\r\n  TRANSITION_REQUEST_PAYMENT_AFTER_ENQUIRY,\r\n  txHasBeenReceived,\r\n  txIsCanceled,\r\n  txIsDelivered,\r\n  txIsDisputed,\r\n  txIsEnquired,\r\n  txIsPaymentExpired,\r\n  txIsPaymentPending,\r\n  txIsPurchased,\r\n  txIsReceived,\r\n  txIsCompleted,\r\n  txIsInFirstReviewBy,\r\n} from '../../../util/transaction';\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport { LINE_ITEM_NIGHT, LINE_ITEM_DAY, propTypes } from '../../../util/types';\r\nimport {\r\n  ensureListing,\r\n  ensureTransaction,\r\n  ensureUser,\r\n  userDisplayNameAsString,\r\n} from '../../../util/data';\r\nimport { isMobileSafari } from '../../../util/userAgent';\r\nimport { formatMoney } from '../../../util/currency';\r\nimport { AvatarLarge, OrderPanel, NamedLink, UserDisplayName } from '../../../components';\r\n\r\nimport SendMessageForm from '../SendMessageForm/SendMessageForm';\r\n\r\n// These are internal components that make this file more readable.\r\nimport BreakdownMaybe from './BreakdownMaybe';\r\nimport DetailCardHeadingsMaybe from './DetailCardHeadingsMaybe';\r\nimport DetailCardImage from './DetailCardImage';\r\nimport DeliveryInfoMaybe from './DeliveryInfoMaybe';\r\nimport FeedSection from './FeedSection';\r\nimport ActionButtonsMaybe from './ActionButtonsMaybe';\r\nimport DiminishedActionButtonMaybe from './DiminishedActionButtonMaybe';\r\nimport PanelHeading, {\r\n  HEADING_ENQUIRED,\r\n  HEADING_PAYMENT_PENDING,\r\n  HEADING_PAYMENT_EXPIRED,\r\n  HEADING_CANCELED,\r\n  HEADING_PURCHASED,\r\n  HEADING_DELIVERED,\r\n  HEADING_DISPUTED,\r\n  HEADING_RECEIVED,\r\n} from './PanelHeading';\r\n\r\nimport css from './TransactionPanel.module.css';\r\n\r\n// Helper function to get display names for different roles\r\nconst displayNames = (currentUser, currentProvider, currentCustomer, intl) => {\r\n  const authorDisplayName = <UserDisplayName user={currentProvider} intl={intl} />;\r\n  const customerDisplayName = <UserDisplayName user={currentCustomer} intl={intl} />;\r\n\r\n  let otherUserDisplayName = '';\r\n  let otherUserDisplayNameString = '';\r\n  const currentUserIsCustomer =\r\n    currentUser.id && currentCustomer.id && currentUser.id.uuid === currentCustomer.id.uuid;\r\n  const currentUserIsProvider =\r\n    currentUser.id && currentProvider.id && currentUser.id.uuid === currentProvider.id.uuid;\r\n\r\n  if (currentUserIsCustomer) {\r\n    otherUserDisplayName = authorDisplayName;\r\n    otherUserDisplayNameString = userDisplayNameAsString(currentProvider, '');\r\n  } else if (currentUserIsProvider) {\r\n    otherUserDisplayName = customerDisplayName;\r\n    otherUserDisplayNameString = userDisplayNameAsString(currentCustomer, '');\r\n  }\r\n\r\n  return {\r\n    authorDisplayName,\r\n    customerDisplayName,\r\n    otherUserDisplayName,\r\n    otherUserDisplayNameString,\r\n  };\r\n};\r\n\r\nexport class TransactionPanelComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sendMessageFormFocused: false,\r\n    };\r\n    this.isMobSaf = false;\r\n    this.sendMessageFormName = 'TransactionPanel.SendMessageForm';\r\n\r\n    this.onSendMessageFormFocus = this.onSendMessageFormFocus.bind(this);\r\n    this.onSendMessageFormBlur = this.onSendMessageFormBlur.bind(this);\r\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n    this.scrollToMessage = this.scrollToMessage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.isMobSaf = isMobileSafari();\r\n  }\r\n\r\n  onSendMessageFormFocus() {\r\n    this.setState({ sendMessageFormFocused: true });\r\n    if (this.isMobSaf) {\r\n      // Scroll to bottom\r\n      window.scroll({ top: document.body.scrollHeight, left: 0, behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  onSendMessageFormBlur() {\r\n    this.setState({ sendMessageFormFocused: false });\r\n  }\r\n\r\n  onMessageSubmit(values, form) {\r\n    const message = values.message ? values.message.trim() : null;\r\n    const { transaction, onSendMessage } = this.props;\r\n    const ensuredTransaction = ensureTransaction(transaction);\r\n\r\n    if (!message) {\r\n      return;\r\n    }\r\n    onSendMessage(ensuredTransaction.id, message)\r\n      .then(messageId => {\r\n        form.reset();\r\n        this.scrollToMessage(messageId);\r\n      })\r\n      .catch(e => {\r\n        // Ignore, Redux handles the error\r\n      });\r\n  }\r\n\r\n  scrollToMessage(messageId) {\r\n    const selector = `#msg-${messageId.uuid}`;\r\n    const el = document.querySelector(selector);\r\n    if (el) {\r\n      el.scrollIntoView({\r\n        block: 'start',\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      rootClassName,\r\n      className,\r\n      currentUser,\r\n      transaction,\r\n      totalMessagePages,\r\n      oldestMessagePageFetched,\r\n      messages,\r\n      initialMessageFailed,\r\n      savePaymentMethodFailed,\r\n      fetchMessagesInProgress,\r\n      fetchMessagesError,\r\n      sendMessageInProgress,\r\n      sendMessageError,\r\n      onManageDisableScrolling,\r\n      onOpenDisputeModal,\r\n      onOpenReviewModal,\r\n      onShowMoreMessages,\r\n      transactionRole,\r\n      intl,\r\n      markReceivedProps,\r\n      markReceivedFromPurchasedProps,\r\n      markDeliveredProps,\r\n      leaveReviewProps,\r\n      onSubmitOrderRequest,\r\n      timeSlots,\r\n      fetchTimeSlotsError,\r\n      nextTransitions,\r\n      onFetchTransactionLineItems,\r\n      lineItems,\r\n      fetchLineItemsInProgress,\r\n      fetchLineItemsError,\r\n    } = this.props;\r\n\r\n    const currentTransaction = ensureTransaction(transaction);\r\n    const currentListing = ensureListing(currentTransaction.listing);\r\n    const currentProvider = ensureUser(currentTransaction.provider);\r\n    const currentCustomer = ensureUser(currentTransaction.customer);\r\n    const isCustomer = transactionRole === 'customer';\r\n    const isProvider = transactionRole === 'provider';\r\n\r\n    const listingLoaded = !!currentListing.id;\r\n    const listingDeleted = listingLoaded && currentListing.attributes.deleted;\r\n    const iscustomerLoaded = !!currentCustomer.id;\r\n    const isCustomerBanned = iscustomerLoaded && currentCustomer.attributes.banned;\r\n    const isCustomerDeleted = iscustomerLoaded && currentCustomer.attributes.deleted;\r\n    const isProviderLoaded = !!currentProvider.id;\r\n    const isProviderBanned = isProviderLoaded && currentProvider.attributes.banned;\r\n    const isProviderDeleted = isProviderLoaded && currentProvider.attributes.deleted;\r\n\r\n    const stateDataFn = tx => {\r\n      if (txIsEnquired(tx)) {\r\n        const transitions = Array.isArray(nextTransitions)\r\n          ? nextTransitions.map(transition => {\r\n              return transition.attributes.name;\r\n            })\r\n          : [];\r\n        const hasCorrectNextTransition =\r\n          transitions.length > 0 && transitions.includes(TRANSITION_REQUEST_PAYMENT_AFTER_ENQUIRY);\r\n        return {\r\n          headingState: HEADING_ENQUIRED,\r\n          showOrderPanel: isCustomer && !isProviderBanned && hasCorrectNextTransition,\r\n        };\r\n      } else if (txIsPaymentPending(tx)) {\r\n        return {\r\n          headingState: HEADING_PAYMENT_PENDING,\r\n          showDetailCardHeadings: isCustomer,\r\n        };\r\n      } else if (txIsPaymentExpired(tx)) {\r\n        return {\r\n          headingState: HEADING_PAYMENT_EXPIRED,\r\n          showDetailCardHeadings: isCustomer,\r\n        };\r\n      } else if (txIsPurchased(tx)) {\r\n        return {\r\n          headingState: HEADING_PURCHASED,\r\n          showDetailCardHeadings: isCustomer,\r\n          showActionButtons: true,\r\n          primaryButtonProps: isCustomer ? markReceivedFromPurchasedProps : markDeliveredProps,\r\n        };\r\n      } else if (txIsCanceled(tx)) {\r\n        return {\r\n          headingState: HEADING_CANCELED,\r\n          showDetailCardHeadings: isCustomer,\r\n        };\r\n      } else if (txIsDelivered(tx)) {\r\n        const primaryButtonPropsMaybe = isCustomer ? { primaryButtonProps: markReceivedProps } : {};\r\n        return {\r\n          headingState: HEADING_DELIVERED,\r\n          showDetailCardHeadings: isCustomer,\r\n          showActionButtons: isCustomer,\r\n          ...primaryButtonPropsMaybe,\r\n          showDispute: isCustomer,\r\n        };\r\n      } else if (txIsDisputed(tx)) {\r\n        return {\r\n          headingState: HEADING_DISPUTED,\r\n          showDetailCardHeadings: isCustomer,\r\n        };\r\n      } else if (txIsReceived(tx) || txIsCompleted(tx) || txIsInFirstReviewBy(tx, !isCustomer)) {\r\n        return {\r\n          headingState: HEADING_RECEIVED,\r\n          showDetailCardHeadings: isCustomer,\r\n          showActionButtons: true,\r\n          primaryButtonProps: leaveReviewProps,\r\n        };\r\n      } else if (txHasBeenReceived(tx)) {\r\n        return {\r\n          headingState: HEADING_RECEIVED,\r\n          showDetailCardHeadings: isCustomer,\r\n        };\r\n      } else {\r\n        return { headingState: 'unknown' };\r\n      }\r\n    };\r\n    const stateData = stateDataFn(currentTransaction);\r\n\r\n    const deletedListingTitle = intl.formatMessage({\r\n      id: 'TransactionPanel.deletedListingTitle',\r\n    });\r\n\r\n    const { authorDisplayName, customerDisplayName, otherUserDisplayNameString } = displayNames(\r\n      currentUser,\r\n      currentProvider,\r\n      currentCustomer,\r\n      intl\r\n    );\r\n\r\n    const { publicData, geolocation } = currentListing.attributes;\r\n    const location = publicData && publicData.location ? publicData.location : {};\r\n    const listingTitle = currentListing.attributes.deleted\r\n      ? deletedListingTitle\r\n      : currentListing.attributes.title;\r\n\r\n    const unitType = config.lineItemUnitType;\r\n    const isNightly = unitType === LINE_ITEM_NIGHT;\r\n    const isDaily = unitType === LINE_ITEM_DAY;\r\n\r\n    const unitTranslationKey = isNightly\r\n      ? 'TransactionPanel.perNight'\r\n      : isDaily\r\n      ? 'TransactionPanel.perDay'\r\n      : 'TransactionPanel.perUnit';\r\n\r\n    const price = currentListing.attributes.price;\r\n    const bookingSubTitle = price\r\n      ? `${formatMoney(intl, price)} ${intl.formatMessage({ id: unitTranslationKey })}`\r\n      : '';\r\n\r\n    const firstImage =\r\n      currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\r\n\r\n    const actionButtons = (\r\n      <ActionButtonsMaybe\r\n        showButtons={stateData.showActionButtons}\r\n        primaryButtonProps={stateData?.primaryButtonProps}\r\n        secondaryButtonProps={stateData?.secondaryButtonProps}\r\n      />\r\n    );\r\n\r\n    const showSendMessageForm =\r\n      !isCustomerBanned && !isCustomerDeleted && !isProviderBanned && !isProviderDeleted;\r\n\r\n    const sendMessagePlaceholder = intl.formatMessage(\r\n      { id: 'TransactionPanel.sendMessagePlaceholder' },\r\n      { name: otherUserDisplayNameString }\r\n    );\r\n\r\n    const sendingMessageNotAllowed = intl.formatMessage({\r\n      id: 'TransactionPanel.sendingMessageNotAllowed',\r\n    });\r\n\r\n    const paymentMethodsPageLink = (\r\n      <NamedLink name=\"PaymentMethodsPage\">\r\n        <FormattedMessage id=\"TransactionPanel.paymentMethodsPageLink\" />\r\n      </NamedLink>\r\n    );\r\n\r\n    const classes = classNames(rootClassName || css.root, className);\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className={css.container}>\r\n          <div className={css.txInfo}>\r\n            <DetailCardImage\r\n              rootClassName={css.imageWrapperMobile}\r\n              avatarWrapperClassName={css.avatarWrapperMobile}\r\n              listingTitle={listingTitle}\r\n              image={firstImage}\r\n              provider={currentProvider}\r\n              isCustomer={isCustomer}\r\n            />\r\n            {isProvider ? (\r\n              <div className={css.avatarWrapperProviderDesktop}>\r\n                <AvatarLarge user={currentCustomer} className={css.avatarDesktop} />\r\n              </div>\r\n            ) : null}\r\n\r\n            <PanelHeading\r\n              panelHeadingState={stateData.headingState}\r\n              transactionRole={transactionRole}\r\n              providerName={authorDisplayName}\r\n              customerName={customerDisplayName}\r\n              isCustomerBanned={isCustomerBanned}\r\n              listingId={currentListing.id && currentListing.id.uuid}\r\n              listingTitle={listingTitle}\r\n              listingDeleted={listingDeleted}\r\n            />\r\n\r\n            <div className={css.orderDetails}>\r\n              <div className={css.orderDetailsMobileSection}>\r\n                <BreakdownMaybe\r\n                  transaction={currentTransaction}\r\n                  transactionRole={transactionRole}\r\n                />\r\n                <DiminishedActionButtonMaybe\r\n                  showDispute={stateData.showDispute}\r\n                  onOpenDisputeModal={onOpenDisputeModal}\r\n                />\r\n              </div>\r\n\r\n              {savePaymentMethodFailed ? (\r\n                <p className={css.genericError}>\r\n                  <FormattedMessage\r\n                    id=\"TransactionPanel.savePaymentMethodFailed\"\r\n                    values={{ paymentMethodsPageLink }}\r\n                  />\r\n                </p>\r\n              ) : null}\r\n              <DeliveryInfoMaybe\r\n                className={css.deliveryInfoSection}\r\n                transaction={currentTransaction}\r\n                listing={currentListing}\r\n              />\r\n            </div>\r\n\r\n            <FeedSection\r\n              rootClassName={css.feedContainer}\r\n              currentTransaction={currentTransaction}\r\n              currentUser={currentUser}\r\n              fetchMessagesError={fetchMessagesError}\r\n              fetchMessagesInProgress={fetchMessagesInProgress}\r\n              initialMessageFailed={initialMessageFailed}\r\n              messages={messages}\r\n              oldestMessagePageFetched={oldestMessagePageFetched}\r\n              onOpenReviewModal={onOpenReviewModal}\r\n              onShowMoreMessages={() => onShowMoreMessages(currentTransaction.id)}\r\n              totalMessagePages={totalMessagePages}\r\n            />\r\n            {showSendMessageForm ? (\r\n              <SendMessageForm\r\n                formId={this.sendMessageFormName}\r\n                rootClassName={css.sendMessageForm}\r\n                messagePlaceholder={sendMessagePlaceholder}\r\n                inProgress={sendMessageInProgress}\r\n                sendMessageError={sendMessageError}\r\n                onFocus={this.onSendMessageFormFocus}\r\n                onBlur={this.onSendMessageFormBlur}\r\n                onSubmit={this.onMessageSubmit}\r\n              />\r\n            ) : (\r\n              <div className={css.sendingMessageNotAllowed}>{sendingMessageNotAllowed}</div>\r\n            )}\r\n\r\n            {stateData.showActionButtons ? (\r\n              <div className={css.mobileActionButtons}>{actionButtons}</div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className={css.asideDesktop}>\r\n            <div className={css.stickySection}>\r\n              <div className={css.detailCard}>\r\n                <DetailCardImage\r\n                  avatarWrapperClassName={css.avatarWrapperDesktop}\r\n                  listingTitle={listingTitle}\r\n                  image={firstImage}\r\n                  provider={currentProvider}\r\n                  isCustomer={isCustomer}\r\n                />\r\n\r\n                <DetailCardHeadingsMaybe\r\n                  showDetailCardHeadings={stateData.showDetailCardHeadings}\r\n                  listingTitle={listingTitle}\r\n                  subTitle={bookingSubTitle}\r\n                />\r\n                {stateData.showOrderPanel ? (\r\n                  <OrderPanel\r\n                    className={css.orderPanel}\r\n                    titleClassName={css.orderTitle}\r\n                    isOwnListing={false}\r\n                    unitType={unitType}\r\n                    listing={currentListing}\r\n                    title={listingTitle}\r\n                    author={currentProvider}\r\n                    onSubmit={onSubmitOrderRequest}\r\n                    onManageDisableScrolling={onManageDisableScrolling}\r\n                    timeSlots={timeSlots}\r\n                    fetchTimeSlotsError={fetchTimeSlotsError}\r\n                    onFetchTransactionLineItems={onFetchTransactionLineItems}\r\n                    lineItems={lineItems}\r\n                    fetchLineItemsInProgress={fetchLineItemsInProgress}\r\n                    fetchLineItemsError={fetchLineItemsError}\r\n                  />\r\n                ) : null}\r\n                <BreakdownMaybe\r\n                  className={css.breakdownContainer}\r\n                  transaction={currentTransaction}\r\n                  transactionRole={transactionRole}\r\n                />\r\n\r\n                {stateData.showActionButtons ? (\r\n                  <div className={css.desktopActionButtons}>{actionButtons}</div>\r\n                ) : null}\r\n              </div>\r\n              <DiminishedActionButtonMaybe\r\n                showDispute={stateData.showDispute}\r\n                onOpenDisputeModal={onOpenDisputeModal}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTransactionPanelComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  currentUser: null,\r\n  fetchMessagesError: null,\r\n  initialMessageFailed: false,\r\n  savePaymentMethodFailed: false,\r\n  sendMessageError: null,\r\n  sendReviewError: null,\r\n  timeSlots: null,\r\n  fetchTimeSlotsError: null,\r\n  nextTransitions: null,\r\n  lineItems: null,\r\n  fetchLineItemsError: null,\r\n};\r\n\r\nconst actionButtonShape = shape({\r\n  inProgress: bool.isRequired,\r\n  error: propTypes.error,\r\n  onTransition: func.isRequired,\r\n  buttonText: string.isRequired,\r\n  errorText: string.isRequired,\r\n});\r\n\r\nTransactionPanelComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n\r\n  currentUser: propTypes.currentUser,\r\n  transaction: propTypes.transaction.isRequired,\r\n  totalMessagePages: number.isRequired,\r\n  oldestMessagePageFetched: number.isRequired,\r\n  messages: arrayOf(propTypes.message).isRequired,\r\n  initialMessageFailed: bool,\r\n  savePaymentMethodFailed: bool,\r\n  fetchMessagesInProgress: bool.isRequired,\r\n  fetchMessagesError: propTypes.error,\r\n  sendMessageInProgress: bool.isRequired,\r\n  sendMessageError: propTypes.error,\r\n  onManageDisableScrolling: func.isRequired,\r\n  onOpenDisputeModal: func.isRequired,\r\n  onOpenReviewModal: func.isRequired,\r\n  onShowMoreMessages: func.isRequired,\r\n  onSendMessage: func.isRequired,\r\n  onSubmitOrderRequest: func.isRequired,\r\n  timeSlots: arrayOf(propTypes.timeSlot),\r\n  fetchTimeSlotsError: propTypes.error,\r\n  nextTransitions: array,\r\n\r\n  // Tx process transition related props\r\n  markReceivedProps: actionButtonShape.isRequired,\r\n  markReceivedFromPurchasedProps: actionButtonShape.isRequired,\r\n  markDeliveredProps: actionButtonShape.isRequired,\r\n  leaveReviewProps: actionButtonShape.isRequired,\r\n\r\n  // line items\r\n  onFetchTransactionLineItems: func.isRequired,\r\n  lineItems: array,\r\n  fetchLineItemsInProgress: bool.isRequired,\r\n  fetchLineItemsError: propTypes.error,\r\n\r\n  // from injectIntl\r\n  intl: intlShape,\r\n};\r\n\r\nconst TransactionPanel = injectIntl(TransactionPanelComponent);\r\n\r\nexport default TransactionPanel;\r\n"]},"metadata":{},"sourceType":"module"}