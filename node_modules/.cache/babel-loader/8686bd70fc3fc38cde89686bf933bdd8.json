{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\FieldCheckbox\\\\FieldCheckbox.js\";\nimport React from 'react';\nimport { node, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Field } from 'react-final-form';\nimport css from './FieldCheckbox.module.css';\n\nconst IconCheckbox = props => {\n  const {\n    className,\n    checkedClassName,\n    boxClassName\n  } = props;\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: className,\n    width: \"14\",\n    height: \"14\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(2 2)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: checkedClassName || css.checked,\n    d: \"M9.9992985 1.5048549l-.0194517 6.9993137C9.977549 9.3309651 9.3066522 10 8.4798526 10H1.5001008c-.8284271 0-1.5-.6715729-1.5-1.5l-.000121-7c0-.8284271.6715728-1.5 1.5-1.5h.000121l6.9993246.0006862c.8284272.000067 1.4999458.671694 1.499879 1.5001211a1.5002208 1.5002208 0 0 1-.0000059.0040476z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: boxClassName || css.box,\n    strokeWidth: \"2\",\n    d: \"M10.9992947 1.507634l-.0194518 6.9993137C10.9760133 9.8849417 9.8578519 11 8.4798526 11H1.5001008c-1.3807119 0-2.5-1.1192881-2.5-2.4999827L-1.0000202 1.5c0-1.3807119 1.119288-2.5 2.500098-2.5l6.9994284.0006862c1.3807118.0001115 2.4999096 1.11949 2.4997981 2.5002019-.0000018.003373-.0000018.003373-.0000096.0067458z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.636621 10.7824771L3.3573694 8.6447948c-.4764924-.4739011-.4764924-1.2418639 0-1.7181952.4777142-.473901 1.251098-.473901 1.7288122 0l1.260291 1.1254782 2.8256927-4.5462307c.3934117-.5431636 1.1545778-.6695372 1.7055985-.278265.5473554.3912721.6731983 1.150729.2797866 1.6951077l-3.6650524 5.709111c-.2199195.306213-.5803433.5067097-.9920816.5067097-.3225487 0-.6328797-.1263736-.8637952-.3560334z\",\n    fill: \"#FFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = IconCheckbox;\nIconCheckbox.defaultProps = {\n  className: null,\n  checkedClassName: null,\n  boxClassName: null\n};\nIconCheckbox.propTypes = {\n  className: string,\n  checkedClassName: string,\n  boxClassName: string\n};\n\nconst FieldCheckboxComponent = props => {\n  const {\n    rootClassName,\n    className,\n    svgClassName,\n    textClassName,\n    id,\n    label,\n    useSuccessColor,\n    ...rest\n  } = props;\n  const classes = classNames(rootClassName || css.root, className); // This is a workaround for a bug in Firefox & React Final Form.\n  // https://github.com/final-form/react-final-form/issues/134\n\n  const handleOnChange = (input, event) => {\n    const {\n      onBlur,\n      onChange\n    } = input;\n    onChange(event);\n    onBlur(event); // If onChange has been passed as a props to FieldCheckbox\n\n    if (rest.onChange) {\n      rest.onChange(event);\n    }\n  };\n\n  const successColorVariantMaybe = useSuccessColor ? {\n    checkedClassName: css.checkedSuccess,\n    boxClassName: css.boxSuccess\n  } : {};\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, Object.assign({\n    type: \"checkbox\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), props => {\n    const input = props.input;\n    return /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: id,\n      className: css.input\n    }, input, {\n      onChange: event => handleOnChange(input, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: css.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.checkboxWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconCheckbox, Object.assign({\n    className: svgClassName\n  }, successColorVariantMaybe, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(css.text, textClassName || css.textRoot),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\n_c2 = FieldCheckboxComponent;\nFieldCheckboxComponent.defaultProps = {\n  className: null,\n  rootClassName: null,\n  svgClassName: null,\n  textClassName: null,\n  label: null\n};\nFieldCheckboxComponent.propTypes = {\n  className: string,\n  rootClassName: string,\n  svgClassName: string,\n  textClassName: string,\n  // Id is needed to connect the label with input.\n  id: string.isRequired,\n  label: node,\n  // Name groups several checkboxes to an array of selected values\n  name: string.isRequired,\n  // Checkbox needs a value that is passed forward when user checks the checkbox\n  value: string.isRequired\n};\nexport default FieldCheckboxComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconCheckbox\");\n$RefreshReg$(_c2, \"FieldCheckboxComponent\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/FieldCheckbox/FieldCheckbox.js"],"names":["React","node","string","classNames","Field","css","IconCheckbox","props","className","checkedClassName","boxClassName","checked","box","defaultProps","propTypes","FieldCheckboxComponent","rootClassName","svgClassName","textClassName","id","label","useSuccessColor","rest","classes","root","handleOnChange","input","event","onBlur","onChange","successColorVariantMaybe","checkedSuccess","boxSuccess","checkboxWrapper","text","textRoot","isRequired","name","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { node, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Field } from 'react-final-form';\r\n\r\nimport css from './FieldCheckbox.module.css';\r\n\r\nconst IconCheckbox = props => {\r\n  const { className, checkedClassName, boxClassName } = props;\r\n  return (\r\n    <svg className={className} width=\"14\" height=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(2 2)\">\r\n          <path\r\n            className={checkedClassName || css.checked}\r\n            d=\"M9.9992985 1.5048549l-.0194517 6.9993137C9.977549 9.3309651 9.3066522 10 8.4798526 10H1.5001008c-.8284271 0-1.5-.6715729-1.5-1.5l-.000121-7c0-.8284271.6715728-1.5 1.5-1.5h.000121l6.9993246.0006862c.8284272.000067 1.4999458.671694 1.499879 1.5001211a1.5002208 1.5002208 0 0 1-.0000059.0040476z\"\r\n          />\r\n          <path\r\n            className={boxClassName || css.box}\r\n            strokeWidth=\"2\"\r\n            d=\"M10.9992947 1.507634l-.0194518 6.9993137C10.9760133 9.8849417 9.8578519 11 8.4798526 11H1.5001008c-1.3807119 0-2.5-1.1192881-2.5-2.4999827L-1.0000202 1.5c0-1.3807119 1.119288-2.5 2.500098-2.5l6.9994284.0006862c1.3807118.0001115 2.4999096 1.11949 2.4997981 2.5002019-.0000018.003373-.0000018.003373-.0000096.0067458z\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"M5.636621 10.7824771L3.3573694 8.6447948c-.4764924-.4739011-.4764924-1.2418639 0-1.7181952.4777142-.473901 1.251098-.473901 1.7288122 0l1.260291 1.1254782 2.8256927-4.5462307c.3934117-.5431636 1.1545778-.6695372 1.7055985-.278265.5473554.3912721.6731983 1.150729.2797866 1.6951077l-3.6650524 5.709111c-.2199195.306213-.5803433.5067097-.9920816.5067097-.3225487 0-.6328797-.1263736-.8637952-.3560334z\"\r\n          fill=\"#FFF\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nIconCheckbox.defaultProps = { className: null, checkedClassName: null, boxClassName: null };\r\n\r\nIconCheckbox.propTypes = { className: string, checkedClassName: string, boxClassName: string };\r\n\r\nconst FieldCheckboxComponent = props => {\r\n  const {\r\n    rootClassName,\r\n    className,\r\n    svgClassName,\r\n    textClassName,\r\n    id,\r\n    label,\r\n    useSuccessColor,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  // This is a workaround for a bug in Firefox & React Final Form.\r\n  // https://github.com/final-form/react-final-form/issues/134\r\n  const handleOnChange = (input, event) => {\r\n    const { onBlur, onChange } = input;\r\n    onChange(event);\r\n    onBlur(event);\r\n\r\n    // If onChange has been passed as a props to FieldCheckbox\r\n    if (rest.onChange) {\r\n      rest.onChange(event);\r\n    }\r\n  };\r\n\r\n  const successColorVariantMaybe = useSuccessColor\r\n    ? {\r\n        checkedClassName: css.checkedSuccess,\r\n        boxClassName: css.boxSuccess,\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <span className={classes}>\r\n      <Field type=\"checkbox\" {...rest}>\r\n        {props => {\r\n          const input = props.input;\r\n          return (\r\n            <input\r\n              id={id}\r\n              className={css.input}\r\n              {...input}\r\n              onChange={event => handleOnChange(input, event)}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <label htmlFor={id} className={css.label}>\r\n        <span className={css.checkboxWrapper}>\r\n          <IconCheckbox className={svgClassName} {...successColorVariantMaybe} />\r\n        </span>\r\n        <span className={classNames(css.text, textClassName || css.textRoot)}>{label}</span>\r\n      </label>\r\n    </span>\r\n  );\r\n};\r\n\r\nFieldCheckboxComponent.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  svgClassName: null,\r\n  textClassName: null,\r\n  label: null,\r\n};\r\n\r\nFieldCheckboxComponent.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  svgClassName: string,\r\n  textClassName: string,\r\n\r\n  // Id is needed to connect the label with input.\r\n  id: string.isRequired,\r\n  label: node,\r\n\r\n  // Name groups several checkboxes to an array of selected values\r\n  name: string.isRequired,\r\n\r\n  // Checkbox needs a value that is passed forward when user checks the checkbox\r\n  value: string.isRequired,\r\n};\r\n\r\nexport default FieldCheckboxComponent;\r\n"]},"metadata":{},"sourceType":"module"}