{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\Topbar\\\\TopbarMobileMenu\\\\TopbarMobileMenu.js\";\n\n/**\r\n *  TopbarMobileMenu prints the menu content for authenticated user or\r\n * shows login actions for those who are not authenticated.\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ACCOUNT_SETTINGS_PAGES } from '../../../routing/routeConfiguration';\nimport { FormattedMessage } from '../../../util/reactIntl';\nimport { propTypes } from '../../../util/types';\nimport { ensureCurrentUser } from '../../../util/data';\nimport { AvatarLarge, InlineTextButton, NamedLink, NotificationBadge } from '../../../components';\nimport css from './TopbarMobileMenu.module.css';\n\nconst TopbarMobileMenu = props => {\n  const {\n    isAuthenticated,\n    currentPage,\n    currentUserHasListings,\n    currentUser,\n    notificationCount,\n    onLogout\n  } = props;\n  const user = ensureCurrentUser(currentUser);\n\n  if (!isAuthenticated) {\n    const signup = /*#__PURE__*/React.createElement(NamedLink, {\n      name: \"SignupPage\",\n      className: css.signupLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TopbarMobileMenu.signupLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n    const login = /*#__PURE__*/React.createElement(NamedLink, {\n      name: \"LoginPage\",\n      className: css.loginLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TopbarMobileMenu.loginLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n    const signupOrLogin = /*#__PURE__*/React.createElement(\"span\", {\n      className: css.authenticationLinks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TopbarMobileMenu.signupOrLogin\",\n      values: {\n        signup,\n        login\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: css.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.authenticationGreeting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TopbarMobileMenu.unauthorizedGreeting\",\n      values: {\n        lineBreak: /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 36\n          }\n        }),\n        signupOrLogin\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NamedLink, {\n      className: css.createNewListingLink,\n      name: \"NewListingPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"TopbarMobileMenu.newListingLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  const notificationCountBadge = notificationCount > 0 ? /*#__PURE__*/React.createElement(NotificationBadge, {\n    className: css.notificationBadge,\n    count: notificationCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }) : null;\n  const displayName = user.attributes.profile.firstName;\n\n  const currentPageClass = page => {\n    const isAccountSettingsPage = page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AvatarLarge, {\n    className: css.avatar,\n    user: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.greeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.greeting\",\n    values: {\n      displayName\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InlineTextButton, {\n    rootClassName: css.logoutButton,\n    onClick: onLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.logoutLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.inbox, currentPageClass('InboxPage')),\n    name: \"InboxPage\",\n    params: {\n      tab: currentUserHasListings ? 'sales' : 'orders'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.inboxLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), notificationCountBadge), /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.navigationLink, currentPageClass('ManageListingsPage')),\n    name: \"ManageListingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.yourListingsLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.navigationLink, currentPageClass('ProfileSettingsPage')),\n    name: \"ProfileSettingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.profileSettingsLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(NamedLink, {\n    className: classNames(css.navigationLink, currentPageClass('AccountSettingsPage')),\n    name: \"AccountSettingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.accountSettingsLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.spacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NamedLink, {\n    className: css.createNewListingLink,\n    name: \"NewListingPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"TopbarMobileMenu.newListingLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_c = TopbarMobileMenu;\nTopbarMobileMenu.defaultProps = {\n  currentUser: null,\n  notificationCount: 0,\n  currentPage: null\n};\nconst {\n  bool,\n  func,\n  number,\n  string\n} = PropTypes;\nTopbarMobileMenu.propTypes = {\n  isAuthenticated: bool.isRequired,\n  currentUserHasListings: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  currentPage: string,\n  notificationCount: number,\n  onLogout: func.isRequired\n};\nexport default TopbarMobileMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopbarMobileMenu\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/Topbar/TopbarMobileMenu/TopbarMobileMenu.js"],"names":["React","PropTypes","classNames","ACCOUNT_SETTINGS_PAGES","FormattedMessage","propTypes","ensureCurrentUser","AvatarLarge","InlineTextButton","NamedLink","NotificationBadge","css","TopbarMobileMenu","props","isAuthenticated","currentPage","currentUserHasListings","currentUser","notificationCount","onLogout","user","signup","signupLink","login","loginLink","signupOrLogin","authenticationLinks","root","content","authenticationGreeting","lineBreak","footer","createNewListingLink","notificationCountBadge","notificationBadge","displayName","attributes","profile","firstName","currentPageClass","page","isAccountSettingsPage","includes","avatar","greeting","logoutButton","inbox","tab","navigationLink","spacer","defaultProps","bool","func","number","string","isRequired"],"mappings":"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","sourcesContent":["/**\r\n *  TopbarMobileMenu prints the menu content for authenticated user or\r\n * shows login actions for those who are not authenticated.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { ACCOUNT_SETTINGS_PAGES } from '../../../routing/routeConfiguration';\r\nimport { FormattedMessage } from '../../../util/reactIntl';\r\nimport { propTypes } from '../../../util/types';\r\nimport { ensureCurrentUser } from '../../../util/data';\r\n\r\nimport { AvatarLarge, InlineTextButton, NamedLink, NotificationBadge } from '../../../components';\r\n\r\nimport css from './TopbarMobileMenu.module.css';\r\n\r\nconst TopbarMobileMenu = props => {\r\n  const {\r\n    isAuthenticated,\r\n    currentPage,\r\n    currentUserHasListings,\r\n    currentUser,\r\n    notificationCount,\r\n    onLogout,\r\n  } = props;\r\n\r\n  const user = ensureCurrentUser(currentUser);\r\n\r\n  if (!isAuthenticated) {\r\n    const signup = (\r\n      <NamedLink name=\"SignupPage\" className={css.signupLink}>\r\n        <FormattedMessage id=\"TopbarMobileMenu.signupLink\" />\r\n      </NamedLink>\r\n    );\r\n\r\n    const login = (\r\n      <NamedLink name=\"LoginPage\" className={css.loginLink}>\r\n        <FormattedMessage id=\"TopbarMobileMenu.loginLink\" />\r\n      </NamedLink>\r\n    );\r\n\r\n    const signupOrLogin = (\r\n      <span className={css.authenticationLinks}>\r\n        <FormattedMessage id=\"TopbarMobileMenu.signupOrLogin\" values={{ signup, login }} />\r\n      </span>\r\n    );\r\n    return (\r\n      <div className={css.root}>\r\n        <div className={css.content}>\r\n          <div className={css.authenticationGreeting}>\r\n            <FormattedMessage\r\n              id=\"TopbarMobileMenu.unauthorizedGreeting\"\r\n              values={{ lineBreak: <br />, signupOrLogin }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={css.footer}>\r\n          <NamedLink className={css.createNewListingLink} name=\"NewListingPage\">\r\n            <FormattedMessage id=\"TopbarMobileMenu.newListingLink\" />\r\n          </NamedLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const notificationCountBadge =\r\n    notificationCount > 0 ? (\r\n      <NotificationBadge className={css.notificationBadge} count={notificationCount} />\r\n    ) : null;\r\n\r\n  const displayName = user.attributes.profile.firstName;\r\n  const currentPageClass = page => {\r\n    const isAccountSettingsPage =\r\n      page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\r\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\r\n  };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <AvatarLarge className={css.avatar} user={currentUser} />\r\n      <div className={css.content}>\r\n        <span className={css.greeting}>\r\n          <FormattedMessage id=\"TopbarMobileMenu.greeting\" values={{ displayName }} />\r\n        </span>\r\n        <InlineTextButton rootClassName={css.logoutButton} onClick={onLogout}>\r\n          <FormattedMessage id=\"TopbarMobileMenu.logoutLink\" />\r\n        </InlineTextButton>\r\n        <NamedLink\r\n          className={classNames(css.inbox, currentPageClass('InboxPage'))}\r\n          name=\"InboxPage\"\r\n          params={{ tab: currentUserHasListings ? 'sales' : 'orders' }}\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.inboxLink\" />\r\n          {notificationCountBadge}\r\n        </NamedLink>\r\n        <NamedLink\r\n          className={classNames(css.navigationLink, currentPageClass('ManageListingsPage'))}\r\n          name=\"ManageListingsPage\"\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.yourListingsLink\" />\r\n        </NamedLink>\r\n        <NamedLink\r\n          className={classNames(css.navigationLink, currentPageClass('ProfileSettingsPage'))}\r\n          name=\"ProfileSettingsPage\"\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.profileSettingsLink\" />\r\n        </NamedLink>\r\n        <NamedLink\r\n          className={classNames(css.navigationLink, currentPageClass('AccountSettingsPage'))}\r\n          name=\"AccountSettingsPage\"\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.accountSettingsLink\" />\r\n        </NamedLink>\r\n        <div className={css.spacer} />\r\n      </div>\r\n      <div className={css.footer}>\r\n        <NamedLink className={css.createNewListingLink} name=\"NewListingPage\">\r\n          <FormattedMessage id=\"TopbarMobileMenu.newListingLink\" />\r\n        </NamedLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTopbarMobileMenu.defaultProps = { currentUser: null, notificationCount: 0, currentPage: null };\r\n\r\nconst { bool, func, number, string } = PropTypes;\r\n\r\nTopbarMobileMenu.propTypes = {\r\n  isAuthenticated: bool.isRequired,\r\n  currentUserHasListings: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  currentPage: string,\r\n  notificationCount: number,\r\n  onLogout: func.isRequired,\r\n};\r\n\r\nexport default TopbarMobileMenu;\r\n"]},"metadata":{},"sourceType":"module"}