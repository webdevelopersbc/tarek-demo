{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\CookieConsent\\\\CookieConsent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from '../../util/reactIntl';\nimport { ExternalLink } from '../../components';\nimport classNames from 'classnames';\nimport css from './CookieConsent.module.css';\n\nclass CookieConsent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n    this.onAcceptCookies = this.onAcceptCookies.bind(this);\n    this.saveCookieConsent = this.saveCookieConsent.bind(this);\n  }\n\n  componentDidMount() {\n    const cookies = document.cookie.split('; ').reduce((acc, c) => {\n      const [name, value] = c.split('=');\n      return { ...acc,\n        [name]: decodeURIComponent(value)\n      };\n    }, {});\n\n    if (cookies.euCookiesAccepted !== '1') {\n      this.setState({\n        show: true\n      });\n    }\n  }\n\n  onAcceptCookies() {\n    this.saveCookieConsent();\n    this.setState({\n      show: false\n    });\n  }\n\n  saveCookieConsent() {\n    // We create date object and modify it to show date 10 years into the future.\n    let expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 10); // Save the cookie with expiration date\n\n    document.cookie = 'euCookiesAccepted=1; path=/; expires=' + expirationDate.toGMTString();\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName\n    } = this.props;\n    const isServer = typeof window === 'undefined'; // Server side doesn't know about cookie consent\n\n    if (isServer || !this.state.show) {\n      return null;\n    } else {\n      const cookieLink = /*#__PURE__*/React.createElement(ExternalLink, {\n        href: \"https://cookiesandyou.com\",\n        className: css.cookieLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"CookieConsent.cookieLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }));\n      const classes = classNames(rootClassName || css.root, className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: css.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"CookieConsent.message\",\n        values: {\n          cookieLink\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: css.continueBtn,\n        onClick: this.onAcceptCookies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"CookieConsent.continue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nconst {\n  string\n} = PropTypes;\nCookieConsent.defaultProps = {\n  className: null,\n  rootClassName: null\n};\nCookieConsent.propTypes = {\n  className: string,\n  rootClassName: string\n};\nexport default CookieConsent;","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/CookieConsent/CookieConsent.js"],"names":["React","Component","PropTypes","FormattedMessage","ExternalLink","classNames","css","CookieConsent","constructor","props","state","show","onAcceptCookies","bind","saveCookieConsent","componentDidMount","cookies","document","cookie","split","reduce","acc","c","name","value","decodeURIComponent","euCookiesAccepted","setState","expirationDate","Date","setFullYear","getFullYear","toGMTString","render","className","rootClassName","isServer","window","cookieLink","classes","root","message","continueBtn","string","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormattedMessage } from '../../util/reactIntl';\r\nimport { ExternalLink } from '../../components';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './CookieConsent.module.css';\r\n\r\nclass CookieConsent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { show: false };\r\n    this.onAcceptCookies = this.onAcceptCookies.bind(this);\r\n    this.saveCookieConsent = this.saveCookieConsent.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cookies = document.cookie.split('; ').reduce((acc, c) => {\r\n      const [name, value] = c.split('=');\r\n      return { ...acc, [name]: decodeURIComponent(value) };\r\n    }, {});\r\n\r\n    if (cookies.euCookiesAccepted !== '1') {\r\n      this.setState({ show: true });\r\n    }\r\n  }\r\n\r\n  onAcceptCookies() {\r\n    this.saveCookieConsent();\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  saveCookieConsent() {\r\n    // We create date object and modify it to show date 10 years into the future.\r\n    let expirationDate = new Date();\r\n    expirationDate.setFullYear(expirationDate.getFullYear() + 10);\r\n    // Save the cookie with expiration date\r\n    document.cookie = 'euCookiesAccepted=1; path=/; expires=' + expirationDate.toGMTString();\r\n  }\r\n\r\n  render() {\r\n    const { className, rootClassName } = this.props;\r\n    const isServer = typeof window === 'undefined';\r\n\r\n    // Server side doesn't know about cookie consent\r\n    if (isServer || !this.state.show) {\r\n      return null;\r\n    } else {\r\n      const cookieLink = (\r\n        <ExternalLink href=\"https://cookiesandyou.com\" className={css.cookieLink}>\r\n          <FormattedMessage id=\"CookieConsent.cookieLink\" />\r\n        </ExternalLink>\r\n      );\r\n      const classes = classNames(rootClassName || css.root, className);\r\n\r\n      return (\r\n        <div className={classes}>\r\n          <div className={css.message}>\r\n            <FormattedMessage id=\"CookieConsent.message\" values={{ cookieLink }} />\r\n          </div>\r\n          <button className={css.continueBtn} onClick={this.onAcceptCookies}>\r\n            <FormattedMessage id=\"CookieConsent.continue\" />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst { string } = PropTypes;\r\n\r\nCookieConsent.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nCookieConsent.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n};\r\n\r\nexport default CookieConsent;\r\n"]},"metadata":{},"sourceType":"module"}