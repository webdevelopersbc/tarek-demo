{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\components\\\\StripeBankAccountTokenInputField\\\\StripeBankAccountTokenInputField.example.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport { Button } from '../../components';\nimport { stripeCountryConfigs } from './StripeBankAccountTokenInputField.util';\nimport StripeBankAccountTokenInputField from './StripeBankAccountTokenInputField';\nimport * as validators from '../../util/validators';\n\nconst formComponent = country => props => /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, props, {\n  render: fieldRenderProps => {\n    const {\n      formName,\n      handleSubmit,\n      onChange\n    } = fieldRenderProps;\n    const currency = stripeCountryConfigs(country).currency;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormSpy, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(StripeBankAccountTokenInputField, {\n      id: `${formName}.token`,\n      name: \"token\",\n      country: country,\n      currency: currency,\n      formName: formName,\n      validate: validators.required(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: 24\n      },\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n})); // DE\n\n\nexport const DE_EUR = {\n  component: formComponent('DE'),\n  props: {\n    formName: 'DE_EUR',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('values submitted:', values);\n    }\n  },\n  group: 'inputs'\n}; // US\n\nexport const US_USD = {\n  component: formComponent('US'),\n  props: {\n    formName: 'US_USD',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('values submitted:', values);\n    }\n  },\n  group: 'inputs'\n}; // GB\n\nexport const GB_GBP = {\n  component: formComponent('GB'),\n  props: {\n    formName: 'GB_GBP',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('values submitted:', values);\n    }\n  },\n  group: 'inputs'\n}; // AU\n\nexport const AU_AUD = {\n  component: formComponent('AU'),\n  props: {\n    formName: 'AU_AUD',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('values submitted:', values);\n    }\n  },\n  group: 'inputs'\n}; // CA\n\nexport const CA_CAD = {\n  component: formComponent('CA'),\n  props: {\n    formName: 'CA_CAD',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('values submitted:', values);\n    }\n  },\n  group: 'inputs'\n}; // JP\n\nexport const JP_JPY = {\n  component: formComponent('JP'),\n  props: {\n    formName: 'JP_JPY',\n    onChange: formState => {\n      if (formState.dirty) {\n        console.log('form values changed to:', formState.values);\n      }\n    },\n    onSubmit: values => {\n      console.log('values submitted:', values);\n    }\n  },\n  group: 'inputs'\n};","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/components/StripeBankAccountTokenInputField/StripeBankAccountTokenInputField.example.js"],"names":["React","Form","FinalForm","FormSpy","Button","stripeCountryConfigs","StripeBankAccountTokenInputField","validators","formComponent","country","props","fieldRenderProps","formName","handleSubmit","onChange","currency","e","preventDefault","required","marginTop","DE_EUR","component","formState","dirty","console","log","values","onSubmit","group","US_USD","GB_GBP","AU_AUD","CA_CAD","JP_JPY"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport { Button } from '../../components';\r\nimport { stripeCountryConfigs } from './StripeBankAccountTokenInputField.util';\r\nimport StripeBankAccountTokenInputField from './StripeBankAccountTokenInputField';\r\nimport * as validators from '../../util/validators';\r\n\r\nconst formComponent = country => props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={fieldRenderProps => {\r\n      const { formName, handleSubmit, onChange } = fieldRenderProps;\r\n      const currency = stripeCountryConfigs(country).currency;\r\n\r\n      return (\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormSpy onChange={onChange} />\r\n          <StripeBankAccountTokenInputField\r\n            id={`${formName}.token`}\r\n            name=\"token\"\r\n            country={country}\r\n            currency={currency}\r\n            formName={formName}\r\n            validate={validators.required(' ')}\r\n          />\r\n          <Button style={{ marginTop: 24 }} type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\n// DE\r\nexport const DE_EUR = {\r\n  component: formComponent('DE'),\r\n  props: {\r\n    formName: 'DE_EUR',\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('values submitted:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n\r\n// US\r\nexport const US_USD = {\r\n  component: formComponent('US'),\r\n  props: {\r\n    formName: 'US_USD',\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('values submitted:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n\r\n// GB\r\nexport const GB_GBP = {\r\n  component: formComponent('GB'),\r\n  props: {\r\n    formName: 'GB_GBP',\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('values submitted:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n\r\n// AU\r\nexport const AU_AUD = {\r\n  component: formComponent('AU'),\r\n  props: {\r\n    formName: 'AU_AUD',\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('values submitted:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n\r\n// CA\r\nexport const CA_CAD = {\r\n  component: formComponent('CA'),\r\n  props: {\r\n    formName: 'CA_CAD',\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('values submitted:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n\r\n// JP\r\nexport const JP_JPY = {\r\n  component: formComponent('JP'),\r\n  props: {\r\n    formName: 'JP_JPY',\r\n    onChange: formState => {\r\n      if (formState.dirty) {\r\n        console.log('form values changed to:', formState.values);\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      console.log('values submitted:', values);\r\n    },\r\n  },\r\n  group: 'inputs',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}