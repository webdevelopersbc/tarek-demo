{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amardeep\\\\tarek_project\\\\ftw-product\\\\src\\\\containers\\\\SearchPage\\\\FilterForm\\\\FilterForm.js\";\nimport React from 'react';\nimport { bool, func, node, object } from 'prop-types';\nimport classNames from 'classnames';\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\nimport { Form } from '../../../components';\nimport css from './FilterForm.module.css';\n\nconst FilterFormComponent = props => {\n  const {\n    liveEdit,\n    onChange,\n    onSubmit,\n    onCancel,\n    onClear,\n    ...rest\n  } = props;\n\n  if (liveEdit && !onChange) {\n    throw new Error('FilterForm: if liveEdit is true you need to provide onChange function');\n  }\n\n  if (!liveEdit && !(onCancel && onClear && onSubmit)) {\n    throw new Error('FilterForm: if liveEdit is false you need to provide onCancel, onClear, and onSubmit functions');\n  }\n\n  const handleChange = formState => {\n    if (formState.dirty) {\n      onChange(formState.values);\n    }\n  };\n\n  const formCallbacks = liveEdit ? {\n    onSubmit: () => null\n  } : {\n    onSubmit,\n    onCancel,\n    onClear\n  };\n  return /*#__PURE__*/React.createElement(FinalForm, Object.assign({}, rest, formCallbacks, {\n    mutators: { ...arrayMutators\n    },\n    render: formRenderProps => {\n      const {\n        id,\n        form,\n        handleSubmit,\n        onClear,\n        onCancel,\n        style,\n        paddingClasses,\n        intl,\n        children\n      } = formRenderProps;\n\n      const handleCancel = () => {\n        // reset the final form to initialValues\n        form.reset();\n        onCancel();\n      };\n\n      const clear = intl.formatMessage({\n        id: 'FilterForm.clear'\n      });\n      const cancel = intl.formatMessage({\n        id: 'FilterForm.cancel'\n      });\n      const submit = intl.formatMessage({\n        id: 'FilterForm.submit'\n      });\n      const classes = classNames(css.root);\n      return /*#__PURE__*/React.createElement(Form, {\n        id: id,\n        className: classes,\n        onSubmit: handleSubmit,\n        tabIndex: \"0\",\n        style: { ...style\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(paddingClasses || css.contentWrapper),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, children), liveEdit ? /*#__PURE__*/React.createElement(FormSpy, {\n        onChange: handleChange,\n        subscription: {\n          values: true,\n          dirty: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: css.buttonsWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: css.clearButton,\n        type: \"button\",\n        onClick: onClear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, clear), /*#__PURE__*/React.createElement(\"button\", {\n        className: css.cancelButton,\n        type: \"button\",\n        onClick: handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, cancel), /*#__PURE__*/React.createElement(\"button\", {\n        className: css.submitButton,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, submit)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c = FilterFormComponent;\nFilterFormComponent.defaultProps = {\n  liveEdit: false,\n  style: null,\n  onCancel: null,\n  onChange: null,\n  onClear: null,\n  onSubmit: null\n};\nFilterFormComponent.propTypes = {\n  liveEdit: bool,\n  onCancel: func,\n  onChange: func,\n  onClear: func,\n  onSubmit: func,\n  style: object,\n  children: node.isRequired,\n  // form injectIntl\n  intl: intlShape.isRequired\n};\nconst FilterForm = injectIntl(FilterFormComponent);\n_c2 = FilterForm;\nexport default FilterForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterFormComponent\");\n$RefreshReg$(_c2, \"FilterForm\");","map":{"version":3,"sources":["D:/Amardeep/tarek_project/ftw-product/src/containers/SearchPage/FilterForm/FilterForm.js"],"names":["React","bool","func","node","object","classNames","Form","FinalForm","FormSpy","arrayMutators","injectIntl","intlShape","css","FilterFormComponent","props","liveEdit","onChange","onSubmit","onCancel","onClear","rest","Error","handleChange","formState","dirty","values","formCallbacks","formRenderProps","id","form","handleSubmit","style","paddingClasses","intl","children","handleCancel","reset","clear","formatMessage","cancel","submit","classes","root","contentWrapper","buttonsWrapper","clearButton","cancelButton","submitButton","defaultProps","propTypes","isRequired","FilterForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { bool, func, node, object } from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport arrayMutators from 'final-form-arrays';\r\n\r\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\r\n\r\nimport { Form } from '../../../components';\r\n\r\nimport css from './FilterForm.module.css';\r\n\r\nconst FilterFormComponent = props => {\r\n  const { liveEdit, onChange, onSubmit, onCancel, onClear, ...rest } = props;\r\n\r\n  if (liveEdit && !onChange) {\r\n    throw new Error('FilterForm: if liveEdit is true you need to provide onChange function');\r\n  }\r\n\r\n  if (!liveEdit && !(onCancel && onClear && onSubmit)) {\r\n    throw new Error(\r\n      'FilterForm: if liveEdit is false you need to provide onCancel, onClear, and onSubmit functions'\r\n    );\r\n  }\r\n\r\n  const handleChange = formState => {\r\n    if (formState.dirty) {\r\n      onChange(formState.values);\r\n    }\r\n  };\r\n\r\n  const formCallbacks = liveEdit ? { onSubmit: () => null } : { onSubmit, onCancel, onClear };\r\n  return (\r\n    <FinalForm\r\n      {...rest}\r\n      {...formCallbacks}\r\n      mutators={{ ...arrayMutators }}\r\n      render={formRenderProps => {\r\n        const {\r\n          id,\r\n          form,\r\n          handleSubmit,\r\n          onClear,\r\n          onCancel,\r\n          style,\r\n          paddingClasses,\r\n          intl,\r\n          children,\r\n        } = formRenderProps;\r\n\r\n        const handleCancel = () => {\r\n          // reset the final form to initialValues\r\n          form.reset();\r\n          onCancel();\r\n        };\r\n\r\n        const clear = intl.formatMessage({ id: 'FilterForm.clear' });\r\n        const cancel = intl.formatMessage({ id: 'FilterForm.cancel' });\r\n        const submit = intl.formatMessage({ id: 'FilterForm.submit' });\r\n\r\n        const classes = classNames(css.root);\r\n\r\n        return (\r\n          <Form\r\n            id={id}\r\n            className={classes}\r\n            onSubmit={handleSubmit}\r\n            tabIndex=\"0\"\r\n            style={{ ...style }}\r\n          >\r\n            <div className={classNames(paddingClasses || css.contentWrapper)}>{children}</div>\r\n\r\n            {liveEdit ? (\r\n              <FormSpy onChange={handleChange} subscription={{ values: true, dirty: true }} />\r\n            ) : (\r\n              <div className={css.buttonsWrapper}>\r\n                <button className={css.clearButton} type=\"button\" onClick={onClear}>\r\n                  {clear}\r\n                </button>\r\n                <button className={css.cancelButton} type=\"button\" onClick={handleCancel}>\r\n                  {cancel}\r\n                </button>\r\n                <button className={css.submitButton} type=\"submit\">\r\n                  {submit}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nFilterFormComponent.defaultProps = {\r\n  liveEdit: false,\r\n  style: null,\r\n  onCancel: null,\r\n  onChange: null,\r\n  onClear: null,\r\n  onSubmit: null,\r\n};\r\n\r\nFilterFormComponent.propTypes = {\r\n  liveEdit: bool,\r\n  onCancel: func,\r\n  onChange: func,\r\n  onClear: func,\r\n  onSubmit: func,\r\n  style: object,\r\n  children: node.isRequired,\r\n\r\n  // form injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst FilterForm = injectIntl(FilterFormComponent);\r\n\r\nexport default FilterForm;\r\n"]},"metadata":{},"sourceType":"module"}